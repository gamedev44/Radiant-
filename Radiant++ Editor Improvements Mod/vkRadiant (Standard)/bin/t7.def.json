  [
	{
		"templatename":"template_ai",
		"classcolor":"0 0 0",
		"desc":"Base AI template used for aitype and aivehicle.",
		"defaultmdl":{
			"type":"string",
			"assetType":"xmodel",
			"hidden":"true",
			"noExport":"true"
		},
		"origin":{
			"type":"vec3d",
			"value":"0 0 0"
		},
		"angles":{
			"type":"vec3d",
			"value":"0 0 0"
		},
		"model":{
			"type":"string",
			"assetType":"xmodel"
		},
		"coop_count":{
			"type":"multiInt",
			"group":"[SPAWN MANAGER]",
			"propName1": "count",
			"propName2": "sm_count_2player",
			"propName3": "sm_count_3player",
			"propName4": "sm_count_4player",
			"desc":"maximum ai to spawn over lifetime."
		},
		"script_minplayers":{
			"type":"int",
			"desc":"Delete this spawner if there isn't at least this many players in the game.",
			"min":"0",
			"max":"4",
			"value":"0"
		},
		"script_maxplayers":{
			"type":"int",
			"desc":"Delete this spawner if there is more than this many players in the game.",
			"min":"0",
			"max":"4",
			"value":"0"
		},
		"count":{
			"type":"int",
			"desc":"maximum ai to spawn from this spawner.",
			"min":"0",
			"max":"100000",
			"value":"1"
		},
		"sm_count_2player":{
			"type":"int",
			"desc":"maximum ai to spawn over lifetime for a 2 player game. Set to -1 for infinite.",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"sm_count_3player":{
			"type":"int",
			"desc":"maximum ai to spawn over lifetime. Set to -1 for infinite.",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"sm_count_4player":{
			"type":"int",
			"desc":"maximum ai to spawn over lifetime. Set to -1 for infinite.",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"targetname":{
			"type":"string"
		},
		"coop_active_count_min":{
			"type":"multiInt",
			"group":"[SPAWN MANAGER]",
			"propName1": "sm_active_count_min",
			"propName2": "sm_active_count_min_2player",
			"propName3": "sm_active_count_min_3player",
			"propName4": "sm_active_count_min_4player",
			"desc":"minimum simultanious ai active"
		},
		"sm_active_count_min":{
			"type":"int",
			"desc":"minimum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"3",
			"hidden":"true"
		},
		"sm_active_count_min_2player":{
			"type":"int",
			"desc":"minimum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"sm_active_count_min_3player":{
			"type":"int",
			"desc":"minimum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"sm_active_count_min_4player":{
			"type":"int",
			"desc":"minimum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"coop_active_count_max":{
			"type":"multiInt",
			"group":"[SPAWN MANAGER]",
			"propName1": "sm_active_count_max",
			"propName2": "sm_active_count_max_2player",
			"propName3": "sm_active_count_max_3player",
			"propName4": "sm_active_count_max_4player",
			"desc":"maximum simultanious ai active"
		},
		"sm_active_count_max":{
			"type":"int",
			"desc":"maximum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"3",
			"hidden":"true"
		},
		"sm_active_count_max_2player":{
			"type":"int",
			"desc":"maximum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"sm_active_count_max_3player":{
			"type":"int",
			"desc":"maximum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"sm_active_count_max_4player":{
			"type":"int",
			"desc":"maximum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"script_dropammo":{
			"type":"bool",
			"desc":"This AI will drop an ammo pouch when he dies.",
			"group":"[MISC]",
			"value":"true"
		},
		"script_killspawner":{
			"type":"string",
			"group":"[MISC]",
			"desc":"Spawner will delete when a trigger whith the same script_killspawner triggers.",
			"autoInc" : true
		},
		"script_aigroup":{
			"type":"string",
			"group":"[MISC]",
			"desc":"Put this AI in an ai group."
		},
		"script_aisquadname":{
			"type":"string",
			"group":"[MISC]",
			"desc":"AI's with the same squad name will join/form a squad and try to stick together in combat.",
			"autoInc" : true
		}
	},
	{
		"templatename":"template_aitype",
		"parents":"template_ai",
		"classcolor":"0 0 0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Generated entity class. Created from asset 'aitype' using the 'template_aitype' entity template.",
		"export":{
			"type":"int",
			"min":"0",
			"value":"0"
		},
		"SPAWNER":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"desc":"makes this a spawner instead of a guy",
			"spawnflag":"1",
			"value":"true"
		},
		"MAKEROOM":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"desc":"will try to delete an AI if spawning fails from too many AI",
			"spawnflag":"2",
			"value":"false"
		},
		"UNDELETABLE":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"desc":"this AI (or AI spawned from here) cannot be deleted to make room for MAKEROOM guys",
			"spawnflag":"4",
			"value":"false"
		},
		"ALERTONSPAWN":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"desc":"this AI when spawned will get a snapshot of perfect info about all enemies",
			"spawnflag":"8",
			"value":"true"
		},
		"SCRIPT_FORCESPAWN":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"desc":"this AI will spawned even if players can see him spawning.",
			"spawnflag":"16",
			"value":"false"
		},
		"SM_PRIORITY":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"desc":"Make the Spawn Manager spawn from this spawner before other spawners.",
			"spawnflag":"32",
			"value":"false"
		},
		"SCRIPT_INFINITESPAWN":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"desc":"Ignore count.",
			"spawnflag":"64",
			"value":"false"
		},
		"SCRIPT_DELETEONZEROCOUNT":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"desc":"Delete this spawner when count reaches zero.",
			"spawnflag":"128",
			"value":"false"
		}
	},
	{
		"templatename":"template_aivehicle",
		"parents":"template_ai",
		"classcolor":"1 1 0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Generated entity class. Created from asset 'vehicle' with isSentient set to true.",
		"vehicletype":{
			"type":"string",
			"assetType":"vehicle",
			"forceExport":"true"
		},
		"script":{
			"type":"string"
		},
		"script_team":{
			"type":"string",
			"desc":"Set the team of this vehicle."
		},
			"USABLE":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"SPAWNER":{
			"type":"bool",
			"spawnflag":"2",
			"value":"true"
		},
		"UNDELETABLE":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"desc":"this AI (or AI spawned from here) cannot be deleted to make room for MAKEROOM guys",
			"spawnflag":"4",
			"value":"false"
		},
		"MAKEROOM":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"desc":"will try to delete an AI if spawning fails from too many AI",
			"spawnflag":"8",
			"value":"false"
		},
		"SCRIPT_FORCESPAWN":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"desc":"this AI will spawned even if players can see him spawning.",
			"spawnflag":"16",
			"value":"false"
		},
		"SM_PRIORITY":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"desc":"Make the Spawn Manager spawn from this spawner before other spawners.",
			"spawnflag":"32",
			"value":"false"
		},
		"SCRIPT_INFINITESPAWN":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"desc":"Ignore count.",
			"spawnflag":"64",
			"value":"false"
		},
		"SCRIPT_DELETEONZEROCOUNT":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"desc":"Delete this spawner when count reaches zero.",
			"spawnflag":"128",
			"value":"false"
		},
		"_color":{
			"type":"color",
			"value":"1 1 0"
		}
	},
	{
		"templatename":"template_vehicle",
		"classcolor":"1 1 0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Generated entity class. Created from asset 'vehicle' using the 'template_vehicle' entity template.",
		"origin":{
			"type":"vec3d",
			"value":"0 0 0"
		},
		"angles":{
			"type":"vec3d",
			"value":"0 0 0"
		},
		"defaultmdl":{
			"type":"string",
			"assetType":"xmodel",
			"hidden":"true",
			"noExport":"true"
		},
		"model":{
			"type":"string",
			"assetType":"xmodel"
		},
		"targetname":{
			"type":"string"
		},
		"vehicletype":{
			"type":"string",
			"assetType":"vehicle",
			"forceExport":"true"
		},
		"script":{
			"type":"string"
		},
		"USABLE":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"SPAWNER":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false"
		},
		"script_vehiclespawngroup":{
			"type":"string",
			"autoInc" : true,
			"group" : "Vehicle Script"
		},
		"script_vehiclestartmove":{
			"type":"string",
			"autoInc" : true,
			"group" : "Vehicle Script"
		},
		"script_vehiclegroupdelete":{
			"type":"string",
			"autoInc" : true,
			"group" : "Vehicle Script"
		},
		"script_vehicleride":{
			"type":"string",
			"autoInc" : true,
			"group" : "Vehicle Script"
		},
		"script_vehiclewalk":{
			"type":"string",
			"autoInc" : true,
			"group" : "Vehicle Script"
		},
		"script_team":{
			"type":"string",
			"desc":"Set the team of this vehicle.",
			"group" : "Vehicle Script"
		},
		"script_badplace":{
			"type":"bool",
			"desc":"Enables the creation of badplaces around moving vehicles to make AI stay away from them.",
			"group":"Vehicle Script",
			"value":"true"
		},
		"script_disconnectpaths":{
			"type":"bool",
			"desc":"cuts a hole on navmesh so AI will not able to run into this vehicle.",
			"group":"Vehicle Script"
		},
		"script_disconnectpath_detail":{
			"type":"int",
			"desc":"How detailed the cutting on navmesh should be to fit, can be 0, 1, or 2. Adding 1 will make the cutting 10 times slower.",
			"group":"Vehicle Script",
			"value":"0"
		},
		"script_vehicleattackgroup":{
			"type":"string",
			"autoInc":true,
			"group":"Vehicle Script"
		},
		"script_vehiclefocusfiregroup":{
			"type":"string",
			"autoInc":true,
			"group":"Vehicle Script"
		},
		"script_delete":{
			"type":"bool",
			"desc":"Makes a vehicle delete at the end of its path.",
			"group":"Vehicle Script"
		},
		"script_enable_turret0":{
			"type":"bool",
			"desc":"Enables turret.",
			"group":"Turrets"
		},
		"script_enable_turret1":{
			"type":"bool",
			"desc":"Enables turret.",
			"group":"Turrets"
		},
		"script_enable_turret2":{
			"type":"bool",
			"desc":"Enables turret.",
			"group":"Turrets"
		},
		"script_enable_turret3":{
			"type":"bool",
			"desc":"Enables turret.",
			"group":"Turrets"
		},
		"script_enable_turret4":{
			"type":"bool",
			"desc":"Enables turret.",
			"group":"Turrets"
		},
		"script_auto_use":{
			"type":"bool",
			"desc":"Automatically get users for enabled turrets.",
			"group":"Turrets"
		},
		"script_auto_use_radius":{
			"type":"float",
			"desc":"Radius to automatically get users for enabled turrets.",
			"group":"Turrets"
		},
		"_color":{
			"type":"color",
			"value":"1 1 0"
		}
	},
	{
		"templatename":"template_weapon",
		"classcolor":".3 .3 1",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Generated entity class. Created from asset 'weapon' using the 'template_weapon' entity template.",
		"origin":{
			"type":"vec3d",
			"value":"0 0 0"
		},
		"angles":{
			"type":"vec3d",
			"value":"0 0 0"
		},
		"defaultmdl":{
			"type":"string",
			"assetType":"xmodel",
			"hidden":"true",
			"noExport":"true"
		},
		"model":{
			"type":"string",
			"assetType":"xmodel"
		},
		"displayname":{
			"type":"string"
		},
		"script":{
			"type":"string"
		},
		"count":{
			"type":"int",
			"desc":"max AI to ever spawn from this spawner",
			"min":"0",
			"value":"0"
		},
		"SUSPENDED":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"SPIN":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false"
		},
		"RESPAWN":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false"
		},
		"_color":{
			"type":"color",
			"value":"0.3 0.3 1.0"
		}
	},
	{
		"templatename":"template_glass",
		"classcolor":"1 0 0",
		"desc":"Generated entity class. Created from asset 'glass' using the 'template_glass' entity template.",
		"type":{
			"type":"string",
			"assetType":"glass",
			"forceExport":"true",
			"desc":"The type of the glass as defined in the asset database."
		},
		"_color":{
			"type":"color",
			"value":"1 0 0"
		}
	},
	{
		"templatename":"template_zbarrier",
		"classcolor":".3 .3 1",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Generated entity class. Created from asset 'zbarrier' using the 'template_zbarrier' entity template.",
		"origin":{
			"type":"vec3d",
			"value":"0 0 0"
		},
		"angles":{
			"type":"vec3d",
			"value":"0 0 0"
		},
		"type":{
			"type":"string"
		},
		"barrierAnimTime":{
			"type":"float",
			"min":"0",
			"max":"1",
			"desc":"Change barrierAnimTime between 0.0 and 1.0 to preview board positions during tear animations.",
			"value":"0"
		},
		"showAlternateModel":{
			"type":"bool",
			"desc":"Use to control model rendering.",
			"value":"false"
		},
		"showUpgradedModel":{
			"type":"bool",
			"desc":"Use to control model rendering.",
			"value":"false"
		},
		"_color":{
			"type":"color",
			"value":"0.3 0.3 1.0"
		}
	},
	{
		"templatename":"template_destructibledef",
		"classcolor":".3 .3 1",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Generated entity class. Created from asset 'destructibledef' using the 'template_zbarrier' entity template.",
		"origin":{
			"type":"vec3d",
			"value":"0 0 0",
			"propEditable" : "false"
		},
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"propEditable" : "false"
		},
		"defaultmdl":{
			"type":"string",
			"assetType":"xmodel",
			"hidden":"true",
			"noExport":"true"
		},
		"model":{
			"type":"string",
			"assetType":"xmodel",
			"propEditable" : "false"
		},
		"script":{
			"type":"string"
		},
		"destructibledef":{
			"type":"string",
			"assetType":"destructibledef",
			"forceExport":"true"
		},
		"targetname":{
			"type":"string"
		},
		"dynamic_probes_only":{
			"type":"bool",
			"desc":"Only include in dynamic probes.",
			"group":"Lighting",
			"value":"false"
		},
		"include_in_probes":{
			"type":"bool",
			"desc":"Bake into light probes.",
			"group":"Lighting",
			"value":"false"
		},
    		"static": {
      		"type": "bool",
      		"desc": "Include in the baked shadows and probes.",
      		"group": "Lighting",
      		"value": "false"
    		},
		"lightingstate1":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate2":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate3":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate4":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"_color":{
			"type":"color",
			"value":"0.3 0.3 1"
		},
		"DYNAMICPATH":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		}
	},
	{
		"templatename":"template_scriptbundle",
		"classcolor":".1 .1 .3",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"Generated entity class. Created from asset 'ScriptBundle' using the 'template_scriptbundle' entity template.",
		"auto-run":{
			"type":"string",
			"enum":"no,init,play",
			"spawnflag":"0,1,2",
			"desc":"Automatically initializes or plays this scene when the map loads.",
			"value":"no"
		},
		"origin":{
			"type":"vec3d",
			"value":"0 0 0"
		},
		"angles":{
			"type":"vec3d",
			"value":"0 0 0"
		},
		"defaultmdl":{
			"type":"string",
			"assetType":"xmodel",
			"hidden":"true",
			"noExport":"true"
		},
		"model":{
			"type":"string",
			"assetType":"xmodel"
		},
		"dynamic_probes_only":{
			"type":"bool",
			"desc":"Only include in dynamic probes.",
			"group":"Lighting",
			"value":"false"
		},
		"include_in_probes":{
			"type":"bool",
			"desc":"Bake into light probes.",
			"group":"Lighting",
			"value":"false"
		},
		"lightingstate1":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate2":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate3":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate4":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"scriptbundlename":{
			"type":"string",
			"forceExport":"true",
			"assetType":"scriptbundle"
		},
		"script_flag_set":{
			"type":"string",
			"desc":"Set this flag when this scene is done."
		},
		"script_play_multiple":{
			"type":"bool",
			"value":"false",
			"desc":"Play a scene more than once."
		},
		"scriptgroup_initscenes":{
			"group":"Trigger Groups",
			"type":"string",
			"autoInc":true,
			"desc":"Triggers with matching value will init this scene."
		},
		"scriptgroup_playscenes":{
			"group":"Trigger Groups",
			"type":"string",
			"autoInc":true,
			"desc":"Triggers with matching value will play this scene."
		},
		"scriptgroup_stopscenes":{
			"group":"Trigger Groups",
			"type":"string",
			"autoInc":true,
			"desc":"Triggers with matching value will stop this scene."
		},
		"script_objective":{
			"type":"string",
			"desc":"Auto cleanup scene entities with skipto system."
		},
		"_color":{
			"type":"color",
			"value":"0.1 0.1 0.3"
		}
	},

	{
		"classname":"info_grenade_hint",
		"classcolor":"0.4 0.6 0.8",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"AI will try to get a grenade to go through this point in space when throwing a grenade.  This is how AI understand throwing grenades through windows and doors."
	},
	{
		"classname":"info_player_start",
		"classcolor":"1 0 0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"equivalent to info_player_deathmatch"
	},
	{
		"classname":"info_intermission",
		"classcolor":"0.5 0.5 1.0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Intermission is randomly viewed from one of these positions. Used for when arcademode is complete"
	},
	{
		"classname":"info_player_respawn",
		"classcolor":"0.6 0 0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"equivalent to info_player_deathmatch"
	},
	{
		"classname":"func_group",
		"classcolor":"0 0 0",
		"desc":"Used to group brushes together just for editor convenience.  They are turned into normal brushes by the utilities.",
		"type":{
			"type":"string"
		}
	},
	{
		"classname":"func_cullgroup",
		"classcolor":"0 .5 .5",
		"desc":"Used to group brushes together for culling in the portal-based renderer.  They are turned into world brushes by the utilities."
	},
	{
		"classname":"info_corona",
		"classcolor":"0 0.5 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"Corona around a light.",
		"radius":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"desc":"radius of the corona",
			"value":"20"
		},
		"color":{
			"type":"color",
			"desc":"sets the color of the corona.  The biggest value gets scaled to 1; this means that 0.1 0.1 0.1 is the same as 1 1 1.",
			"value":"1 1 1"
		},
		"intensity":{
			"type":"float",
			"min":"0",
			"max":"1",
			"desc":"controls how bright a corona is.  A value of 1 is fullbright; smaller values are dimmer.",
			"value":"1"
		}
	},
	{
		"classname":"info_null",
		"classcolor":"0 0.5 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"Used as a positional target for calculations in the utilities (spotlights, etc), but removed during gameplay.",
		"targetname":{
			"type":"string"
		},
		"_color":{
			"type":"color",
			"value":"0.0 0.5 0.0"
		}
	},
	{
		"classname":"info_notnull",
		"classcolor":"0 0.5 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"Used as a positional target for in-game calculation, like jumppad targets.",
		"_color":{
			"type":"color",
			"value":"0.0 0.5 0.0"
		}
	},
	{
		"classname":"info_notnull_big",
		"classcolor":"1 0 0",
		"bboxmin":"-16 -16 -24",
		"bboxmax":"16 16 32",
		"desc":"info_notnull with a bigger box for ease of positioning",
		"_color":{
			"type":"color",
			"value":"1 0 0"
		}
	},
	{
		"classname":"lensflare",
		"classcolor":"0 1 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"A lensflare entity can be placed to provide the lensflare effect.",
		"assetname":{
			"type":"string",
			"desc":"The lensflare asset to load",
			"value":"NONE"
		},
		"_color":{
			"type":"color",
			"value":"0 1 0"
		}
	},
	{
		"classname":"led_reference",
		"classcolor":"0 0.5 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"Used as a positional reference for weapons, etc., for export into LED light files. Not visible during game play.",
		"targetname":{
			"desc":"Object to be referenced in Asset Viewer",
			"type":"string",
			"value":"weapon"
		}
	},
	{
		"classname":"klf",
		"classcolor":"0 1 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"A lensflare entity can be placed to provide the lensflare effect.",
		"assetname":{
			"type":"string",
			"desc":"The lensflare asset to load",
			"value":"NONE"
		},
		"_color":{
			"type":"color",
			"value":"0 0 1"
		}
	},

	{
		"classname":"umbra_tome",
		"classcolor":"0.3 0.6 0.8",
		"desc":"Add brushes with the umbra_play_space to this entity to define an independent tome."
	},
	
	{
		"classname":"umbra_parameter_volume",
		"classcolor":"0.3 0.6 0.8",
		"desc":"Add brushes and kvp to this entity to create a custom umbra parameter volume."
	},

	{
		"classname":"light",
		"classcolor":"0 1 0,1 0.4 0.4,0.7 0.1 0.7",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"A light pointed at a target will be a spotlight facing the target. They default to having a circle with 64 unit radius around the target.",
		"PRIMARY_TYPE":{
			"type":"string",
			"group":"LIGHTING/!TYPE",
			"enum":"PRIMARY_OMNI,PRIMARY_SPOT,PRIMARY_DIR",
			"spawnflag":"2,4",
			"desc":"Type of light.",
			"value":"PRIMARY_OMNI"
		},
		"PRIMARY_NOSHADOWMAP":{
			"type":"bool",
			"group":"LIGHTING/!TYPE",
			"desc":"Prevents a primary light from ever having a shadowmap.",
			"spawnflag":"16",
			"value":"false"
		},
		"PROBE_ONLY":{
			"type":"bool",
			"group":"LIGHTING/!TYPE",
			"desc":"If enabled this light will only be seen by the reflection probes",
			"value":"false"
		},
		"NO_CULL":{
			"type":"bool",
			"group":"LIGHTING/!TYPE",
			"desc":"If enabled this light will not calculate a culling volume",
			"value":"false"
		},
		"_color":{
			"type":"color",
			"group":"LIGHTING/SETUP",
			"desc":"Sets the color of the light.",
			"value":"1 1 1"
		},
		"stops":{
			"type":"float",
			"group":"LIGHTING/SETUP",
			"min":"-32",
			"max":"32",
			"desc":"Controls how bright a light is.",
			"value":"16",
			"singleStep":".1",
			"manipulatorid":"2",
			"manipulatordiagonals":"false",
			"manipulator":"-invisibox.y"
		},
		"bake_intensity_scale":{
			"type":"float",
			"group":"LIGHTING/SETUP",
			"min":"0",
			"max":"100",
			"desc":"Adjusts the brightness of a light for GI baking.",
			"value":"1",
			"singleStep":".1"
		},
		"spec_comp":{
			"type":"float",
			"group":"LIGHTING/SETUP",
			"min":"-14",
			"max":"14",
			"singleStep":"0.25",
			"desc":"Specular boost (in stops).",
			"value":"0"
		},
		"Rec2020":{
			"type":"bool",
			"desc":"Enables rec2020 color gammut.",
			"value":"false",
			"hidden":"false",
			"group":"LIGHTING/SETUP"
		},
		"fov_outer":{
			"type":"float",
			"group":"LIGHTING/SHAPING",
			"min":"0",
			"max":"180",
			"desc":"Overrides the fov of a spotlight from the 64 unit circle around the target.  It is in degrees.  A value of 90 would go +/-45 degrees from center, for 90 degrees.",
			"value":"90",
			"manipulatorid":"2",
			"manipulatordiagonals":"false",
			"manipulator":"-invisibox.x"
		},
		"ENABLE_FALLOFF":{
			"type":"bool",
			"group":"LIGHTING/SHAPING",
			"desc":"Controls the attenuation falloff.",
			"spawnflag":"64",
			"value":"true"
		},
		"cut_on":{
			"type":"float",
			"group":"LIGHTING/SHAPING",
			"min":"0",
			"max":"65504",
			"desc":"Controls distance at which light will start.",
			"value":"0"
		},
		"radius":{
			"type":"float",
			"group":"LIGHTING/SHAPING",
			"min":"0",
			"max":"65504",
			"desc":"Controls the distance at which the light will end.",
			"value":"250",
			"manipulatorid":"1",
			"manipulator":"-invisibox.z"
		},
		"min_light_cutoff":{
			"type":"float",
			"group":"PERFORMANCE",
			"min":"0",
			"max":"100000",
			"desc":"Automatically compute cut_off based on the minimum amount of light specified, dependent on ENABLE_FALLOFF and falloffdistance.",
			"value":"0",
			"hidden":"true"
		},
		"near_edge":{
			"type":"float",
			"group":"LIGHTING/SHAPING",
			"min":"0",
			"max":"1",
			"singleStep":".1",
			"desc":"Define the width of the transition region for cut-on, valid value is between 0.0 and 1.0 which is mapped to equal the cuton and radius(cutoff) range.",
			"value":"0"
		},
		"far_edge":{
			"type":"float",
			"group":"LIGHTING/SHAPING",
			"min":"0",
			"max":"1",
			"singleStep":".1",
			"desc":"Define the width of the transition region for cut-off, valid value is between 0.0 and 1.0 which is mapped to equal the cuton and radius(cutoff) range.",
			"value":"0.25"
		},
		"bulbLength":{
			"type":"float",
			"group":"LIGHTING/SHAPING",
			"singleStep":"0.5",
			"decimals":"2",
			"min":"0.0",
			"max":"1000.0",
			"desc":"Controls the length of the light bulb of an area light.",
			"value":"0.0"
		},
		"cull_dist":{
			"type":"float",
			"group":"PERFORMANCE",
			"min":"0",
			"max":"100000",
			"desc":"Distance at which the light stops casting a run-time shadow.",
			"value":"0",
			"hidden":"true"
		},
		"roundness":{
			"type":"float",
			"group":"LIGHTING/SHAPING",
			"min":"0",
			"max":"1",
			"singleStep":".1",
			"desc":"Controls how rounded the corners of the superellipse for spotlights are.  If this value is 0, the cross-section will be a perfect rectangle.  If the value is 1, the cross-section will be a perfect circle.  In between values control the roundness of the corners in a fairly obvious way.",
			"value":".5"
		},
		"superellipse":{
			"type":"vec4d",
			"group":"LIGHTING/SHAPING",
			"desc":"Controls the overall shape and feathering of the super-ellipse.",
			"singleStep":".05",
			"min":"0.05",
			"max":"1",
			"value":"0.75 1.0 0.75 1.0",
			"manipulatordiagonals":"false",
			"manipulator":"invisibox.yzx_"
		},
		"ortho_effect":{
			"type":"float",
			"group":"LIGHTING/SHAPING",
			"min":"0",
			"max":"1",
			"singleStep":"0.05",
			"desc":"Creates an orthographic effect for spot lights",
			"value":"0"
		},
		"def":{
			"type":"string",
			"assetType":"light",
			"group":"OVERLAY/COOKIE",
			"desc":"Sets which light definition asset to use for the cookie/slide projection."
		},
		"def_tile":{
			"type":"vec2d",
			"group":"OVERLAY/COOKIE",
			"desc":"Allows you to tile the texture in the x and y direction so smaller textures can be used. The x and y number will determine the number of times that the texture will be tiled. def_tile 1.0 1.0 would result in no tiling (default behaviour). def_tile 2.0 1.0 would result in the x direction being tiled twice.",
			"value":"1 1"
		},
		"def_offset":{
			"type":"vec2d",
			"group":"OVERLAY/COOKIE",
			"desc":"When tiling textures you may need to shift the texture in the x or y direction to get the required alignment you need. Numbers in the range of -1.0 to 1.0 in the x and y should suffice. -1 or 1 will appear to have no effect as it just shifts the whole texture over by 1.",
			"min":"-1 -1",
			"max":"1 1",
			"value":"0 0"
		},
		"def_shear":{
			"type":"vec2d",
			"group":"OVERLAY/COOKIE",
			"desc":"When tiling textures you may need to shift the texture in the x or y direction to get the required alignment you need. Numbers in the range of -1.0 to 1.0 in the x and y should suffice. -1 or 1 will appear to have no effect as it just shifts the whole texture over by 1.",
			"min":"-5 -5",
			"max":"5 5",
			"value":"0 0"
		},
		"def_angle":{
			"type":"float",
			"group":"OVERLAY/COOKIE",
			"min":"-360",
			"max":"360",
			"desc":"Base rotation angle for the texture.",
			"value":"0"
		},
		"def_center":{
			"type":"vec2d",
			"group":"OVERLAY/COOKIE",
			"desc":"Controls the center of rotation; 0 0 will be in the middle of the light with -1 to 1 being at the edges.",
			"min":"-1 -1",
			"max":"1 1",
			"value":"0 0"
		},
		"def_scroll":{
			"type":"vec2d",
			"group":"OVERLAY/COOKIE",
			"desc":"Scroll the texture in the required direction, you enter a time in seconds which is how long it will take for the texture to travel across the full width / height of the light. 1.0 would take 1 second, 2.0 would take 2.0 etc. To reverse the direction of the scroll use a negative number.",
			"min":"-10 -10",
			"max":"10 10",
			"value":"0 0"
		},
		"def_rotation":{
			"type":"float",
			"group":"OVERLAY/COOKIE",
			"min":"-720",
			"max":"720",
			"desc":"Rotate the texture in degrees per second, thus 360 will take 1 second to do a full 360 degree rotation. Use a negative number to reverse the direction of rotation.",
			"value":"0"
		},
		"falloffdistance":{
			"type":"float",
			"group":"LIGHTING/SHAPING",
			"min":"0",
			"max":"100000",
			"desc":"Distance at which inverse square distance attenuation starts to take effect. Check enable_falloff for this to take effect.",
			"value":"12"
		},
		"target":{
			"type":"string",
			"group":"OTHER/RADIANT"
		},
		"angles":{
			"type":"vec3d",
			"group":"3_SHAPE",
			"value":"0 0 0",
			"group":"OTHER/RADIANT"
		},
		"origin":{
			"type":"vec3d",
			"group":"3_SHAPE",
			"value":"0 0 0",
			"group":"OTHER/RADIANT"
		},
		"lightingstate1":{
			"type":"bool",
			"group":"LIGHTING/STATES",
			"value":"true"
		},
		"lightingstate2":{
			"type":"bool",
			"group":"LIGHTING/STATES",
			"value":"true"
		},
		"lightingstate3":{
			"type":"bool",
			"group":"LIGHTING/STATES",
			"value":"true"
		},
		"lightingstate4":{
			"type":"bool",
			"group":"LIGHTING/STATES",
			"value":"true"
		},
		"volumetric":{
			"type":"bool",
			"group":"LIGHTING/VOLUMETRIC",
			"desc":"Enables rendering of light as volumetric.",
			"value":"false"
		},
		"volumetricCookies":{
			"type":"bool",
			"group":"LIGHTING/VOLUMETRIC",
			"desc":"Enables cookies on volumetrics.",
			"value":"false"
		},
		"volumetricSampleCount":{
			"type":"int",
			"min":"1",
			"max":"32",
			"group":"LIGHTING/VOLUMETRIC",
			"desc":"Number of ray march samples used in calculating volumetrics for light \nHigher values use greater FPS - VerK0.",
			"value":"4"
		},
		"volumetricIntensityBoost":{
			"type":"float",
			"min":"-28",
			"max":"28",
			"singleStep":"0.25",
			"group":"LIGHTING/VOLUMETRIC",
			"desc":"Volumetric light intensity boost (in stops)",
			"value":"0"
		},
		"shadowUpdate":{
			"type":"string",
			"enum":"AlwaysNoCache,Always,Never",
			"group":"PERFORMANCE/SHADOWS",
			"desc":"Only render the shadowmap once when missing.",
			"value":"Never"
		},
		"excludeDedicated":{
			"type":"string",
			"enum":"On,Off",
			"group":"PERFORMANCE/SHADOWS",
			"desc":"Disable the dedicated shadow for a light set as never update",
			"value":"Off"
		},
		"shadowmapScale":{
			"type":"string",
			"enum":"4,2,1,0.5",
			"group":"PERFORMANCE/SHADOWS",
			"desc":"shadow map resolution.",
			"value":"1"
		},
		"penumbraRadius":{
			"type":"float",
			"min":"1",
			"max":"1024",
			"group":"PERFORMANCE/SHADOWS",
			"desc":"The penumbra radius in pixels, scale the disc size used to read from the shadowmaps \nYou should keep this under 5 for performance - VerK0",
			"value":"1.0"
		},
    "culling_use_pure_radius":{
			"type":"bool",
			"group":"PERFORMANCE/CULLING",
			"desc":"For spot lights, ignore the cone angle and use the radius as a diameter for the enclosing sphere",
			"value":"false"
		},
		"culling_falloff":{
			"type":"float",
			"min":"0",
			"group":"PERFORMANCE/CULLING",
			"desc":"The light will start fade out when the radius on screen is below the fallof value, defined in pixel over 1080p",
			"value":"0"
		},
		"culling_cutoff":{
			"type":"float",
			"min":"0",
			"group":"PERFORMANCE/CULLING",
			"desc":"The light will be clipped when the radius on screen is below the cutoff value, defined in pixel over 1080p",
			"value":"0"
		},
		"targetName":{
			"type":"string",
			"group":"OTHER/SCRIPTING"
		},
		"scriptable":{
			"type":"bool",
			"desc":"Makes a light show up as an entity to script. NOTE: default is client side so you must choose the server side drop down to grab on the server.",
			"spawnflag":"8",
			"group":"OTHER/SCRIPTING",
			"value":"false"
		},
		"client_server":{
			"type":"string",
			"enum":"ClientSide,ServerSide",
			"spawnflag":"0,32",
			"desc":"Makes a light show up as an entity to server side script. NOTE: default is client side so you must choose the server side drop down to grab on the server.",
			"group":"OTHER/SCRIPTING",
			"value":"ClientSide"
		},
		"name":{
			"type":"string",
			"desc":"used to identify a light",
			"value":"light",
			"group":"OTHER/RADIANT"
		}
	},
	{
		"classname":"build_light",
		"classcolor":"0 1 0,1 0.4 0.4,0.7 0.1 0.7",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"Simple build light",
		"PRIMARY_TYPE":{
			"type":"string",
			"enum":"PRIMARY_OMNI,PRIMARY_SPOT",
			"spawnflag":"2,4",
			"desc":"Type of light.",
			"value":"PRIMARY_OMNI"
		},
		"PRIMARY_NOSHADOWMAP":{
			"type":"bool",
			"group":"!COMMON/LIGHT TYPE",
			"desc":"Prevents a primary light from ever having a shadowmap.",
			"spawnflag":"16",
			"value":"true",
			"hidden":"true"
		},
		"PROBE_ONLY":{
			"type":"bool",
			"group":"!COMMON/LIGHT TYPE",
			"desc":"If enabled this light will only be seen by the reflection probes",
			"value":"false",
			"hidden":"true"
		},
		"NO_CULL":{
			"type":"bool",
			"group":"!COMMON/LIGHT TYPE",
			"desc":"If enabled this light will not calculate a culling volume",
			"value":"false",
			"hidden":"true"
		},
		"_color":{
			"type":"color",
			"desc":"Sets the color of the light.",
			"value":"1 1 1"
		},
		"REC2020":{
			"type":"bool",
			"group":"!COMMON/INTENSITY",
			"desc":"Enables rec2020 color gammut.",
			"value":"false",
			"hidden":"true"
		},
		"stops":{
			"type":"float",
			"min":"-32.0f",
			"max":"32",
			"desc":"Controls how bright a light is.",
			"value":"11",
			"singleStep":".1",
			"manipulatorid":"2",
			"manipulatordiagonals":"false",
			"manipulator":"-invisibox.y"
		},
		"bake_intensity_scale":{
			"type":"float",
			"group":"!COMMON/INTENSITY",
			"min":"0",
			"max":"100",
			"desc":"Adjusts the brightness of a light for GI baking.",
			"value":"1",
			"singleStep":".1",
			"hidden":"true"
		},
		"spec_comp":{
			"type":"float",
			"group":"!COMMON/INTENSITY",
			"min":"-14",
			"max":"14",
			"singleStep":"0.25",
			"desc":"Specular boost (in stops).",
			"value":"0",
			"hidden":"true"
		},
		"fov_outer":{
			"type":"float",
			"min":"0",
			"max":"180",
			"desc":"Overrides the fov of a spotlight from the 64 unit circle around the target.  It is in degrees.  A value of 90 would go +/-45 degrees from center, for 90 degrees.",
			"value":"90",
			"manipulatorid":"2",
			"manipulatordiagonals":"false",
			"manipulator":"-invisibox.x"
		},
		"ENABLE_FALLOFF":{
			"type":"bool",
			"group":"!COMMON/SHAPING",
			"desc":"Controls the attenuation falloff.",
			"spawnflag":"64",
			"value":"true",
			"hidden":"true"
		},
		"cut_on":{
			"type":"float",
			"group":"!COMMON/SHAPING",
			"min":"0",
			"max":"65504",
			"desc":"Controls distance at which light will start.",
			"value":"0",
			"hidden":"true"
		},
		"radius":{
			"type":"float",
			"min":"0",
			"max":"65504",
			"desc":"Controls the distance at which the light will end.",
			"value":"100"
		},
		"min_light_cutoff":{
			"type":"float",
			"group":"PERFORMANCE",
			"min":"0",
			"max":"100000",
			"desc":"Automatically compute cut_off based on the minimum amount of light specified, dependent on ENABLE_FALLOFF and falloffdistance.",
			"value":"0",
			"hidden":"true"
		},
		"near_edge":{
			"type":"float",
			"group":"!COMMON/SHAPING",
			"min":"0",
			"max":"1",
			"singleStep":".1",
			"desc":"Define the width of the transition region for cut-on, valid value is between 0.0 and 1.0 which is mapped to equal the cuton and radius(cutoff) range.",
			"value":"0",
			"hidden":"true"
		},
		"far_edge":{
			"type":"float",
			"group":"!COMMON/SHAPING",
			"min":"0",
			"max":"1",
			"singleStep":".1",
			"desc":"Define the width of the transition region for cut-off, valid value is between 0.0 and 1.0 which is mapped to equal the cuton and radius(cutoff) range.",
			"value":"0.25",
			"hidden":"true"
		},
		"bulbLength":{
			"type":"float",
			"group":"!COMMON/SHAPING",
			"singleStep":"0.5",
			"decimals":"2",
			"min":"0.0",
			"max":"1000.0",
			"desc":"Controls the length of the light bulb of an area light.",
			"value":"0.0",
			"hidden":"true"
		},
		"cull_dist":{
			"type":"float",
			"group":"PERFORMANCE",
			"min":"0",
			"max":"100000",
			"desc":"Distance at which the light stops casting a run-time shadow.",
			"value":"0",
			"hidden":"true"
		},
		"roundness":{
			"type":"float",
			"group":"!COMMON/SHAPING",
			"min":"0",
			"max":"1",
			"singleStep":".1",
			"desc":"Controls how rounded the corners of the superellipse for spotlights are.  If this value is 0, the cross-section will be a perfect rectangle.  If the value is 1, the cross-section will be a perfect circle.  In between values control the roundness of the corners in a fairly obvious way.",
			"value":".5",
			"hidden":"true"
		},
		"superellipse":{
			"type":"vec4d",
			"group":"!COMMON/SHAPING",
			"desc":"Controls the overall shape and feathering of the super-ellipse.",
			"singleStep":".1",
			"min":"0.05",
			"max":"1",
			"value":"0.75 1.0 0.75 1.0",
			"hidden":"true"
		},
		"ortho_effect":{
			"type":"float",
			"group":"!COMMON/SHAPING",
			"min":"0",
			"max":"1",
			"singleStep":"0.05",
			"desc":"Creates an orthographic effect for spot lights",
			"value":"0",
			"hidden":"true"
		},
		"def":{
			"type":"string",
			"assetType":"light",
			"group":"COOKIE PARAMETERS",
			"desc":"Sets which light definition asset to use for the cookie/slide projection.",
			"hidden":"true"
		},
		"def_tile":{
			"type":"vec2d",
			"group":"COOKIE PARAMETERS",
			"desc":"Allows you to tile the texture in the x and y direction so smaller textures can be used. The x and y number will determine the number of times that the texture will be tiled. def_tile 1.0 1.0 would result in no tiling (default behaviour). def_tile 2.0 1.0 would result in the x direction being tiled twice.",
			"value":"1 1",
			"hidden":"true"
		},
		"def_offset":{
			"type":"vec2d",
			"group":"COOKIE PARAMETERS",
			"desc":"When tiling textures you may need to shift the texture in the x or y direction to get the required alignment you need. Numbers in the range of -1.0 to 1.0 in the x and y should suffice. -1 or 1 will appear to have no effect as it just shifts the whole texture over by 1.",
			"min":"-1 -1",
			"max":"1 1",
			"value":"0 0",
			"hidden":"true"
		},
		"def_shear":{
			"type":"vec2d",
			"group":"COOKIE PARAMETERS",
			"desc":"When tiling textures you may need to shift the texture in the x or y direction to get the required alignment you need. Numbers in the range of -1.0 to 1.0 in the x and y should suffice. -1 or 1 will appear to have no effect as it just shifts the whole texture over by 1.",
			"min":"-5 -5",
			"max":"5 5",
			"value":"0 0",
			"hidden":"true"
		},
		"def_angle":{
			"type":"float",
			"group":"COOKIE PARAMETERS",
			"min":"-360",
			"max":"360",
			"desc":"Base rotation angle for the texture.",
			"value":"0",
			"hidden":"true"
		},
		"def_center":{
			"type":"vec2d",
			"group":"COOKIE PARAMETERS",
			"desc":"Controls the center of rotation; 0 0 will be in the middle of the light with -1 to 1 being at the edges.",
			"min":"-1 -1",
			"max":"1 1",
			"value":"0 0",
			"hidden":"true"
		},
		"def_scroll":{
			"type":"vec2d",
			"group":"COOKIE PARAMETERS",
			"desc":"Scroll the texture in the required direction, you enter a time in seconds which is how long it will take for the texture to travel across the full width / height of the light. 1.0 would take 1 second, 2.0 would take 2.0 etc. To reverse the direction of the scroll use a negative number.",
			"min":"-10 -10",
			"max":"10 10",
			"value":"0 0",
			"hidden":"true"
		},
		"def_rotation":{
			"type":"float",
			"group":"COOKIE PARAMETERS",
			"min":"-720",
			"max":"720",
			"desc":"Rotate the texture in degrees per second, thus 360 will take 1 second to do a full 360 degree rotation. Use a negative number to reverse the direction of rotation.",
			"value":"0",
			"hidden":"true"
		},
		"falloffdistance":{
			"type":"float",
			"group":"!COMMON/SHAPING",
			"min":"0",
			"max":"100000",
			"desc":"Distance at which inverse square distance attenuation starts to take effect. Check enable_falloff for this to take effect.",
			"value":"12",
			"hidden":"true"
		},
		"target":{
			"type":"string",
			"hidden":"true"
		},
		"lightingstate1":{
			"type":"bool",
			"group":"LIGHTING_STATES",
			"value":"true",
			"hidden":"true"
		},
		"lightingstate2":{
			"type":"bool",
			"group":"LIGHTING_STATES",
			"value":"true",
			"hidden":"true"
		},
		"lightingstate3":{
			"type":"bool",
			"group":"LIGHTING_STATES",
			"value":"true",
			"hidden":"true"
		},
		"lightingstate4":{
			"type":"bool",
			"group":"LIGHTING_STATES",
			"value":"true",
			"hidden":"true"
		},
		"volumetric":{
			"type":"bool",
			"group":"LIGHTING",
			"desc":"Enables rendering of light as volumetric.",
			"value":"false",
			"hidden":"true"
		},
		"volumetricCookies":{
			"type":"bool",
			"group":"LIGHTING",
			"desc":"Enables cookies on volumetrics.",
			"value":"false",
			"hidden":"true"
		},
		"volumetricSampleCount":{
			"type":"int",
			"min":"1",
			"max":"24",
			"group":"LIGHTING",
			"desc":"Number of ray march samples used in calculating volumetrics for light",
			"value":"8",
			"hidden":"true"
		},
		"volumetricIntensityBoost":{
			"type":"float",
			"min":"-14",
			"max":"14",
			"singleStep":"0.25",
			"group":"LIGHTING",
			"desc":"Volumetric light intensity boost (in stops)",
			"value":"0",
			"hidden":"true"
		},
		"shadowUpdate":{
			"type":"string",
			"enum":"Always,Never",
			"group":"SHADOWS",
			"desc":"Only render the shadowmap once when missing.",
			"value":"Never",
			"hidden":"true"
		},
		"excludeDedicated":{
			"type":"string",
			"enum":"On,Off",
			"group":"SHADOWS",
			"desc":"Disable the dedicated shadow for a light set as never update",
			"value":"Off",
			"hidden":"true"
		},
		"shadowmapScale":{
			"type":"string",
			"enum":"4,2,1,0.5",
			"group":"SHADOWS",
			"desc":"shadow map resolution.",
			"value":"1",
			"hidden":"true"
		},
		"penumbraRadius":{
			"type":"float",
			"min":"1",
			"max":"128",
			"group":"SHADOWS",
			"desc":"The penumbra radius in pixels, scale the disc size used to read from the shadowmaps",
			"value":"1.5",
			"hidden":"true"
		},
    "culling_use_pure_radius":{
			"type":"bool",
			"group":"LOD",
			"desc":"For spot lights, ignore the cone angle and use the radius as a diameter for the enclosing sphere",
			"value":"false",
			"hidden":"true"
		},
		"culling_falloff":{
			"type":"float",
			"min":"0",
			"group":"LOD",
			"desc":"The light will start fade out when the radius on screen is below the fallof value, defined in pixel over 1080p",
			"value":"0",
			"hidden":"true"
		},
		"culling_cutoff":{
			"type":"float",
			"min":"0",
			"group":"LOD",
			"desc":"The light will be clipped when the radius on screen is below the cutoff value, defined in pixel over 1080p",
			"value":"0",
			"hidden":"true"
		},
		"targetName":{
			"type":"string",
			"group":"!COMMON/Scripting",
			"hidden":"true"
		},
		"scriptable":{
			"type":"bool",
			"desc":"Makes a light show up as an entity to script. NOTE: default is client side so you must choose the server side drop down to grab on the server.",
			"spawnflag":"8",
			"group":"!COMMON/Scripting",
			"value":"false",
			"hidden":"true"
		},
		"client_server":{
			"type":"string",
			"enum":"ClientSide,ServerSide",
			"spawnflag":"0,32",
			"desc":"Makes a light show up as an entity to server side script. NOTE: default is client side so you must choose the server side drop down to grab on the server.",
			"group":"!COMMON/Scripting",
			"value":"ClientSide",
			"hidden":"true"
		},
		"name":{
			"type":"string",
			"desc":"used to identify a light",
			"value":"light",
			"hidden":"true"
		}
	},
	{
		"classname":"sun_shadow_quality_hi",
		"classcolor":"0 .75 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"size_min":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"area of effect on the negative side",
			"value":"72 72 72",
			"manipulator":"-halfbox.xyz"
		},
		"size_max":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"area of effect on the positive side",
			"value":"72 72 72",
			"manipulator":"halfbox.xyz"
		}
	},
	{
		"classname":"sun_shadow_quality_low",
		"classcolor":".75 0 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"size_min":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"area of effect on the negative side",
			"value":"72 72 72",
			"manipulator":"-halfbox.xyz"
		},
		"size_max":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"area of effect on the positive side",
			"value":"72 72 72",
			"manipulator":"halfbox.xyz"
		}
	},
	{
		"classname":"sun_shadow_bias",
		"classcolor":"0 0 .75",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"size_min":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"area of effect on the negative side",
			"value":"72 72 72",
			"manipulator":"-halfbox.xyz"
		},
		"size_max":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"area of effect on the positive side",
			"value":"72 72 72",
			"manipulator":"halfbox.xyz"
		},
		"bias":{
			"type":"int",
			"min":"-10000",
			"max":"10000",
			"value":"0"
		}
	},
	{
		"classname":"reflection_probe",
		"classcolor":"0 1 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"Capture a cube map from origin and apply to contents of volume with calculated occlusion.",
		"placement_offset":{
			"type":"float",
			"value":"72.0",
			"hidden":"true"
		},
		"angles":{
			"type":"vec3d",
			"group":"3_SHAPE",
			"value":"0 0 0"
		},
		"origin":{
			"type":"vec3d",
			"group":"3_SHAPE",
			"value":"0 0 0"
		},
		"size_min":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"4",
			"group":"3_SHAPE",
			"desc":"area of effect on the negative side",
			"value":"72 72 72",
			"manipulatorid":"1",
			"manipulatordiagonals":"false",
			"manipulator":"-halfbox.xyz"
		},
		"size_max":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"4",
			"group":"3_SHAPE",
			"desc":"area of effect on the positive side",
			"value":"72 72 72",
			"manipulatordiagonals":"false",
			"manipulator":"halfbox.xyz"
		},
		"blend_mins":{
			"type":"vec3d",
			"min":"1 1 1",
			"max":"32000 32000 32000",
			"singleStep":"4",
			"desc":"Distance to blend out on the negative side.",
			"value":"3 3 3",
			"group":"3_SHAPE",
			"manipulatorid":"alt 1",
			"manipulatordiagonals":"false",
			"manipulator":"-halfbox.xyz"
		},
		"blend_maxs":{
			"type":"vec3d",
			"min":"1 1 1",
			"max":"32000 32000 32000",
			"singleStep":"4",
			"desc":"Distance to blend out on the positive side.",
			"value":"3 3 3",
			"group":"3_SHAPE",
			"manipulatorid":"alt",
			"manipulatordiagonals":"false",
			"manipulator":"halfbox.xyz"
		},
		"resolution":{
			"type":"string",
			"enum":"0.125x,0.25x,0.5x,1x,2x,3x,4x,5x,6x,7x,8x,9x,10x,11x,12x,13x,14x,15x,16x",
			"group":"2_DIFFUSE_GI",
			"desc":"relative number of probe points in each dimension",
			"value":"4x"
		},
		"grid_density":{
			"type":"string",
			"enum":"4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128",
			"hidden":"true",
			"value":"0"
		},
		"override":{
			"type":"bool",
			"group":"2_DIFFUSE_GI",
			"desc":"Override other overlapping probes that are not marked override.",
			"value":"false"
		},
		"ao_range":{
			"type":"float",
			"min":"1",
			"max":"128",
			"singleStep":"0.5",
			"group":"2_DIFFUSE_GI",
			"desc":"Ambient occlusion range (in voxels)",
			"value":"8"
		},
		"ao_strength":{
			"type":"float",
			"min":"0",
			"max":"2",
			"singleStep":"0.1",
			"group":"2_DIFFUSE_GI",
			"desc":"Ambient occlusion strength (0 to disable AO)",
			"value":"1"
		},
		"ao_strength_double_sided":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"2_DIFFUSE_GI",
			"desc":"Ambient occlusion strength specifically for double sided materials such as foliage",
			"value":"0.2"
		},
		"ao_power":{
			"type":"float",
			"min":"0.25",
			"max":"32",
			"singleStep":"0.25",
			"group":"2_DIFFUSE_GI",
			"desc":"Ambient occlusion power (gamma)",
			"value":"1"
		},
		"inpaint_occluded_rays":{
			"type":"bool",
			"desc":"Inpaint rays that are occluded from any probe.",
			"group":"2_DIFFUSE_GI",
			"value":"true"
		},
		"smooth_post_process":{
			"type":"bool",
			"desc":"This probe will smooth with its neighbors at the end of baking.",
			"group":"2_DIFFUSE_GI",
			"value":"false"
		},
		"adapt_better":{
			"type":"bool",
			"group":"2_DIFFUSE_GI",
			"desc":"Use the new, better method of adaptive quality boosting.",
			"value":"false"
		},
		"adaptive_quality_boost":{
			"type":"string",
			"enum":"Off,Low,Medium,High",
			"desc":"Makes the probe bake slower, but automatically uses more samples where it thinks it will enhance quality.",
			"group":"2_DIFFUSE_GI",
			"value":"Off"
		},
		"debug_render_index_x":{
			"type":"int",
			"min":"0",
			"max":"64",
			"singleStep":"1",
			"group":"4_MISC",
			"desc":"X coordinate of grid point to render raycast debug lines for",
			"noExport":"true",
			"value":"64"
		},
		"debug_render_index_y":{
			"type":"int",
			"min":"0",
			"max":"64",
			"singleStep":"1",
			"group":"4_MISC",
			"desc":"Y coordinate of grid point to render raycast debug lines for",
			"noExport":"true",
			"value":"0"
		},
		"debug_render_index_z":{
			"type":"int",
			"min":"0",
			"max":"64",
			"group":"4_MISC",
			"singleStep":"1",
			"desc":"Z coordinate of grid point to render raycast debug lines for",
			"noExport":"true",
			"value":"0"
		},
		"debug_render_phase":{
			"type":"int",
			"min":"0",
			"max":"32",
			"group":"4_MISC",
			"singleStep":"1",
			"desc":"Set of debug rays to show, up to 2 for Low quality, 8 for Medium, and 32 for High.",
			"noExport":"true",
			"value":"0"
		},
		"evcomp":{
			"type":"float",
			"min":"-10",
			"max":"10",
			"singleStep":"0.5",
			"group":"2_DIFFUSE_GI",
			"desc":"EV compensation to final probe exposure",
			"value":"0"
		},
		"brightnessAdjust":{
			"type":"float",
			"min":"-10",
			"max":"10",
			"singleStep":"0.5",
			"group":"2_DIFFUSE_GI",
			"desc":"scale the brightness of the bounce during bake",
			"value":"0"
		},
		"debugColor":{
			"type":"color",
			"value":"1 1 1",
			"group":"4_MISC",
			"desc":"Sets the debug color of the probe used when displaying the probe blend field."

		},
		"target":{
			"type":"string",
			"group":"1_NAMING",
			"desc":"any assoicated reflection_volume"
		},
		"targetname":{
			"group":"4_MISC",
			"type":"string"

		},
		"targetPlane0":{
			"type":"vec4d",
			"desc":"Red plane",
			"group":"5_REFLECTIONS",
			"value":"0 0 0 0"

		},
		"targetPlane1":{
			"type":"vec4d",
			"desc":"Green plane",
			"group":"5_REFLECTIONS",
			"value":"0 0 0 0"

		},
		"targetPlane2":{
			"type":"vec4d",
			"desc":"Blue plane",
			"group":"5_REFLECTIONS",
			"value":"0 0 0 0"

		},
		"targetPlane3":{
			"type":"vec4d",
			"desc":"Yellow plane",
			"group":"5_REFLECTIONS",
			"value":"0 0 0 0"

		},
		"targetPlane4":{
			"type":"vec4d",
			"desc":"Purple plane",
			"group":"5_REFLECTIONS",
			"value":"0 0 0 0"

		},
		"targetPlane5":{
			"type":"vec4d",
			"desc":"Cyan plane",
			"group":"5_REFLECTIONS",
			"value":"0 0 0 0"

		},
		"scriptable":{
			"type":"bool",
			"desc":"Makes a probe show up as an entity to script. NOTE: default is client side so you must click the server side check box to grab on the server.",
			"spawnflag":"8",
			"group":"4_MISC",
			"value":"false"
		},
		"volumetric":{
			"type":"bool",
			"group":"2_DIFFUSE_GI",
			"desc":"Use probe in volumetric fog.",
			"value":"false"
		},
		"virtual":{
			"type":"bool",
			"group":"2_DIFFUSE_GI",
			"desc":"Probe doesn't export, but it does contribute to light bake data for other probes.",
			"value":"false"
		},
		"box":{
			"type":"bool",
			"desc":"Probe is represented as a box instead of arbitrary planes.",
			"group":"2_DIFFUSE_GI",
			"value":"true"
		},
		"subtract":{
			"type":"bool",
			"desc":"Removes from the probe attenuation shape instead of adding to it. Ignored on the parent probe.",
			"group":"2_DIFFUSE_GI",
			"value":"false"
		},
		"in_play_space":{
			"type":"bool",
			"desc":"Probe is in play space and should boost sun shadow quality. This is unavailable if all sides are larger than 1000",
			"group":"4_MISC",
			"value":"true"
		},
		"client_server":{
			"type":"string",
			"group":"4_MISC",
			"enum":"ClientSide,ServerSide",
			"spawnflag":"0,32",
			"desc":"Makes a probe show up as an entity to server side script. NOTE: default is client side so you must click the server side check box to grab on the server.",
			"value":"ClientSide"
		},
		"name":{
			"type":"string",
			"group":"1_NAMING",
			"desc":"use to identity a reflection_probe",
			"value":"probe"
		},
		"high_detail":{
			"type":"bool",
			"group":"4_MISC",
			"desc":"This probe is for high-detail lighting that's part of a sun volume",
			"value":"true"
		},
		"low_detail":{
			"type":"bool",
			"group":"4_MISC",
			"desc":"This probe is for low-detail lighting that's part of a vista volume",
			"value":"false"
		}
	},
	{
		"classname":"build_probe",
		"classcolor":"1 0 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"Build-only version of reflection probe.",
		"placement_offset":{
			"type":"float",
			"value":"72.0",
			"hidden":"true"
		},
		"angles":{
			"type":"vec3d",
			"group":"3_SHAPE",
			"value":"0 0 0"
		},
		"origin":{
			"type":"vec3d",
			"group":"3_SHAPE",
			"value":"0 0 0"
		},
		"size_min":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"4",
			"group":"3_SHAPE",
			"desc":"area of effect on the negative side",
			"value":"72 72 72",
			"manipulatorid":"1",
			"manipulatordiagonals":"false",
			"manipulator":"-halfbox.xyz"
		},
		"size_max":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"4",
			"group":"3_SHAPE",
			"desc":"area of effect on the positive side",
			"value":"72 72 72",
			"manipulatordiagonals":"false",
			"manipulator":"halfbox.xyz"
		},
		"target":{
			"type":"string",
			"group":"1_NAMING",
			"desc":"any assoicated reflection_volume"
		},
		"targetname":{
			"group":"4_MISC",
			"type":"string"

		},
		"name":{
			"type":"string",
			"group":"1_NAMING",
			"desc":"use to identity a reflection_probe",
			"value":"probe"
		}
	},
	{
		"classname":"info_volume",
		"classcolor":"1 0 1",
		"targetname":{
			"type":"string"
		}
	},
	{
	  "classname":"nav_volume",
	  "classcolor":"1 0 1",
	  "desc":"Define a space that will be covered by a Nav Volume"
	},
	{
	  "classname":"nav_volume_passable",
	  "classcolor":"1 0 1",
	  "desc":"use an AABB to forcefully mark the space as passable, regardless of collision inside it"
	},
	{
		"classname":"occlusion_override",
		"classcolor":"1 0 1"
	},
	{
		"classname":"undertow_volume",
		"classcolor":"1 0 1",
		"force":{
			"type":"vec3d",
			"desc":"specify a direction that the undertow_volume will pull the player.",
			"value":"0 0 -200"
		}
	},
	{
		"classname":"named_occluder",
		"classcolor":"1 0 1",
		"name":{
			"type":"string",
			"desc":"name of the occluder, max 15 chars."
		}
	},
	{
		"classname":"heli_height_lock",
		"classcolor":"1 0 1"
	},
	{
		"classname":"misc_model",
		"classcolor":"1 0 0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Optimized static model.",
		"model":{
			"type":"string",
			"assetType":"xmodel",
			"desc":"arbitrary xmodel asset to display",
			"propEditable" : "false"
		},
		"origin":{
			"type":"vec3d",
			"value":"0 0 0",
			"propEditable" : "false"
		},
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"propEditable" : "false"
		},
		"ORIENT_LOD":{
			"type":"bool",
			"desc":"if flagged, the entity will yaw towards the player when the LOD switches",
			"spawnflag":"1",
			"value":"false"
		},
		"NO_SHADOW":{
			"type":"bool",
			"desc":"the opaque surfaces will not cast shadows",
			"spawnflag":"2",
			"group":"Lighting",
			"value":"false"
		},
		"FORCE_SHADOW":{
			"type":"bool",
			"desc":"force shadow casting",
			"spawnflag":"4",
			"group":"Lighting",
			"value":"false"
		},
		"static":{
			"type":"bool",
			"desc":"Include in the baked shadows and probes.",
			"group":"Lighting",
			"value":"true"
		},
		"probes_only":{
			"type":"bool",
			"desc":"Only export in probes.",
			"group":"Lighting",
			"value":"false"
		},
		"dont_reflect":{
			"type":"bool",
			"desc":"Don't include in reflections, though it may still contribute to GI.",
			"group":"Lighting",
			"value":"false"
		},
		"dynamic_probes_only":{
			"type":"bool",
			"desc":"Include in dynamic probes.",
			"group":"Lighting",
			"value":"false"
		},
		"no_collmap":{
			"type":"bool",
			"desc":"Dont bake in the collmap of this model in the static bsp. Use the \"use_misc_models_collmaps\" key on the worldspawn object if you want to control this on global basis.",
			"value":"false"
		},
		"use_collmap":{
			"type":"bool",
			"desc":"Bake in the collmap of this model in the static bsp. Use the \"use_misc_models_collmaps\" key on the worldspawn object if you want to control this on global basis.",
			"value":"false"
		},
		"bake_collision":{
			"type":"bool",
			"desc":"Used in conjunction \"bake\". Bakes the bullet mesh of the model in the static level geo.",
			"value":"false"
		},
		"static_shadow":{
			"type":"bool",
			"desc":"Forces shadow to be baked as static, even when a siege animation is present.",
			"spawnflag":"32",
			"group":"Lighting",
			"value":"false"
		},
		"lightingstate1":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate2":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate3":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate4":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"nopolyreduction":{
			"type":"bool",
			"desc":"Prevent geo optimizations for a baked model",
			"value":"false"
		},
		"modelscale":{
			"type":"float",
			"min":"0.1",
			"max":"100000",
			"singleStep":"0.01",
			"value":"1",
			"propEditable" : "false"
		},
		"siege_anim":{
			"type":"string",
			"assetType":"sanim",
			"desc":"siege animation for this model, only affect's siege models"
		}
	},
	{
		"classname":"misc_prefab",
		"classcolor":"1 0 0,0.7 0.1 0.7",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Referenced prefab map.",
		"prefabname":{
			"type":"string",
			"desc":"A unique name to group all entites in this prefab.  In game, all entites in this prefab will have this KVP."
		},
		"model":{
			"type":"string",
			"fileExtension":"map",
			"filePath":"%TA_GAME_PATH%/map_source/_prefabs",
			"fileTrimLeft":"%TA_GAME_PATH%/map_source/",
			"desc":"name of the map to use as the prefab"
		},
		"NO_COLLIDE":{
			"type":"bool",
			"desc":"Ignore all clip geometry in this prefab",
			"spawnflag":"1",
			"value":"false"
		},
		"umbra_visgroup":{
			"type":"string",
			"desc":"Name of Umbra visibility group this prefab belongs to. Sub-prefabs inherit this value, but they may also override it."
		},
		"outsource_status":{
			"type":"string",
			"enum":"internal,external,reference",
			"desc":"Flags prefab which is being worked on by an external vendor. 'internal' - Treyarch prefab, 'external' - an outsourced prefab, 'referenced' - prefab is used read-only by outsourcer vendors."
		}
	},
	{
		"classname":"misc_prop",
		"classcolor":"1 0 0,0.7 0.1 0.7",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Referenced prop",
		"model":{
			"type":"string",
			"fileExtension":"prop",
			"filePath":"%TA_GAME_PATH%/map_source/_props",
			"fileTrimLeft":"%TA_GAME_PATH%/map_source/",
			"desc":"Relative file path of the prop"
		},
		"clayer_FX":{
			"type":"bool",
			"value":"true",
			"group":"Functionality"
		},
		"clayer_Lights":{
			"type":"bool",
			"value":"true",
			"group":"Functionality"
		},
		"clayer_Audio":{
			"type":"bool",
			"value":"true",
			"group":"Functionality"
		},
		"NO_COLLIDE":{
			"type":"bool",
			"desc":"Ignore all clip geometry in this prop",
			"spawnflag":"1",
			"value":"false",
			"group":"Functionality"
		},
		"modelscale":{
			"type":"float",
			"min":"0.1",
			"max":"100000",
			"singleStep":"0.01",
			"value":"1"
		}
	},
	{
		"classname":"template_trigger_flags",
		"classcolor":"1 .3 .1",
		"script_flag_set":{
			"group":"[flags]",
			"type":"string",
			"desc":"Set this level flag when triggered"
		},
		"script_flag_true":{
			"group":"[flags]",
			"type":"string",
			"desc":"Trigger is enabled when any of these flags are true"
		},
		"script_flag_false":{
			"group":"[flags]",
			"type":"string",
			"desc":"Trigger is enabled when all of these flags are false"
		},
		"script_flag_set_on_touching":{
			"group":"[flags]",
			"type":"string",
			"desc":"This flag will be set when this trigger is touched."
		},
		"script_flag_set_on_cleared":{
			"group":"[flags]",
			"type":"string",
			"desc":"This flag will be set when this trigger is untouched."
		}
	},
	{
		"classname":"trigger_ik_playerclip_terrain",
		"classcolor":"1 .6 .6"
	},
	{
		"classname":"trigger_ik_disable_terrain",
		"classcolor":".7 .2 .6"
	},
	{
		"classname":"trigger_lookat",
		"classcolor":"1 .3 .1",
		"TRIGGER_ONCE":{
			"type":"bool",
			"spawnflag":"1024",
			"value":"false"
		},
		"targetname":{
			"type":"string"
		}
	},
	{
		"classname":"trigger_use",
		"parents":"template_trigger_flags",
		"classcolor":".3 .5 .8",
		"desc":"When activated will use its target.",
		"delay":{
			"type":"int",
			"desc":"time (in seconds) before it can be used again",
			"min":"0",
			"max":"120",
			"value":"0"
		},
		"offnoise":{
			"type":"string",
			"desc":"specifies an alternate sound"
		},
		"cursorhint":{
			"type":"string",
			"enum":"HINT_INHERIT,HINT_NONE,HINT_NOICON,HINT_INTERACTIVE_PROMPT,HINT_ACTIVATE,HINT_NOACTIVATE,HINT_DOOR,HINT_DOOR_LOCKED,HINT_TURRET,HINT_HEALTH,HINT_LADDER,HINT_FRIENDLY",
			"desc":"sets the cursor hint icon to display when the player looks at it.",
			"value":"HINT_ACTIVATE"
		},
		"hintstring":{
			"type":"string",
			"desc":"Hint string to display over the icon. Auto replaces [Use] with the key the player must press. Example: \"Press [Use] to plant the bomb\"."
		},
		"STARTOFF":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"HAS_USER":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false"
		},
		"TRIGGER_ONCE":{
			"type":"bool",
			"spawnflag":"1024",
			"value":"false"
		},
		"targetname":{
			"type":"string"
		},
		"_color":{
			"type":"color",
			"value":"0.3 0.5 0.8"
		}
	},
	{
		"classname":"trigger_use_touch",
		"classcolor":".3 .5 .8",
		"desc":"When the player is touching and activated, the trigger will use its target.",
		"parents":"trigger_use"
	},
	{
		"classname":"trigger_once",
		"classcolor":"1 .3 .1",
		"parents":"template_trigger_flags",
		"desc":"Must be targeted at one or more entities.\nOnce triggered, this entity is destroyed.\n(you can actually do the same thing with trigger_multiple with a wait of -1)",
		"AI_AXIS":{
			"group":"[entities]",
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"AI_ALLIES":{
			"group":"[entities]",
			"type":"bool",
			"spawnflag":"2",
			"value":"false"
		},
		"AI_NEUTRAL":{
			"group":"[entities]",
			"type":"bool",
			"spawnflag":"4",
			"value":"false"
		},
		"NOTPLAYER":{
			"group":"[entities]",
			"type":"bool",
			"spawnflag":"8",
			"value":"false"
		},
		"VEHICLE":{
			"group":"[entities]",
			"type":"bool",
			"spawnflag":"16",
			"value":"false"
		},
		"TRIGGER_SPAWN":{
			"type":"bool",
			"spawnflag":"32",
			"value":"false"
		},
		"CLIENTSIDE_TRIGGER":{
			"group":"[server-client]",
			"type":"bool",
			"spawnflag":"128",
			"value":"false"
		},
		"LOOK":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false",
			"desc":"Target a scipt_struct to trigger only when player is touching this trigger and looking at the struct (must use trigger::wait_till function)"
		},
		"BOTHSIDE_TRIGGER":{
			"group":"[server-client]",
			"type":"bool",
			"spawnflag":"2048",
			"value":"false"
		},
		"wait":{
			"type":"int",
			"desc":"-1 = one time only, otherwise triggers every frame.",
			"min":"-1",
			"max":"1",
			"value":"0"
		},
		"targetname":{
			"type":"string"
		},
		"script_trigger_allplayers":{
			"type":"bool",
			"desc":"Require all players to trigger"
		},
		"script_exploder":{
			"group":"[exploders]",
			"type":"int",
			"desc":"This exploder will trigger when this trigger is hit"
		},
		"script_stop_exploder":{
			"group":"[exploders]",
			"type":"int",
			"desc":"This exploder will stop when this trigger is hit"
		},
		"script_exploder_radiant":{
			"group":"[exploders]",
			"type":"string",
			"desc":"This exploder will trigger when this trigger is hit"
		},
		"script_stop_exploder_radiant":{
			"group":"[exploders]",
			"type":"string",
			"desc":"This exploder will stop when this trigger is hit"
		},
		"script_checkpoint":{
			"group":"[Checkpoint Save]",
			"type":"bool",
			"desc":"Save a checkpoint in CP gamemode"
		},
		"_color":{
			"type":"color",
			"value":"1.0 0.3 0.1"
		}
	},
	{
		"classname":"trigger_multiple",
		"classcolor":"1 .3 .1",
		"desc":"Variable sized repeatable trigger.",
		"parents":"trigger_once",
		"TRIGGER_ONCE":{
			"type":"bool",
			"spawnflag":"1024",
			"value":"false"
		}
	},
	{
		"classname":"trigger_radius",
		"classcolor":"1 .3 .1",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 32",
		"desc":"Radius-sized trigger.\n  Adjust radius with alt-'[' and alt-']'.\n  Adjust height with alt-',' and alt-'.'.",
		"parents":"trigger_multiple",
		"height":{
			"type":"float",
			"value":"0",
			"manipulator":"circle.z"
		},
		"radius":{
			"type":"float",
			"value":"0",
			"min":"0",
			"manipulator":"circle.xy"
		}
	},
	{
		"classname":"trigger_box",
		"classcolor":"1 .3 .1",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Box-sized trigger.\n  Adjust width with ctrl+alt+shift+'I' and ctrl+alt+shift+'O'.\n  Adjust length with ctrl+alt+shift+'J' and ctrl+alt+shift+'K'.\n  Adjust height with ctrl+alt+shift+'N' and ctrl+alt+shift+'M'.",
		"parents":"trigger_multiple",
		"height":{
			"type":"float",
			"value":"0",
			"manipulator":"box.z"
		},
		"length":{
			"type":"float",
			"value":"0",
			"manipulator":"box.y"
		},
		"width":{
			"type":"float",
			"value":"0",
			"manipulator":"box.x"
		}
	},
	{
		"classname":"trigger_hurt",
		"parents":"template_trigger_flags",
		"classcolor":"1 .3 .1",
		"desc":"Any entity that touches this will be hurt.\nIt does dmg points of damage each server frame.\nTargeting the trigger will toggle its on / off state.\nthe entity must be used first before it will count down its life.",
		"START_OFF":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"PLAYER_ONLY":{
			"type":"bool",
			"desc":"only damages the player",
			"spawnflag":"2",
			"value":"false"
		},
		"SILENT":{
			"type":"bool",
			"desc":"supresses playing the sound",
			"spawnflag":"4",
			"value":"false"
		},
		"NO_PROTECTION":{
			"type":"bool",
			"desc":"*nothing* stops the damage",
			"spawnflag":"8",
			"value":"false"
		},
		"SLOW":{
			"type":"bool",
			"desc":"changes the damage rate to once per second",
			"spawnflag":"16",
			"value":"false"
		},
		"ONCE":{
			"type":"bool",
			"spawnflag":"32",
			"value":"false"
		},
		"IGNORE_LASTSTAND":{
			"type":"bool",
			"desc":"Do not do damage to players in laststand.",
			"spawnflag":"64",
			"value":"false"
		},
		"script_hazard":{
			"type":"string",
			"enum":"none,heat,filter,o2,radation,biohazard",
			"desc":"Make this hurt trigger a fire trigger. This might override other settings.",
			"spawnflag":"256",
			"value":"false"
		},
		"dmg":{
			"type":"int",
			"desc":"Amount of damage done.",
			"min":"1",
			"max":"100000",
			"value":"5"
		},
		"_color":{
			"type":"color",
			"value":"1.0 0.3 0.1"
		}
	},
	{
		"classname":"trigger_out_of_bounds",
		"classcolor":"1 0 1",
		"desc":"A player who touches this will be warned to return to playable area, and possibly hurt/killed",
		"_color":{
			"type":"color",
			"value":"1 0 1"
		}
	},
	{
		"classname":"trigger_damage",
		"classcolor":"1 .3 .1",
		"desc":"Trigger that responds to taking damage. Damage trigger will trigger if a bullet intersects them or if a projectile or grenade explodes inside the trigger.",
		"PISTOL_NO":{
			"type":"bool",
			"desc":"turns off response to pistol damage",
			"spawnflag":"1",
			"value":"false"
		},
		"RIFLE_NO":{
			"type":"bool",
			"desc":"turns off response to rifle damage",
			"spawnflag":"2",
			"value":"false"
		},
		"PROJ_NO":{
			"type":"bool",
			"desc":"turns off response to projectile damage from grenades and rockets. Note that turning off projectile damage will also turn off splash damage, whether or not the splash is on.",
			"spawnflag":"4",
			"value":"false"
		},
		"EXPLOSION_NO":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false"
		},
		"SPLASH_NO":{
			"type":"bool",
			"desc":"turns off response to splash damage from grenades and rockets.",
			"spawnflag":"16",
			"value":"false"
		},
		"MELEE_NO":{
			"type":"bool",
			"desc":"turns off response to melee damage",
			"spawnflag":"32",
			"value":"false"
		},
		"FIRE_NO":{
			"type":"bool",
			"desc":"turns off response to flame/fire damage",
			"spawnflag":"64",
			"value":"false"
		},
		"MISC_NO":{
			"type":"bool",
			"desc":"turns off response to all other misc types of damage",
			"spawnflag":"256",
			"value":"false"
		},
		"TRIGGER_ONCE":{
			"type":"bool",
			"desc":"",
			"spawnflag":"1024",
			"value":"false"
		},
		"wait":{
			"type":"int",
			"desc":"-1 = one time only, otherwise triggers every frame.",
			"min":"-1",
			"max":"1",
			"value":"0"
		},
		"accumulate":{
			"type":"int",
			"desc":"If set, this much damage must be accumulated before it will trigger. Note that accumulate & threshold can used at the same time.",
			"min":"0",
			"max":"999999999",
			"value":"1"
		},
		"threshold":{
			"type":"int",
			"desc":"If set, the min amount of damage that must be done to it to trigger it. Note that accumulate & threshold can used at the same time.",
			"min":"0",
			"max":"999999999",
			"value":"1"
		},
		"targetname":{
			"type":"string"
		},
		"_color":{
			"type":"color",
			"value":"1.0 0.3 0.1"
		}
	},
	{
		"classname":"trigger_navmesh",
		"classcolor":".3 .5 .8",
		"desc":"Defines a valid volume for pathfinding.",
		"targetname":{
			"type":"string"
		}
	},
	{
		"classname":"script_brushmodel",
		"classcolor":"0 .5 .8",
		"shadow_casting":{
			"type":"bool",
			"desc":"Enable dynamic shadows.",
			"group":"Lighting",
			"value":"true"
		},
		"static":{
			"type":"bool",
			"desc":"Include in the baked shadows and probes.",
			"group":"Lighting",
			"value":"false"
		},
		"probes_only":{
			"type":"bool",
			"desc":"Only export in probes.",
			"group":"Lighting",
			"value":"false"
		},
		"dont_reflect":{
			"type":"bool",
			"desc":"Don't include in reflections, though it may still contribute to GI.",
			"group":"Lighting",
			"value":"false"
		},
		"dynamic_probes_only":{
			"type":"bool",
			"desc":"Include in dynamic probes.",
			"group":"Lighting",
			"value":"false"
		},
		"lightingstate1":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate2":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate3":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate4":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"DYNAMICPATH":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"static_navmesh":{
			"type":"bool",
			"desc":"Generate static navmesh from this script_brushmodel.",
			"value":"false",
			"group":"Navmesh"
		},
		"target":{
			"type":"string"
		},
		"targetname":{
			"type":"string"
		},
		"_color":{
			"type":"color",
			"value":"0 0.5 0.8"
		},
		"moving_platform_enabled":{
			"type":"bool",
			"desc":"makes a script brushmodel a moving platform and generates a navmesh on top of it.",
			"value":"false",
			"group":"Navmesh"
		}
	},
	{
		"classname":"script_model",
		"classcolor":"1 0 0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"shadow_casting":{
			"type":"bool",
			"desc":"Enable dynamic shadows.",
			"group":"Lighting",
			"value":"true"
		},
		"static":{
			"type":"bool",
			"desc":"Include in the baked shadows and probes.",
			"group":"Lighting",
			"value":"false"
		},
		"probes_only":{
			"type":"bool",
			"desc":"Only export in probes.",
			"group":"Lighting",
			"value":"false"
		},
		"dont_reflect":{
			"type":"bool",
			"desc":"Don't include in reflections, though it may still contribute to GI.",
			"group":"Lighting",
			"value":"false"
		},
		"dynamic_probes_only":{
			"type":"bool",
			"desc":"Include in dynamic probes.",
			"group":"Lighting",
			"value":"false"
		},
		"lightingstate1":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate2":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate3":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"lightingstate4":{
			"type":"bool",
			"group":"Lighting/States",
			"value":"true"
		},
		"client_server":{
			"type":"string",
			"enum":"ClientSide,ServerSide",
			"desc":"Makes a script model show up as an entity to server side script. NOTE: default is client side so you must click the server side check box to grab on the server.",
			"value":"ServerSide"
		},
		"DYNAMICPATH":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"model":{
			"type":"string",
			"assetType":"xmodel"
		},
		"modelscale":{
			"type":"float",
			"min":"0.1",
			"max":"100000",
			"singleStep":"0.01",
			"value":"1"
		},
		"targetname":{
			"type":"string"
		},
		"_color":{
			"type":"color",
			"value":"1 0 0"
		},
		"moving_platform_enabled":{
			"type":"bool",
			"desc":"makes a script model a moving platform and generates a navmesh on top of it.",
			"value":"false",
			"group":"Navmesh"
		}
	},
	{
		"classname":"script_origin",
		"classcolor":".4 0 .8",
		"bboxmin":"-8 -8 -8",
		"bboxmax":"8 8 8",
		"client_server":{
			"type":"string",
			"enum":"ClientSide,ServerSide",
			"value":"ClientSide"
		},
		"targetname":{
			"type":"string"
		},
		"_color":{
			"type":"color",
			"value":"0.4 0 0.8"
		}
	},
	{
		"classname":"script_struct",
		"classcolor":"1 0 0",
		"bboxmin":"-8 -8 -8",
		"bboxmax":"8 8 8",
		"targetname":{
			"type":"string"
		},
		"_color":{
			"type":"color",
			"value":"1 0 0"
		}
	},
	{
		"classname":"sound_line_emitter",
		"classcolor":"0 1 0",
		"bboxmin":"-8 -8 -8",
		"bboxmax":"8 8 8",
		"targetname":{
			"type":"string"
		},
		"_color":{
			"type":"color",
			"value":"0 1 0"
		},
		"script_label":{
			"type":"string",
			"value":"line_emitter"
		},
		"script_sound":{
			"type":"string",
			"value":""
		},
		"script_looping":{
			"type":"int",
			"min":"0",
			"max":"1",
			"value":"1"
		}
	},
	{
		"classname":"sound_random",
		"classcolor":"1 1 0",
		"bboxmin":"-8 -8 -8",
		"bboxmax":"8 8 8",
		"targetname":{
			"type":"string"
		},
		"_color":{
			"type":"color",
			"value":"1 1 0"
		},
		"script_label":{
			"type":"string",
			"value":"random"
		},
		"script_sound":{
			"type":"string",
			"value":""
		},
		"script_wait_max":{
			"type":"int",
			"min":"0",
			"max":"1000000",
			"value":"0"
		},
		"script_wait_min":{
			"type":"int",
			"min":"0",
			"max":"1000000",
			"value":"0"
		}
	},
	{
		"classname":"sound_looper",
		"classcolor":"0 0 1",
		"bboxmin":"-8 -8 -8",
		"bboxmax":"8 8 8",
		"targetname":{
			"type":"string"
		},
		"_color":{
			"type":"color",
			"value":"0 0 1"
		},
		"script_label":{
			"type":"string",
			"value":"looper"
		},
		"script_sound":{
			"type":"string",
			"value":""
		},
		"script_looping":{
			"type":"int",
			"min":"0",
			"max":"1",
			"value":"1"
		}
	},
	{
		"classname":"spawn_manager",
		"classcolor":"1 0 0",
		"bboxmin":"-8 -8 -8",
		"bboxmax":"8 8 8",
		"desc":"manages multiple spawners",
		"target":{
			"type":"string",
			"desc":"spawners to manage"
		},
		"coop_count":{
			"type":"multiInt",
			"group":"[COUNT]",
			"propName1": "count",
			"propName2": "sm_count_2player",
			"propName3": "sm_count_3player",
			"propName4": "sm_count_4player",
			"desc":"maximum ai to spawn over lifetime. Set to -1 for infinite."
		},
		"count":{
			"type":"int",
			"group":"[COUNT]",
			"desc":"maximum ai to spawn over lifetime for a 1 player game. Set to -1 for infinite.",
			"min":"-1",
			"max":"100000",
			"value":"-1",
			"hidden":"true"
		},
		"sm_count_2player":{
			"type":"int",
			"group":"[COUNT]",
			"desc":"maximum ai to spawn over lifetime for a 2 player game. Set to -1 for infinite.",
			"min":"-1",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"sm_count_3player":{
			"type":"int",
			"group":"[COUNT]",
			"desc":"maximum ai to spawn over lifetime. Set to -1 for infinite.",
			"min":"-1",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"sm_count_4player":{
			"type":"int",
			"group":"[COUNT]",
			"desc":"maximum ai to spawn over lifetime. Set to -1 for infinite.",
			"min":"-1",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"coop_active_count_min":{
			"type":"multiInt",
			"group":"[COUNT]",
			"propName1": "sm_active_count_min",
			"propName2": "sm_active_count_min_2player",
			"propName3": "sm_active_count_min_3player",
			"propName4": "sm_active_count_min_4player",
			"desc":"minimum simultanious ai active"
		},
		"sm_active_count_min":{
			"type":"int",
			"group":"[COUNT]",
			"desc":"minimum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"3",
			"hidden":"true"
		},
		"sm_active_count_min_2player":{
			"type":"int",
			"group":"[COUNT]",
			"desc":"minimum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"sm_active_count_min_3player":{
			"type":"int",
			"group":"[COUNT]",
			"desc":"minimum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"sm_active_count_min_4player":{
			"type":"int",
			"group":"[COUNT]",
			"desc":"minimum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"coop_active_count_max":{
			"type":"multiInt",
			"group":"[COUNT]",
			"propName1": "sm_active_count_max",
			"propName2": "sm_active_count_max_2player",
			"propName3": "sm_active_count_max_3player",
			"propName4": "sm_active_count_max_4player",
			"desc":"maximum simultanious ai active"
		},
		"sm_active_count_max":{
			"type":"int",
			"group":"[COUNT]",
			"desc":"maximum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"3",
			"hidden":"true"
		},
		"sm_active_count_max_2player":{
			"type":"int",
			"group":"[COUNT]",
			"desc":"maximum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"sm_active_count_max_3player":{
			"type":"int",
			"group":"[COUNT]",
			"desc":"maximum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"sm_active_count_max_4player":{
			"type":"int",
			"group":"[COUNT]",
			"desc":"maximum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"coop_group_size_min":{
			"type":"multiInt",
			"group":"[GROUP SIZE]",
			"propName1": "sm_group_size_min",
			"propName2": "sm_group_size_min_2player",
			"propName3": "sm_group_size_min_3player",
			"propName4": "sm_group_size_min_4player",
			"desc":"The minimum number of AI this spawn manager will spawn at the same time from the same spawner."
		},
		"sm_group_size_min":{
			"type":"int",
			"group":"[GROUP SIZE]",
			"desc":"The minimum number of AI this spawn manager will spawn at the same time from the same spawner.",
			"min":"1",
			"max":"1000000",
			"value":"1",
			"hidden":"true"
		},
		"sm_group_size_min_2player":{
			"type":"int",
			"group":"[GROUP SIZE]",
			"desc":"maximum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"sm_group_size_min_3player":{
			"type":"int",
			"group":"[GROUP SIZE]",
			"desc":"maximum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"sm_group_size_min_4player":{
			"type":"int",
			"group":"[GROUP SIZE]",
			"desc":"maximum simultanious ai active",
			"min":"0",
			"max":"100000",
			"value":"0",
			"hidden":"true"
		},
		"coop_group_size_max":{
			"type":"multiInt",
			"group":"[GROUP SIZE]",
			"propName1": "sm_group_size_max",
			"propName2": "sm_group_size_max_2player",
			"propName3": "sm_group_size_max_3player",
			"propName4": "sm_group_size_max_4player",
			"desc":"The maximum number of AI this spawn manager will spawn at the same time from the same spawner."
		},
		"sm_group_size_max":{
			"type":"int",
			"group":"[GROUP SIZE]",
			"desc":"The maximum number of AI this spawn manager will spawn at the same time from the same spawner.",
			"min":"1",
			"max":"1000000",
			"value":"1",
			"hidden":"true"
		},
		"sm_group_size_max_2player":{
			"type":"int",
			"group":"[GROUP SIZE]",
			"desc":"The maximum number of AI this spawn manager will spawn at the same time from the same spawner.",
			"min":"1",
			"max":"1000000",
			"value":"0",
			"hidden":"true"
		},
		"sm_group_size_max_3player":{
			"type":"int",
			"group":"[GROUP SIZE]",
			"desc":"The maximum number of AI this spawn manager will spawn at the same time from the same spawner.",
			"min":"1",
			"max":"1000000",
			"value":"0",
			"hidden":"true"
		},
		"sm_group_size_max_4player":{
			"type":"int",
			"group":"[GROUP SIZE]",
			"desc":"The maximum number of AI this spawn manager will spawn at the same time from the same spawner.",
			"min":"1",
			"max":"1000000",
			"value":"0",
			"hidden":"true"
		},
		"script_delay_min":{
			"type":"float",
			"group":"[WAITS]",
			"desc":"Min delay before the first spawn.",
			"min":"0",
			"max":"100000",
			"value":"0"
		},
		"script_delay_max":{
			"type":"float",
			"group":"[WAITS]",
			"desc":"Max delay before the first spawn.",
			"min":"0",
			"max":"100000",
			"value":"0"
		},
		"script_wait_min":{
			"type":"float",
			"group":"[WAITS]",
			"desc":"Min wait between spawning each group.",
			"min":"0",
			"max":"100000",
			"value":"0"
		},
		"script_wait_max":{
			"type":"float",
			"group":"[WAITS]",
			"desc":"Max wait between spawning each group.",
			"min":"0",
			"max":"100000",
			"value":"0"
		},
		"sm_wave_wait_min":{
			"type":"float",
			"group":"[WAITS]",
			"desc":"Min wait between spawning each wave (when min active count is reached).",
			"min":"0",
			"max":"100000",
			"value":"0"
		},
		"sm_wave_wait_max":{
			"type":"float",
			"group":"[WAITS]",
			"desc":"Max wait between spawning each wave (when min active count is reached).",
			"min":"0",
			"max":"100000",
			"value":"0"
		},
		"sm_spawner_count_min":{
			"type":"int",
			"group":"[RANDOMIZE SPAWNERS]",
			"desc":"Minimum number of spawners to use out of all available spawners (will randomly grab a group of spawners to use between the min and max spawner count).",
			"min":"0",
			"max":"100000",
			"value":"0"
		},
		"sm_spawner_count_max":{
			"type":"int",
			"group":"[RANDOMIZE SPAWNERS]",
			"desc":"Maximum number of spawners to use out of all available spawners (will randomly grab a group of spawners to use between the min and max spawner count).",
			"min":"0",
			"max":"100000",
			"value":"0"
		},
		"targetname":{
			"type":"string"
		},
		"name":{
			"type":"string",
			"desc":"Unique name for this spawn manager if targetname is not unique."
		},
		"script_killspawner":{
			"type":"string",
			"group":"[MISC]",
			"desc":"Kill spawn manager when a trigger whith the same script_killspawner triggers.",
			"autoInc" : true
		},
		"_color":{
			"type":"color",
			"value":"1 0 0"
		}
	},
	{
		"classname":"info_vehicle_node",
		"classcolor":"0.5 0 1",
		"bboxmin":"-24 -24 -24",
		"bboxmax":"24 24 24",
		"START_NODE":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"SPLINE_NODE":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false"
		},
		"targetname":{
			"type":"string",
			"desc":"name of this node"
		},
		"target":{
			"type":"string",
			"desc":"name of next node in this path"
		},
		"target2":{
			"type":"string",
			"desc":"only used to setup the vehicle path node grid"
		},
		"speed":{
			"type":"float",
			"desc":"speed[mph] vehicle should have at this node",
			"min":"0",
			"max":"100000",
			"value":"10"
		},
		"lookahead":{
			"type":"float",
			"desc":"time[sec] vehicle should look ahead at this node",
			"min":"0",
			"max":"1000",
			"value":"1"
		},
		"tension":{
			"type":"float",
			"desc":"Value between 0 and 1. Default 0.5. Used with the new spline algorithm to adjust the curvature of the spline at this node.",
			"min":"0",
			"max":"1",
			"value":".5"
		},
		"script_deathroll":{
			"type":"bool",
			"desc":"turns on and off deathroll for vehicles crossing paths",
			"value":"false",
			"group":"Vehicle Script"
		},
		"script_notify":{
			"type":"string",
			"desc":"level and vehicle gets notified with this notify when a vehicle hits this pathnode",
			"group":"Vehicle Script"
		},
		"script_crashtype":{
			"type":"string",
			"enum":"default,forced,plane",
			"desc":"designates a crashpath apply to start nodes.\n  \"default\" - crash path is invalidated when vehicle runs through it\n  \"forced\"  - vehicles are forced to do crash path behavior (truck plays swerving out of control animation)\n  \"plane\"   - crash path is not invalidated (multiple vehicles will use the path)",
			"group":"Vehicle Script"
		},
		"script_unload":{
			"type":"string",
			"enum":"none,all,driver,passengers,crew,gunners",
			"desc":"Set an unload group to unload from this node.",
			"group":"Vehicle Script",
			"value":"none"
		},
		"script_vehicleattackgroup":{
			"type":"string",
			"autoInc":true,
			"group":"Vehicle Script"
		},
		"script_vehiclefocusfiregroup":{
			"type":"string",
			"autoInc":true,
			"group":"Vehicle Script"
		},
		"_color":{
			"type":"color",
			"value":"0.5 0 1"
		},
		"script_attackorgs":{
			"type":"string",
			"autoInc":true,
			"group":"Vehicle Script"
		},
		"script_delete":{
			"type":"bool",
			"group":"Vehicle Script",
			"desc":"Delete vehicle when reaching this node."
		}
	},
	{
		"classname":"info_vehicle_node_rotate",
		"classcolor":"0.2 0.4 1.0",
		"bboxmin":"-24 -24 -24",
		"bboxmax":"24 24 24",
		"START_NODE":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"SPLINE_NODE":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false"
		},
		"targetname":{
			"type":"string",
			"desc":"name of this node"
		},
		"target":{
			"type":"string",
			"desc":"name of next node in this path"
		},
		"target2":{
			"type":"string",
			"desc":"only used to setup the vehicle path node grid"
		},
		"speed":{
			"type":"float",
			"desc":"speed[mph] vehicle should have at this node",
			"min":"0",
			"max":"100000",
			"value":"10"
		},
		"lookahead":{
			"type":"float",
			"desc":"time[sec] vehicle should look ahead at this node",
			"min":"0",
			"max":"1000",
			"value":"1"
		},
		"tension":{
			"type":"float",
			"desc":"Value between 0 and 1. Default 0.5. Used with the new spline algorithm to adjust the curvature of the spline at this node.",
			"min":"0",
			"max":"1",
			"value":".5"
		},
		"script_deathroll":{
			"type":"bool",
			"desc":"turns on and off deathroll for vehicles crossing paths",
			"value":"false",
			"group":"Vehicle Script"
		},
		"script_notify":{
			"type":"string",
			"group":"Vehicle Script",
			"desc":"level and vehicle gets notified with this notify when a vehicle hits this pathnode"
		},
		"script_crashtype":{
			"type":"string",
			"enum":"default,forced,plane",
			"group":"Vehicle Script",
			"desc":"designates a crashpath apply to start nodes.\n  \"default\" - crash path is invalidated when vehicle runs through it\n  \"forced\"  - vehicles are forced to do crash path behavior (truck plays swerving out of control animation)\n  \"plane\"   - crash path is not invalidated (multiple vehicles will use the path)"
		},
		"script_vehicleattackgroup":{
			"type":"string",
			"autoInc":true,
			"group":"Vehicle Script"
		},
		"script_vehiclefocusfiregroup":{
			"type":"string",
			"autoInc":true,
			"group":"Vehicle Script"
		},
		"script_attackorgs":{
			"type":"string",
			"autoInc":true,
			"group":"Vehicle Script"
		},
		"model":{
			"type":"string",
			"assetType":"xmodel"
		},
		"_color":{
			"type":"color",
			"value":"0.2 .4 1.0"
		}
	},
	{
		"classname":"info_vehicle_node_avoidance",
		"classcolor":"0.98 0.121 0.98",
		"bboxmin":"-24 -24 -24",
		"bboxmax":"24 24 24",
		"height":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"value":"10"
		},
		"radius":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"value":"0"
		},
		"_color":{
			"type":"color",
			"value":"0.98 0.121 0.98"
		}
	},
	{
		"classname":"worldspawn",
		"classcolor":"0 0 0",
		"desc":"Every map should have exactly one worldspawn.\n  Sky intensity usage: You set two angles, angle0 and angle1, and the intensity factors at those angles.\n  The game engine will use the player's view angle to interpolate between angle0 and angle1, and get an interpolated intensity factor.\n  The sky box's color will be multiplied by this interpolated intensity factor.",
		"instanciate":{
			"type":"bool",
			"desc":"Convert to xmodel when use as a prefab",
			"value":"false",
			"hidden":"true"
		},
		"gravity":{
			"type":"float",
			"desc":"800 is default gravity.",
			"min":"0",
			"max":"10000",
			"value":"800",
			"group":"MISC"
		},
		"message":{
			"type":"string",
			"desc":"Text to print during connection process",
			"hidden":"true"
		},
		"fsi":{
			"type":"string",
			"assetType":"fog",
			"desc":"The fog settings file.",
			"value":"default",
			"hidden":"true"
		},
		"northyaw":{
			"type":"float",
			"desc":"Yaw angle that denotes the direction of north.",
			"min":"0",
			"max":"360",
			"value":"0",
			"group":"MISC"
		},
		"use_misc_models_collmaps":{
			"type":"bool",
			"desc":"if set, cod2map will bake the misc model collmaps in the bsp. On per misc model level, use \"use_collmap\" or/and \"no_collmap\" keys to turn on and off this functionality.",
			"value":"false",
			"group":"MODELS"
		},
		"coronamaterial":{
			"type":"string",
			"assetType":"material",
			"desc":"specifies a material to use for corona's on this map",
			"group":"ENTITY"
		},
		"ropematerial":{
			"type":"string",
			"assetType":"material",
			"desc":"specifies a material to use for ropes on this map",
			"group":"ENTITY"
		},
		"sky_intensity_angle0":{
			"type":"float",
			"desc":"angle in degrees. 0 for player looking straight ahead, 45 for half up, 90 for straight up, etc..",
			"min":"-90",
			"max":"90",
			"value":"0",
			"group":"SKY"
		},
		"sky_intensity_angle1":{
			"type":"float",
			"desc":"angle in degrees. 0 for player looking straight ahead, 45 for half up, 90 for straight up, etc..",
			"min":"-90",
			"max":"90",
			"value":"0",
			"group":"SKY"
		},
		"sky_intensity_factor0":{
			"type":"float",
			"desc":"sky color will be multiplied by this value. when player view angle matches angle0.",
			"min":"0",
			"max":"10",
			"value":"1",
			"group":"SKY"
		},
		"sky_intensity_factor1":{
			"type":"float",
			"desc":"sky color will be multiplied by this value. when player view angle matches angle1.",
			"min":"0",
			"max":"10",
			"value":"1",
			"group":"SKY"
		},
		"state_alias_1":{
			"type":"string",
			"value":"State 1",
			"desc":"alias for State 1",
			"hidden":"true",
			"group":"STATE_ALIASES"
		},
		"state_alias_2":{
			"type":"string",
			"value":"State 2",
			"desc":"alias for State 2",
			"hidden":"true",
			"group":"STATE_ALIASES"
		},
		"state_alias_3":{
			"type":"string",
			"value":"State 3",
			"desc":"alias for State 3",
			"hidden":"true",
			"group":"STATE_ALIASES"
		},
		"state_alias_4":{
			"type":"string",
			"value":"State 4",
			"desc":"alias for State 4",
			"hidden":"true",
			"group":"STATE_ALIASES"
		},
		"lutmaterial":{
			"type":"string",
			"enum":"3a_common,3a_castle,3a_apartments,3a_outlaw,cm_contrast,cm_vibrance,cm_boost,cm_mono,vk_victis,vk_berkerly,vk_hardcore,vk_akva,vk_dakken,vk_evkla,vk_hackerspace,vk_potd2,vk_remoteoperations,vk_seela,vk_scape,xl_bio,xl_colonial,xl_gul,xl_nws,xl_nws2,xl_nws3,lg_gtacustoms,lg_kowloon,lg_lasertag,lg_lighthouse,lg_newfound,lg_penthouse,lg_uze,gn_dobby,gn_covehurricane,gn_dessert,gn_memories,gn_wildwind,gn_candlelight,gn_iceicebaby,gn_teenagedream,gn_childrenofmen,gn_goingforward,gn_goodmorning,gn_onceuponatime,gn_passingby,gn_undeniable,gn_urbancowboy,__customlut01__,__customlut02__,__customlut03__,__customlut04__,__customlut05__,__customlut06__,__customlut07__,__customlut08__,__customlut09__,__customlut10__,__customlut11__,__customlut12__,__customlut13__,__customlut14__,__customlut15__,__customlut16__",
			"assetType":"material",
			"desc":"Material that contains all the LUT materials.",
			"value":"3a_common",
			"group":"GRADING"
		},
		"vbloom":{
			"type":"string",
			"desc":"Map wide bloom LVI - VerK0.",
			"enum":"none,mp_apartments,mp_biodome,mp_chinatown,mp_ethiopia,mp_freerun_01,mp_freerun_01_water,mp_freerun_02,mp_freerun_02_water,mp_freerun_03,mp_freerun_03_water,mp_freerun_04,mp_freerun_04_water,mp_havoc,mp_infection,mp_metro,mp_redwood,mp_sector_03,mp_spire,mp_stronghold,mp_veiled,zm_factory,zm_factory_tele_a,zm_factory_tele_b,zm_factory_tele_c",
			"value":"none",
			"group":"GRADING"
		},
		"vcolor":{
			"type":"string",
			"desc":"Map wide color LVI - VerK0.",
			"enum":"none,mp_apartments,mp_biodome,mp_chinatown,mp_ethiopia,mp_freerun_01,mp_freerun_01_water,mp_freerun_02,mp_freerun_02_water,mp_freerun_03,mp_freerun_03_water,mp_freerun_04,mp_freerun_04_water,mp_havoc,mp_infection,mp_metro,mp_redwood,mp_sector_03,mp_spire,mp_stronghold,mp_veiled,zm_factory,zm_factory_tele_a,zm_factory_tele_b,zm_factory_tele_c",
			"value":"none",
			"group":"GRADING"
		},
		"numSpotShadowSlices":{
			"type":"int",
			"desc":"Number of spot shadow slices.",
			"min":"8",
			"max":"1024",
			"value":"64",
			"hidden":"true",
			"group":"LIGHTING"
		},
		"numOmniShadowSlices":{
			"type":"int",
			"desc":"Number of omni shadow slices.",
			"min":"8",
			"max":"256",
			"value":"24",
			"hidden":"true",
			"group":"LIGHTING"
		},
		"lodbias":{
			"type":"string",
			"enum":"default,detail,performance",
			"desc":"Selects active lod mode corresponding to multiplier & offsets in APE Xmodel settings",
			"value":"default",
			"group":"MODELS"
		},
		"umbra_prime_depth":{
			"type":"bool",
			"desc":"Allow priming of the depth buffer with Umbra data. This can accelarate the GBuffer pass.",
			"value":"true",
			"group":"UMBRA"
		},
		"umbraSmallestHole":{
			"type":"int",
			"desc":"Smallest hole that Umbra can see - VerK0.",
			"min":"4",
			"max":"512",
			"value":"16",
			"group":"UMBRA"
		},
		"umbraSmallestOccluder":{
			"type":"int",
			"desc":"Smallest occluder that Umbra can see - VerK0.",
			"min":"16",
			"max":"2048",
			"value":"96",
			"group":"UMBRA"
		},
		"umbraTileSize":{
			"type":"int",
			"desc":"Size of the tiles generated in the umbra tome - VerK0.",
			"min":"1",
			"max":"32",
			"value":"2",
			"group":"UMBRA"
		},
		"vol_pri_fix":{
			"type":"int",
			"desc":"Enable DT 161931 bug fix for volume priority",
			"value":"0",
			"group":"MISC"
		},
		"origin":{
			"type":"vec3d",
			"value":"0 0 0",
			"hidden":"true"
		},
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"hidden":"true"
		},
		"lightingquality":{
			"type":"int",
			"value":"1024",
			"hidden":"true"
		},
		"samplescale":{
			"type":"int",
			"value":"1",
			"hidden":"true"
		},
		"shadowslices":{
			"type":"int",
			"value":"96",
			"hidden":"true"
		},
		"skyboxmodel":{
			"type":"string",
			"value":"skybox_default_day",
			"hidden":"true"
		},
		"ssi":{
			"type":"string",
			"value":"default_day",
			"hidden":"true"
		},
		"wsi":{
			"type":"string",
			"value":"default_day",
			"hidden":"true"
		}
	},
	{
		"classname":"radiant_fx_physics",
		"classcolor":"1 1 1",
		"desc":"A Radiant-only object that allows for physics collisions."
	},
	{
		"templatename":"template_node",
		"classcolor":"0 0 0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"targetname":{
			"type":"string"
		},
		"radius":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"value":"0",
			"manipulator":"circle.xy"
		}
	},
	{
		"classname":"node_pathnode",
		"parents":"template_node",
		"classcolor":"1 0 1",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"STANCE_DONT_STAND":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false"
		},
		"STANCE_DONT_CROUCH":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false"
		},
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"CHOKE_POINT":{
			"type":"bool",
			"desc":"node is randomly expensive to use",
			"spawnflag":"512",
			"value":"false"
		},
		"angles":{
			"type":"vec3d",
			"desc":"face this way when at this node on a friendly chain",
			"value":"0 0 0"
		},
		"nodoublewide":{
			"type":"bool",
			"value":"false"
		},
		"noquadrotor":{
			"type":"bool",
			"value":"false"
		},
		"_color":{
			"type":"color",
			"value":"1 0 1"
		},
		"script_notify":{
			"type":"string",
			"desc":"level and actor gets notified with this notify when a patrolling actor hits this pathnode",
			"group":"PATROL"
		},
		"script_flag_set":{
			"type":"string",
			"desc":"This flag gets set when a patrolling actor hits this pathnode.",
			"group":"PATROL"
		},
		"script_wait_max":{
			"type":"float",
			"value":"0",
			"desc":"Maximum amount of time in seconds the actor will wait at this node if a scene has not been specified",
			"group":"PATROL"
		},
		"script_wait_min":{
			"type":"float",
			"value":"0",
			"desc":"Minimum amount of time in seconds the actor will wait at this node if a scene has not been specified",
			"group":"PATROL"
		},
		"scriptbundlename":{
			"type":"string",
			"desc":"Name of scene scriptbundle actor will play upon arriving at this pathnode while patrolling",
			"group":"PATROL"
		}
	},
	{
		"classname":"node_cover_stand",
		"parents":"template_node",
		"classcolor":"0 .54 .66",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"PRIORITY":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false"
		},
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"DONT_LINK":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"BALCONY":{
			"type":"bool",
			"spawnflag":"1024",
			"value":"false"
		},
		"BALCONY_NORAILING":{
			"type":"bool",
			"spawnflag":"2048",
			"value":"false"
		},
		"script_balconydeathchance":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.01",
			"value":"1"
		},
		"CHOKE_POINT":{
			"type":"bool",
			"desc":"node is randomly expensive to use",
			"value":"false"
		},
		"angles":{
			"type":"vec3d",
			"desc":"cover is valid against enemies from this direction",
			"value":"0 0 0"
		},
		"previewmdl1":{
			"type":"string",
			"value":"c_generic_gray_fb",
		 "noExport":"true"
		},
		"previewanim1":{
			"type":"string",
			"value":"radiant_ai_base_rifle_stn_cover_lean_idle",
		 "noExport":"true"
		},
		"previewanim2":{
			"type":"string",
			"value":"radiant_ai_base_rifle_stn_cover_alert_idle",
		 "noExport":"true"
		},
		"_color":{
			"type":"color",
			"value":"0 .54 .66"
		}
	},
	{
		"classname":"node_cover_crouch",
		"parents":"template_node",
		"classcolor":"0 .93 .72",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"PRIORITY":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false"
		},
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"DONT_LINK":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"BALCONY_NORAILING":{
			"type":"bool",
			"spawnflag":"2048",
			"value":"false"
		},
		"script_balconydeathchance":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.01",
			"value":"1"
		},
		"CHOKE_POINT":{
			"type":"bool",
			"desc":"node is randomly expensive to use",
			"value":"false"
		},
		"angles":{
			"type":"vec3d",
			"desc":"cover is valid against enemies from this direction",
			"value":"0 0 0"
		},
		"previewmdl1":{
			"type":"string",
			"value":"c_generic_gray_fb",
			"noExport":"true"
		},
		"previewanim1":{
			"type":"string",
			"value":"radiant_ai_base_rifle_crc_cover_alert_idle",
			"noExport":"true"
		},
		"_color":{
			"type":"color",
			"value":"0 .93 .72"
		}
	},
	{
		"classname":"node_cover_crouch_window",
		"parents":"template_node",
		"classcolor":"0 .7 .5",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"DONT_LINK":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"CHOKE_POINT":{
			"type":"bool",
			"desc":"node is randomly expensive to use",
			"value":"false"
		},
		"angles":{
			"type":"vec3d",
			"desc":"cover is valid against enemies from this direction",
			"value":"0 0 0"
		},
		"previewmdl1":{
			"type":"string",
			"value":"c_generic_gray_fb",
			"noExport":"true"
		},
		"previewanim1":{
			"type":"string",
			"value":"covercrouch_hide_idle",
			"noExport":"true"
		},
		"previewanim2":{
			"type":"string",
			"value":"covercrouch_hide_2_aim",
			"noExport":"true"
		},
		"previewanim3":{
			"type":"string",
			"value":"covercrouch_hide_2_lean",
			"noExport":"true"
		},
		"previewanim4":{
			"type":"string",
			"value":"covercrouch_blindfire_1",
			"noExport":"true"
		},
		"_color":{
			"type":"color",
			"value":"0 .7 .5"
		}
	},
	{
		"classname":"node_cover_prone",
		"parents":"template_node",
		"classcolor":"0 .60 .46",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"PRIORITY":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false"
		},
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"DONT_LINK":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"CHOKE_POINT":{
			"type":"bool",
			"desc":"node is randomly expensive to use",
			"spawnflag":"512",
			"value":"false"
		},
		"angles":{
			"type":"vec3d",
			"desc":"cover is valid against enemies from this direction",
			"value":"0 0 0"
		},
		"previewmdl1":{
			"type":"string",
			"value":"c_generic_gray_fb",
			"noExport":"true"
		},
		"previewanim1":{
			"type":"string",
			"value":"prone_aim_5",
			"noExport":"true"
		},
		"previewanim2":{
			"type":"string",
			"value":"prone_twitch_look",
			"noExport":"true"
		},
		"previewanim3":{
			"type":"string",
			"value":"stand_2_prone_firing",
			"noExport":"true"
		},
		"previewanim4":{
			"type":"string",
			"value":"crouch_2_prone_firing",
			"noExport":"true"
		},
		"_color":{
			"type":"color",
			"value":"0 .60 .46"
		}
	},
	{
		"classname":"node_cover_right",
		"parents":"template_node",
		"classcolor":".85 .85 .10",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"STANCE_DONT_STAND":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false"
		},
		"STANCE_DONT_CROUCH":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false"
		},
		"PRIORITY":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false"
		},
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"DONT_LINK":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"CHOKE_POINT":{
			"type":"bool",
			"desc":"node is randomly expensive to use",
			"spawnflag":"512",
			"value":"false"
		},
		"angles":{
			"type":"vec3d",
			"desc":"cover is valid against enemies from this direction",
			"value":"0 0 0"
		},
		"previewmdl1":{
			"type":"string",
			"value":"c_generic_gray_fb",
			"noExport":"true"
		},
		"previewanim1":{
			"type":"string",
			"value":"radiant_ai_base_rifle_stn_cover_right_alert_idle",
			"noExport":"true"
		},
		"previewanim2":{
			"type":"string",
			"value":"radiant_ai_base_rifle_stn_cover_right_lean_idle",
			"noExport":"true"
		},
		"previewanim3":{
			"type":"string",
			"value":"radiant_ai_base_rifle_crc_cover_right_alert_idle",
			"noExport":"true"
		},
		"previewanim4":{
			"type":"string",
			"value":"radiant_ai_base_rifle_crc_cover_right_lean_idle",
			"noExport":"true"
		},
		"previewanim5":{
			"type":"string",
			"value":"radiant_ai_base_rifle_crc_cover_right_peek",
			"noExport":"true"
		},
		"_color":{
			"type":"color",
			"value":".85 .85 .10"
		}
	},
	{
		"classname":"node_cover_left",
		"parents":"template_node",
		"classcolor":"1 .7 0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"STANCE_DONT_STAND":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false"
		},
		"STANCE_DONT_CROUCH":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false"
		},
		"PRIORITY":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false"
		},
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"DONT_LINK":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"CHOKE_POINT":{
			"type":"bool",
			"desc":"node is randomly expensive to use",
			"spawnflag":"512",
			"value":"false"
		},
		"angles":{
			"type":"vec3d",
			"desc":"cover is valid against enemies from this direction",
			"value":"0 0 0"
		},
		"previewmdl1":{
			"type":"string",
			"value":"c_generic_gray_fb",
			"noExport":"true"
		},
		"previewanim1":{
			"type":"string",
			"value":"radiant_ai_base_rifle_stn_cover_left_alert_idle",
			"noExport":"true"
		},
		"previewanim2":{
			"type":"string",
			"value":"radiant_ai_base_rifle_stn_cover_left_lean_idle",
			"noExport":"true"
		},
		"previewanim3":{
			"type":"string",
			"value":"radiant_ai_base_rifle_stn_cover_left_peek",
			"noExport":"true"
		},
		"previewanim4":{
			"type":"string",
			"value":"radiant_ai_base_rifle_crc_cover_left_alert_idle",
			"noExport":"true"
		},
		"previewanim5":{
			"type":"string",
			"value":"radiant_ai_base_rifle_crc_cover_left_lean_idle",
			"noExport":"true"
		},
		"previewanim6":{
			"type":"string",
			"value":"radiant_ai_base_rifle_crc_cover_left_peek",
			"noExport":"true"
		},
		"modelscale":{
			"type":"float",
			"min":"0.1",
			"max":"100000",
			"singleStep":"0.01",
			"value":"1"
		},
		"_color":{
			"type":"color",
			"value":"1 .7 0"
		}
	},
	{
		"classname":"node_cover_pillar",
		"parents":"template_node",
		"classcolor":".10 .85 .10",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"STANCE_DONT_STAND":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false"
		},
		"STANCE_DONT_CROUCH":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false"
		},
		"DONT_LINK":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"PRIORITY":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false"
		},
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"DONT_LEFT":{
			"type":"bool",
			"spawnflag":"1024",
			"value":"false"
		},
		"DONT_RIGHT":{
			"type":"bool",
			"spawnflag":"2048",
			"value":"false"
		},
		"angles":{
			"type":"vec3d",
			"desc":"cover is valid against enemies from this direction",
			"value":"0 0 0"
		},
		"previewmdl1":{
			"type":"string",
			"value":"c_generic_gray_fb"
		},
		"previewanim1":{
			"type":"string",
			"value":"radiant_ai_base_rifle_crc_pillar_idle",
			"noExport":"true"
		},
		"previewanim2":{
			"type":"string",
			"value":"radiant_ai_base_rifle_crc_pillar_left_alert_idle",
			"noExport":"true"
		},
		"previewanim3":{
			"type":"string",
			"value":"radiant_ai_base_rifle_crc_pillar_right_alert_idle",
			"noExport":"true"
		},
		"previewanim4":{
			"type":"string",
			"value":"radiant_ai_base_rifle_stn_pillar_left_alert_idle",
			"noExport":"true"
		},
		"previewanim5":{
			"type":"string",
			"value":"radiant_ai_base_rifle_stn_pillar_right_alert_idle",
			"noExport":"true"
		},
		"_color":{
			"type":"color",
			"value":".10 .85 .10"
		}
	},
	{
		"classname":"node_concealment_stand",
		"parents":"template_node",
		"classcolor":"0 0 1",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"PRIORITY":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false"
		},
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"DONT_LINK":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"BALCONY":{
			"type":"bool",
			"spawnflag":"1024",
			"value":"false"
		},
		"BALCONY_NORAILING":{
			"type":"bool",
			"spawnflag":"2048",
			"value":"false"
		},
		"script_balconydeathchance":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.01",
			"value":"1"
		},
		"CHOKE_POINT":{
			"type":"bool",
			"desc":"node is randomly expensive to use",
			"value":"false"
		},
		"angles":{
			"type":"vec3d",
			"desc":"concealment is valid against enemies from this direction",
			"value":"0 0 0"
		},
		"previewmdl1":{
			"type":"string",
			"value":"c_generic_gray_fb",
			"noExport":"true"
		},
		"previewanim1":{
			"type":"string",
			"value":"coverstand_hide_idle",
			"noExport":"true"
		},
		"previewanim2":{
			"type":"string",
			"value":"coverstand_hide_2_aim",
			"noExport":"true"
		},
		"previewanim3":{
			"type":"string",
			"value":"coverstand_blindfire_1",
			"noExport":"true"
		},
		"previewanim4":{
			"type":"string",
			"value":"coverstand_look_idle",
			"noExport":"true"
		},
		"previewanim5":{
			"type":"string",
			"value":"covercrouch_hide_idle",
			"noExport":"true"
		},
		"previewanim6":{
			"type":"string",
			"value":"covercrouch_hide_2_aim",
			"noExport":"true"
		},
		"previewanim7":{
			"type":"string",
			"value":"covercrouch_hide_2_lean",
			"noExport":"true"
		},
		"previewanim8":{
			"type":"string",
			"value":"covercrouch_blindfire_1",
			"noExport":"true"
		},
		"_color":{
			"type":"color",
			"value":"0 0 1"
		}
	},
	{
		"classname":"node_concealment_crouch",
		"parents":"template_node",
		"classcolor":"0 0 .75",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"PRIORITY":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false"
		},
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"DONT_LINK":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"BALCONY_NORAILING":{
			"type":"bool",
			"spawnflag":"2048",
			"value":"false"
		},
		"script_balconydeathchance":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.01",
			"value":"1"
		},
		"CHOKE_POINT":{
			"type":"bool",
			"desc":"node is randomly expensive to use",
			"value":"false"
		},
		"angles":{
			"type":"vec3d",
			"desc":"concealment is valid against enemies from this direction",
			"value":"0 0 0"
		},
		"previewmdl1":{
			"type":"string",
			"value":"c_generic_gray_fb",
			"noExport":"true"
		},
		"previewanim1":{
			"type":"string",
			"value":"covercrouch_hide_idle",
			"noExport":"true"
		},
		"previewanim2":{
			"type":"string",
			"value":"covercrouch_hide_2_aim",
			"noExport":"true"
		},
		"previewanim3":{
			"type":"string",
			"value":"covercrouch_hide_2_lean",
			"noExport":"true"
		},
		"previewanim4":{
			"type":"string",
			"value":"covercrouch_blindfire_1",
			"noExport":"true"
		},
		"_color":{
			"type":"color",
			"value":"0 0 .75"
		}
	},
	{
		"classname":"node_concealment_prone",
		"parents":"template_node",
		"classcolor":"0 0 .5",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"PRIORITY":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false"
		},
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"DONT_LINK":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"CHOKE_POINT":{
			"type":"bool",
			"desc":"node is randomly expensive to use",
			"spawnflag":"512",
			"value":"false"
		},
		"angles":{
			"type":"vec3d",
			"desc":"concealment is valid against enemies from this direction",
			"value":"0 0 0"
		},
		"previewmdl1":{
			"type":"string",
			"value":"c_generic_gray_fb",
			"noExport":"true"
		},
		"previewanim1":{
			"type":"string",
			"value":"prone_aim_5",
			"noExport":"true"
		},
		"previewanim2":{
			"type":"string",
			"value":"prone_twitch_look",
			"noExport":"true"
		},
		"previewanim3":{
			"type":"string",
			"value":"stand_2_prone_firing",
			"noExport":"true"
		},
		"previewanim4":{
			"type":"string",
			"value":"crouch_2_prone_firing",
			"noExport":"true"
		},
		"_color":{
			"type":"color",
			"value":"0 0 .5"
		}
	},
	{
		"classname":"node_scripted",
		"parents":"template_node",
		"classcolor":".72 .72 .83",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"angles":{
			"type":"vec3d",
			"desc":"orients the node for the animation",
			"value":"0 0 0"
		},
		"radius":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"value":"0"
		},
		"_color":{
			"type":"color",
			"value":".72 .72 .83"
		}
	},
	{
		"classname":"node_negotiation_begin",
		"parents":"template_node",
		"classcolor":".5 .6 .5",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Must target a single \"node_negotiation_end\".\nAlways contributes to navigation data.\nCan never be included in a friendly chain.",
		"STOP_FIRST":{
			"type":"bool",
			"desc":"if set, the AI comes to a complete stop before starting the node's animation script",
			"spawnflag":"32",
			"value":"false"
		},
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"STEERING_TRAVERSAL":{
			"type":"bool",
			"spawnflag":"134217728",
			"value":"false"
		},
		"CHOKE_POINT":{
			"type":"bool",
			"desc":"node is randomly expensive to use",
			"value":"false"
		},
		"PROCEDURAL":{
			"type":"bool",
			"desc":"AI should procedurally jump to the target node, without using an animation.",
			"spawnflag":"1024",
			"value":"false"
		},
		"WALLRUN":{
			"type":"bool",
			"desc":"node connects to a wallrun clip",
			"spawnflag":"2048",
			"value":"false"
		},
		"AIRBORNE":{
			"type":"bool",
			"desc":"node is used by flying AI, not by ground AI",
			"spawnflag":"67108864",
			"value":"false"
		},
		"animscript":{
			"type":"string",
			"desc":"name without path or extension of the animation script to play when you reach this node.  This script must be in \"animscripts/traverse/\"."
		},
		"movementtype_ignore":{
			"type":"string",
			"flags":"bot,civilian,human,hero,advanced,mannequin,robot,riotshield,dog,gorilla,vehicle,zombie,zombie_no_legs,zombie_keeper,zombie_dog,zombie_boss,monkey,zombie_quad",
			"desc":"movementtypes that cannot use this node"
		},
		"movementtype_require":{
			"type":"string",
			"flags":"bot,civilian,human,hero,advanced,mannequin,robot,riotshield,dog,gorilla,vehicle,zombie,zombie_no_legs,zombie_keeper,zombie_dog,zombie_boss,monkey,zombie_quad",
			"desc":"movementtypes that an actor must have to use this node"
		},
		"width":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"desc":"used to generate a user edge in navmesh. AI can perform a traversal along the edge instead of just on the node",
			"value":"0"
		},
		"target":{
			"type":"string"
		},
		"_color":{
			"type":"color",
			"value":".5 .6 .5"
		},
		"previewmdl1":{
			"type":"string",
			"value":"c_generic_gray_fb",
			"noExport":"true"
		},
		"previewanim1":{
			"type":"string",
			"value":"ai_mantle_over_40",
		 "noExport":"true"
		},
		"cost_modifier":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"desc":"Cost modifier to apply to this traversal during run-time astar searches",
			"value":"1"
		}
	},
	{
		"classname":"node_negotiation_end",
		"parents":"template_node",
		"classcolor":".6 .5 .5",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Must be targeted by a \"node_negotiation_begin\".\nAlways contributes to navigation data.\nCan never be included in a friendly chain.",
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"STEERING_TRAVERSAL":{
			"type":"bool",
			"spawnflag":"134217728",
			"value":"false"
		},
		"PROCEDURAL":{
			"type":"bool",
			"desc":"AI should procedurally jump to the target node, without using an animation.",
			"spawnflag":"1024",
			"value":"false"
		},
		"WALLRUN":{
			"type":"bool",
			"desc":"node connects to a wallrun clip",
			"spawnflag":"2048",
			"value":"false"
		},
		"AIRBORNE":{
			"type":"bool",
			"desc":"node is used by flying AI, not by ground AI",
			"spawnflag":"67108864",
			"value":"false"
		},
		"width":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"desc":"used to generate a user edge in navmesh. AI can perform a traversal along the edge instead of just on the node",
			"value":"0"
		},
		"_color":{
			"type":"color",
			"value":".6 .5 .5"
		}
	},
	{
		"classname":"node_turret",
		"parents":"template_node",
		"classcolor":"0 .93 .72",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"DONT_LINK":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"angles":{
			"type":"vec3d",
			"desc":"cover is valid against enemies from this direction",
			"value":"0 0 0"
		},
		"_color":{
			"type":"color",
			"value":"0 .93 .72"
		}
	},
	{
		"classname":"node_guard",
		"parents":"template_node",
		"classcolor":".7 0 0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"STANCE_DONT_STAND":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false"
		},
		"STANCE_DONT_CROUCH":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false"
		},
		"IDLE":{
			"type":"bool",
			"spawnflag":"128",
			"value":"false"
		},
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"BALCONY":{
			"type":"bool",
			"spawnflag":"1024",
			"value":"false"
		},
		"BALCONY_NORAILING":{
			"type":"bool",
			"spawnflag":"2048",
			"value":"false"
		},
		"script_balconydeathchance":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.01",
			"value":"1"
		},
		"angles":{
			"type":"vec3d",
			"desc":"face this way when at this node on a friendly chain",
			"value":"0 0 0"
		},
		"_color":{
			"type":"color",
			"value":".7 0 0"
		}
	},
	{
		"classname":"node_exposed",
		"parents":"template_node",
		"classcolor":"1 0.3 0.1",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"STANCE_DONT_STAND":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false"
		},
		"STANCE_DONT_CROUCH":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false"
		},
		"PRIORITY":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false"
		},
		"IDLE":{
			"type":"bool",
			"spawnflag":"128",
			"value":"false"
		},
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"DONT_LINK":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"BALCONY":{
			"type":"bool",
			"spawnflag":"1024",
			"value":"false"
		},
		"BALCONY_NORAILING":{
			"type":"bool",
			"spawnflag":"2048",
			"value":"false"
		},
		"script_balconydeathchance":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.01",
			"value":"1"
		},
		"angles":{
			"type":"vec3d",
			"desc":"cover is valid against enemies from this direction",
			"value":"0 0 0"
		},
		"previewmdl1":{
			"type":"string",
			"value":"c_generic_gray_fb"
		},
		"previewanim1":{
			"type":"string",
			"value":"ai_base_rifle_stn_exposed_alert_idle_01",
			"noExport":"true"
		},
		"previewanim2":{
			"type":"string",
			"value":"ai_base_rifle_crc_exposed_alert_idle_01",
			"noExport":"true"
		},
		"_color":{
			"type":"color",
			"value":"1 0.3 0.1"
		}
	},
	{
		"classname":"node_ambush",
		"parents":"template_node",
		"classcolor":".7 0 0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"STANCE_DONT_STAND":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false"
		},
		"STANCE_DONT_CROUCH":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false"
		},
		"IDLE":{
			"type":"bool",
			"spawnflag":"128",
			"value":"false"
		},
		"CAN_PARENT":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false"
		},
		"angles":{
			"type":"vec3d",
			"desc":"face this way when at this node on a friendly chain",
			"value":"0 0 0"
		},
		"_color":{
			"type":"color",
			"value":".7 0 0"
		}
	},
	{
		"classname":"dyn_brushmodel",
		"classcolor":"1 0 0",
		"START_IN_PHYSICS":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"spawnflag":"1",
			"value":"false"
		},
		"AUTO_ACTIVATE":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"spawnflag":"2",
			"value":"false"
		},
		"N0_BULLET_DAMGE":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"spawnflag":"4",
			"value":"false"
		},
		"N0_EXPLOSIVE_DAMGE":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"spawnflag":"8",
			"value":"false"
		},
		"ALWAYS_FLOATS":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"spawnflag":"16",
			"value":"false"
		},
		"USE_PHYSICS":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"spawnflag":"32",
			"value":"true"
		},
		"DESTROYABLE":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"spawnflag":"64",
			"value":"false",
			"desc":"Play fx and delete when health <= 0"
		},
		"physPreset":{
			"type":"string",
			"assetType":"physpreset",
			"desc":"The physics preset for this entity."
		},
		"health":{
			"type":"int",
			"desc":"How much health this entity has.  It'll trigger a destroy event on death.",
			"min":"0",
			"max":"100",
			"value":"50"
		},
		"destroyEfx":{
			"type":"string",
			"fileExtension":"efx",
			"filePath":"%TA_GAME_PATH%/share/raw/fx",
			"fileTrimLeft":"%TA_GAME_PATH%/share/raw/fx",
			"desc":"The effect that plays on a destroy event."
		},
		"destroySound":{
			"type":"string",
			"desc":"The sound that plays on a destroy event."
		},
		"mass":{
			"type":"float",
			"desc":"Roughly in pounds, will only work if no physpreset is specified.",
			"min":"0",
			"max":"100000",
			"value":"10"
		},
		"bounce":{
			"type":"float",
			"desc":"0-1, will only work if no physpreset is specified.",
			"min":"0",
			"max":"1",
			"value":"0"
		},
		"friction":{
			"type":"float",
			"desc":"0-1, will only work if no physpreset is specified.",
			"min":"0",
			"max":"1",
			"value":"0"
		},
		"damping_linear":{
			"type":"float",
			"desc":"scales the damping value for translational motion, will only work if no physpreset is specified.",
			"min":"0",
			"max":"10",
			"value":"1"
		},
		"damping_angular":{
			"type":"float",
			"desc":"scales the damping value for rotational motion, will only work if no physpreset is specified.",
			"min":"0",
			"max":"10",
			"value":"1"
		},
		"targetname":{
			"type":"string"
		}
	},
	{
		"classname":"dyn_model",
		"classcolor":"1 0 0,1 0.4 0.4,0.4 0.4 1,0.7 0.1 0.7",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"START_IN_PHYSICS":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"spawnflag":"1",
			"value":"false"
		},
		"AUTO_ACTIVATE":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"spawnflag":"2",
			"value":"false",
			"desc":"Turn on physics when touched by other phycics objects"
		},
		"N0_BULLET_DAMGE":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"spawnflag":"4",
			"value":"false"
		},
		"N0_EXPLOSIVE_DAMGE":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"spawnflag":"8",
			"value":"false"
		},
		"ALWAYS_FLOATS":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"spawnflag":"16",
			"value":"false"
		},
		"USE_PHYSICS":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"spawnflag":"32",
			"value":"true"
		},
		"DESTROYABLE":{
			"type":"bool",
			"group":"SPAWNFLAGS",
			"spawnflag":"64",
			"value":"false",
			"desc":"Play fx and delete when health <= 0"
		},
		"physPreset":{
			"type":"string",
			"assetType":"physpreset",
			"desc":"The physics preset for this entity.  This field will override the xmodel GDT physpreset"
		},
		"health":{
			"type":"int",
			"desc":"How much health this entity has.  It'll trigger a destroy event on death",
			"min":"0",
			"max":"10000",
			"value":"50"
		},
		"destroyEfx":{
			"type":"string",
			"fileExtension":"efx",
			"filePath":"%TA_GAME_PATH%/share/raw/fx",
			"fileTrimLeft":"%TA_GAME_PATH%/share/raw/fx",
			"desc":"The effect that plays on a destroy event."
		},
		"destroySound":{
			"type":"string",
			"desc":"The sound that plays on a destroy event."
		},
		"destroyedModel":{
			"type":"string",
			"assetType":"xmodel",
			"desc":"Swap to this model when health goes to zero and player the destroyEfx."
		},
		"rattleSound":{
			"type":"string",
			"desc":"The sound alias that plays every time a rattle event occurs."
		},
		"rattleEfx":{
			"type":"string",
			"fileExtension":"efx",
			"filePath":"%TA_GAME_PATH%/share/raw/fx",
			"fileTrimLeft":"%TA_GAME_PATH%/share/raw/fx",
			"desc":"The effect that plays every time a rattle event occurs."
		},
		"splashEfxUp0":{
			"type":"string",
			"fileExtension":"efx",
			"filePath":"%TA_GAME_PATH%/share/raw/fx",
			"fileTrimLeft":"%TA_GAME_PATH%/share/raw/fx",
			"desc":"An effect that plays when a wave water line crosses the entity from below to above"
		},
		"splashEfxUp1":{
			"type":"string",
			"fileExtension":"efx",
			"filePath":"%TA_GAME_PATH%/share/raw/fx",
			"fileTrimLeft":"%TA_GAME_PATH%/share/raw/fx",
			"desc":"An effect that plays when a wave water line crosses the entity from below to above"
		},
		"splashEfxUp2":{
			"type":"string",
			"fileExtension":"efx",
			"filePath":"%TA_GAME_PATH%/share/raw/fx",
			"fileTrimLeft":"%TA_GAME_PATH%/share/raw/fx",
			"desc":"An effect that plays when a wave water line crosses the entity from below to above"
		},
		"mass":{
			"type":"float",
			"desc":"Roughly in pounds, will only work if no physpreset is specified.",
			"min":"0",
			"max":"100000",
			"value":"10"
		},
		"bounce":{
			"type":"float",
			"desc":"0-1, will only work if no physpreset is specified.",
			"min":"0",
			"max":"1",
			"value":"0"
		},
		"friction":{
			"type":"float",
			"desc":"0-1, will only work if no physpreset is specified.",
			"min":"0",
			"max":"1",
			"value":"0"
		},
		"damping_linear":{
			"type":"float",
			"desc":"scales the damping value for translational motion, will only work if no physpreset is specified.",
			"min":"0",
			"max":"10",
			"value":"1"
		},
		"damping_angular":{
			"type":"float",
			"desc":"scales the damping value for rotational motion, will only work if no physpreset is specified.",
			"min":"0",
			"max":"10",
			"value":"1"
		},
		"model":{
			"type":"string",
			"assetType":"xmodel"
		},
		"modelscale":{
			"type":"float",
			"min":"0.1",
			"max":"100000",
			"singleStep":"0.01",
			"value":"1"
		},
		"targetname":{
			"type":"string"
		}
	},
	{
		"classname":"dyn_pointconstraint",
		"classcolor":"1 0 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"target":{
			"type":"string",
			"desc":"Must target a dyn_model or dyn_brushmodel."
		},
		"target2":{
			"type":"string",
			"desc":"Can target a second dyn_model or dyn_brushmodel."
		},
		"health":{
			"type":"int",
			"desc":"How much health this constraint has.  dyn_model must have health also for this to work.",
			"min":"0",
			"max":"100",
			"value":"50"
		},
		"timeout":{
			"type":"int",
			"desc":"The constraint will be disabled after X amount of seconds once activated.",
			"min":"0",
			"max":"1000",
			"value":"0"
		}
	},
	{
		"classname":"dyn_hingeconstraint",
		"classcolor":"1 0 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"target":{
			"type":"string",
			"desc":"Must target a dyn_model or dyn_brushmodel."
		},
		"target2":{
			"type":"string",
			"desc":"Can target a second dyn_model or dyn_brushmodel."
		},
		"min_angle":{
			"type":"float",
			"min":"-360",
			"max":"360",
			"value":"0"
		},
		"max_angle":{
			"type":"float",
			"min":"-360",
			"max":"360",
			"value":"0"
		},
		"health":{
			"type":"int",
			"desc":"How much health this constraint has.  dyn_model must have health also for this to work.",
			"min":"0",
			"max":"100",
			"value":"50"
		},
		"timeout":{
			"type":"int",
			"desc":"The constraint will be disabled after X amount of seconds once activated.",
			"min":"0",
			"max":"1000",
			"value":"0"
		}
	},
	{
		"classname":"rope",
		"classcolor":"1 0 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"WORLD_COLLISION":{
			"type":"bool",
			"desc":"set rope to collide with the terrain",
			"spawnflag":"1",
			"value":"false"
		},
		"ENT_COLLISION":{
			"type":"bool",
			"desc":"set rope to collide with entities/players",
			"spawnflag":"2",
			"value":"false"
		},
		"CAST_SHADOW":{
			"type":"bool",
			"desc":"enables the sun shadow",
			"spawnflag":"4",
			"value":"false"
		},
		"DRAW_WHOLE":{
			"type":"bool",
			"desc":"off: draws only half the rope, always points the drawn side to the player - on: draws the whole rope, no longer rotates based on player position",
			"spawnflag":"8",
			"value":"false"
		},
		"NO_PHYSICS":{
			"type":"bool",
			"desc":"set to disable physics once the rope is drawn",
			"spawnflag":"16",
			"value":"false"
		},
		"length":{
			"type":"float",
			"desc":"This will set the length of the rope, it will be auto calculated if not set.",
			"min":"0",
			"max":"100000",
			"value":"0"
		},
		"length_scale":{
			"type":"float",
			"desc":"This will scale the length of the rope giving it some more slack.",
			"min":"0",
			"max":"100000",
			"value":"0"
		},
		"target":{
			"type":"string",
			"desc":"Specify info_null node to set the end point of the rope.  info_null can then target a dyn_model/brushmodel or script_model/brushmodel to hook the rope to it."
		},
		"target2":{
			"type":"string",
			"desc":"Can be set to target a dyn_model/brushmodel or script_model/brushmodel to hook the rope to it."
		},
		"health":{
			"type":"float",
			"desc":"Specify health on the rope and it will break if the dyn_model/brushmodel it is attached to takes damage. dyn ent must have health set also.",
			"min":"0",
			"max":"100",
			"value":"0"
		},
		"width":{
			"type":"float",
			"desc":"Set the width of the rope.",
			"min":"0",
			"max":"100000",
			"value":"0"
		},
		"material":{
			"type":"string",
			"assetType":"material",
			"desc":"Assign a material to use for rendering the rope, if not specified it will use a default rope texture."
		},
		"wind_force_scale":{
			"type":"float",
			"desc":"Defaults to 1, change to scale how much the wind affects the rope.",
			"min":"0",
			"max":"100000",
			"value":"1"
		},
		"bullet_force_scale":{
			"type":"float",
			"desc":"Defaults to 1, change to scale how much bullets affect the rope.",
			"min":"0",
			"max":"100000",
			"value":"1"
		},
		"explosion_force_scale":{
			"type":"float",
			"desc":"Defaults to 1, change to scale how much explosions affect the rope.",
			"min":"0",
			"max":"100000",
			"value":"1"
		},
		"ropemodel":{
			"type":"string",
			"enum":"cylinder,star",
			"value":"cylinder",
			"desc":"values: \"cylinder\" (default); \"star\" - creates planes in a radial pattern from the center of the rope."
		},
		"slice_count":{
			"type":"float",
			"desc":"controls number of sections created in a cross section of the rope, defaults to 4 for cylinders, 2 for stars; valid values are 1-10",
			"min":"0",
			"max":"10",
			"value":"4"
		},
		"targetname":{
			"type":"string"
		}
	},
	{
		"classname":"volume_exposure",
		"classcolor":"1 .3 .1",
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"hidden":"true"
		},
		"BANK_1":{
			"type":"bool",
			"spawnflag":"1",
			"value":"true"
		},
		"BANK_2":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false"
		},
		"BANK_3":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false"
		},
		"BANK_4":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false"
		},
		"AUTO_PRIORITY":{
			"type":"bool",
			"desc":"Automatically sets priority ( a volume completely inside another volume is higher priority )",
			"spawnflag":"2048",
			"value":"true"
		},
		"priority":{
			"type":"int",
			"desc":"If multiple volumes overlap the volume with the highest priority is used",
			"min":"1",
			"max":"65535",
			"value":"1"
		},
		"evcmp":{
			"type":"float",
			"desc":"Exposure compensation when auto exposure is enabled.",
			"min":"-32.0",
			"max":"31.0",
			"value":"0.0"
		},
		"evmin":{
			"type":"float",
			"desc":"Only used if not set to the default.",
			"value":"-32",
			"min":"-32.0",
			"max":"31.0"
		},
		"evmax":{
			"type":"float",
			"desc":"Only used if not set to the default.",
			"value":"31",
			"min":"-32.0",
			"max":"31.0"
		},
		"blend_mins":{
			"type":"vec3d",
			"min":"0 0 0",
			"max":"32000 32000 32000",
			"singleStep":"10",
			"desc":"Distance to blend out on the negative side.",
			"value":"0 0 0",
			"manipulatorid":"1",
			"manipulatordiagonals":"false",
			"manipulator":"-invisibox.xyz"

		},
		"blend_maxs":{
			"type":"vec3d",
			"min":"0 0 0",
			"max":"32000 32000 32000",
			"singleStep":"10",
			"desc":"Distance to blend out on the positive side.",
			"value":"0 0 0",
			"manipulatordiagonals":"false",
			"manipulator":"invisibox.xyz"

		}
	},
	{
		"classname":"volume_worldfog",
		"classcolor":"1 .3 .1",
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"hidden":"true"
		},
		"BANK_1":{
			"type":"bool",
			"spawnflag":"1",
			"value":"true",
			"group":"Banks/Bank 1"
		},
		"BANK_2":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false",
			"group":"Banks/Bank 2"
		},
		"BANK_3":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false",
			"group":"Banks/Bank 3"
		},
		"BANK_4":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false",
			"group":"Banks/Bank 4"
		},
		"DISABLE_FOG":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false",
			"group":"Flags"
		},
		"ENABLE_SUN_FOG":{
			"type":"bool",
			"spawnflag":"512",
			"value":"true",
			"group":"Flags"
		},
		"AUTO_PRIORITY":{
			"type":"bool",
			"spawnflag":"2048",
			"value":"true",
			"group":"Priority"
		},
		"LIGHTSTATE_1":{
			"type":"bool",
			"spawnflag":"4096",
			"value":"true",
			"group":"Flags"
		},
		"LIGHTSTATE_2":{
			"type":"bool",
			"spawnflag":"8192",
			"value":"true",
			"group":"Flags"
		},
		"LIGHTSTATE_3":{
			"type":"bool",
			"spawnflag":"16384",
			"value":"true",
			"group":"Flags"
		},
		"LIGHTSTATE_4":{
			"type":"bool",
			"spawnflag":"32768",
			"value":"true",
			"group":"Flags"
		},
		"priority":{
			"type":"int",
			"desc":"If multiple volumes overlap the volume with the highest priority is used",
			"min":"0",
			"max":"65535",
			"value":"0",
			"group":"Priority"
		},
		"fsi":{
			"type":"string",
			"assetType":"fog",
			"desc":"The default fog settings file.",
			"value":"default",
			"group":"Defaults"
		},
		"fsi_1":{
			"type":"string",
			"assetType":"fog",
			"desc":"The fog gdt entry for bank 1",
			"value":"default",
			"group":"Banks/Bank 1"
		},
		"fsi_2":{
			"type":"string",
			"assetType":"fog",
			"desc":"The fog gdt entry for bank 2",
			"value":"default",
			"group":"Banks/Bank 2"
		},
		"fsi_3":{
			"type":"string",
			"assetType":"fog",
			"desc":"The fog gdt entry for bank 3",
			"value":"default",
			"group":"Banks/Bank 3"
		},
		"fsi_4":{
			"type":"string",
			"assetType":"fog",
			"desc":"The fog gdt entry for bank 4",
			"value":"default",
			"group":"Banks/Bank 4"
		},
		"fogtime":{
			"type":"float",
			"desc":"Time to lerp from the old fog settings",
			"min":"0",
			"max":"100",
			"value":"1.0"
		}
	},
	{
		"classname":"volume_worldfogmodifier",
		"classcolor":"1 .3 .1",
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"hidden":"true"
		},
		"BANK_1":{
			"type":"bool",
			"spawnflag":"1",
			"value":"true"
		},
		"BANK_2":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false"
		},
		"BANK_3":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false"
		},
		"BANK_4":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false"
		},
		"AUTO_PRIORITY":{
			"type":"bool",
			"spawnflag":"2048",
			"value":"true"
		},
		"priority":{
			"type":"int",
			"desc":"If multiple volumes overlap the volume with the highest priority is used",
			"min":"0",
			"max":"65535",
			"value":"0"
		},
		"time":{
			"type":"float",
			"min":"0",
			"max":"100",
			"value":"1",
			"desc":"Transition time in seconds"
		},
		"depthscale":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"value":"1",
			"desc":"Scale fog half distance"
		},
		"heightscale":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"value":"1",
			"desc":"Scale for half height"
		},
		"_color":{
			"type":"color",
			"value":"1 1 1",
			"desc":"Color tint"
		},
		"opacity":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"value":"1",
			"desc":"Opacity scale"
		}
	},
	{
		"classname":"lut_volume",
		"classcolor":"1 .3 .1",
		"BANK_1":{
			"type":"bool",
			"spawnflag":"1",
			"value":"true"
		},
		"BANK_2":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false"
		},
		"BANK_3":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false"
		},
		"BANK_4":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false"
		},
		"AUTO_PRIORITY":{
			"type":"bool",
			"spawnflag":"2048",
			"value":"false"
		},
		"priority":{
			"type":"int",
			"desc":"If multiple volumes overlap the volume with the highest priority is used",
			"min":"0",
			"max":"65535",
			"value":"0"
		},
		"index":{
			"type":"int",
			"desc":"transition time in seconds",
			"min":"0",
			"max":"1024",
			"value":"1"
		},
		"time":{
			"type":"float",
			"desc":"transition time in seconds",
			"min":"0",
			"max":"100",
			"value":"0"
		},
		"blend_mins":{
			"type":"vec3d",
			"min":"0 0 0",
			"max":"32000 32000 32000",
			"singleStep":"10",
			"desc":"Distance to blend out on the negative side.",
			"value":"0 0 0",
			"manipulatorid":"1",
			"manipulatordiagonals":"false",
			"manipulator":"-invisibox.xyz"
		},
		"blend_maxs":{
			"type":"vec3d",
			"min":"0 0 0",
			"max":"32000 32000 32000",
			"singleStep":"10",
			"desc":"Distance to blend out on the positive side.",
			"value":"0 0 0",
			"manipulatordiagonals":"false",
			"manipulator":"invisibox.xyz"
		}
	},
	{
		"classname":"volume_reflection",
		"classcolor":"1 0 1",
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"hidden":"true"
		},
		"target":{
			"type":"string",
			"desc":"points to the associated reflection probe."
		},
		"targetname":{
			"type":"string"
		},
		"featherdist":{
			"type":"float",
			"desc":"attenuation feathering distance measured in from the volume sides",
			"min":"0",
			"max":"1",
			"value":"0"
		}
	},
	{
		"classname":"volume_sun",
		"classcolor":"1 1 1",
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"hidden":"true"
		},
		"origin":{
			"type":"vec3d",
			"value":"0 0 0",
			"hidden":"true"
		},
		"grid_density":{
			"type":"string",
			"enum":"4,8,16,32,48,64,96,128",
			"desc":"Number of probe points in each dimension",
			"value":"32",
			"group":"Global Illumination"
		},
		"global_fill_color":{
			"type":"color",
			"value":"0 0 0",
			"desc":"Occluded parts of the global probe will be filled with this color. Should match the average ground color.",
			"group":"Global Illumination"
		},
		"global_fill_intensity":{
			"type":"float",
			"value":"1.0",
			"min":"0",
			"max":"30",
			"singleStep":"1.0",
			"desc":"The global fill color will be multiplied by this value for an HDR result.",
			"group":"Global Illumination"
		},
		"min_occlusion":{
			"type":"float",
			"desc":"Obsolete",
			"hidden":"true",
			"value":"0"
		},
		"ssi1":{
			"type":"string",
			"assetType":"ssi",
			"desc":"Name of .ssi file to use for sun settings",
			"value":"default_day",
			"group":"Lighting States"
		},
		"ssi":{
			"type":"string",
			"assetType":"ssi",
			"desc":"Name of .ssi file to use for sun settings",
			"value":"default_day",
			"hidden":"true"
		},
		"ssi1_runtime_override":{
			"type":"string",
			"assetType":"ssi",
			"desc":"Name of .ssi file to use for sun settings",
			"value":"",
			"group":"Lighting States"
		},
		"ssi2":{
			"type":"string",
			"assetType":"ssi",
			"desc":"Name of .ssi file to use for sun settings",
			"value":"",
			"group":"Lighting States"
		},
		"ssi2_runtime_override":{
			"type":"string",
			"assetType":"ssi",
			"desc":"Name of .ssi file to use for sun settings",
			"value":"",
			"group":"Lighting States"
		},
		"ssi3":{
			"type":"string",
			"assetType":"ssi",
			"desc":"Name of .ssi file to use for sun settings",
			"value":"",
			"group":"Lighting States"
		},
		"ssi3_runtime_override":{
			"type":"string",
			"assetType":"ssi",
			"desc":"Name of .ssi file to use for sun settings",
			"value":"",
			"group":"Lighting States"
		},
		"ssi4":{
			"type":"string",
			"assetType":"ssi",
			"desc":"Name of .ssi file to use for sun settings",
			"value":"",
			"group":"Lighting States"
		},
		"ssi4_runtime_override":{
			"type":"string",
			"assetType":"ssi",
			"desc":"Name of .ssi file to use for sun settings",
			"value":"",
			"group":"Lighting States"
		},
		"shadowSplitDistance":{
			"type":"float",
			"desc":"Distance in inches that the split shadows (dynamics) render cover",
			"min":"10",
			"max":"10000",
			"singleStep":"100",
			"value":"2000",
			"group":"Shadows"
		},
		"shadowSplitCount":{
			"type":"int",
			"desc":"Amount in count that the split shadows (dynamics) render cover",
			"min":"1",
			"max":"64",
			"singleStep":"1",
			"value":"3",
			"group":"Shadows"
		},
		"shadowBiasScale":{
			"type":"float",
			"desc":"Scale applied to shadow biasing (can be negative)",
			"min":"-10",
			"max":"10",
			"singleStep":".01",
			"value":"1",
			"group":"Shadows"
		},
		"shadowVistaDetail":{
			"type":"float",
			"desc":"Detail of vista shadows. Lower values drops fine details but saves space.",
			"min":"0.01",
			"max":"1",
			"singleStep":"0.01",
			"value":"1",
			"group":"Shadows"
		},
		"shadowHiQualityContact":{
			"type":"bool",
			"desc":"Improves contact shadow quality but increases the size of the bake",
			"value":"false",
			"group":"Shadows"
		},
        "transitionTime":{
            "type":"float",
            "desc":"Time to transition between sun states.",
            "value":"0",
			"group":"Sun Settings"
        },
		"previewShadows":{
			"type":"bool",
			"desc":"Preview quality shadows",
			"value":"false",
			"hidden":"false",
			"group":"Shadows"
		},
		"streamLighting":{
			"type":"bool",
			"desc":"Stream the lighting data for this volume",
			"value":"true",
			"group":"Sun Settings"
		},
		"override_reflections":{
			"type":"bool",
			"desc":"Use the run-time override SSI in the reflection probe final renders.",
			"value":"false",
			"group":"Reflection Probes"
		},
		"respectLightLods":{
			"type":"bool",
			"desc":"When this is false, lights will never LOD out in probe bounce and reflections.",
			"value":"true",
			"group":"Reflection Probes"
		},
		"target":{
			"type":"string",
			"group":"Global Illumination"
		}
	},
	{
		"classname":"volume_sun_extension",
		"classcolor":"1 0 1"
	},
	{
		"classname":"volume_lightclip",
		"classcolor":"1 1 1",
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"hidden":"true"
		},
		"targetname":{
			"type":"string"
		}
	},
	{
		"classname":"umbra_volume",
		"classcolor":"1 0 1"
	},
	{
		"classname":"umbra_tome_trigger",
		"targetname":{
			"type":"string"
		},
		"visgroup0":{
			"type":"string",
			"desc":"Name of a prefab umbra_visgroup that's part of this tome trigger"
		},
		"visgroup1":{
			"type":"string",
			"desc":"Name of a prefab umbra_visgroup that's part of this tome trigger"
		},
		"visgroup2":{
			"type":"string",
			"desc":"Name of a prefab umbra_visgroup that's part of this tome trigger"
		},
		"visgroup3":{
			"type":"string",
			"desc":"Name of a prefab umbra_visgroup that's part of this tome trigger"
		},
		"visgroup4":{
			"type":"string",
			"desc":"Name of a prefab umbra_visgroup that's part of this tome trigger"
		},
		"visgroup5":{
			"type":"string",
			"desc":"Name of a prefab umbra_visgroup that's part of this tome trigger"
		},
		"visgroup6":{
			"type":"string",
			"desc":"Name of a prefab umbra_visgroup that's part of this tome trigger"
		},
		"visgroup7":{
			"type":"string",
			"desc":"Name of a prefab umbra_visgroup that's part of this tome trigger"
		},
		"visgroup8":{
			"type":"string",
			"desc":"Name of a prefab umbra_visgroup that's part of this tome trigger"
		},
		"visgroup9":{
			"type":"string",
			"desc":"Name of a prefab umbra_visgroup that's part of this tome trigger"
		},
		"visgroup10":{
			"type":"string",
			"desc":"Name of a prefab umbra_visgroup that's part of this tome trigger"
		},
		"visgroup11":{
			"type":"string",
			"desc":"Name of a prefab umbra_visgroup that's part of this tome trigger"
		},
		"visgroup12":{
			"type":"string",
			"desc":"Name of a prefab umbra_visgroup that's part of this tome trigger"
		},
		"classcolor":"1 0 1"
	},
	{
		"classname":"volume_fpstool",
		"classcolor":"1 0 1",
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"hidden":"true"
		}
	},
	{
		"classname":"lightgrid_sky",
		"classcolor":"1 0 1",
		"lightingoriginrange":{
			"type":"float",
			"min":"0",
			"max":"1",
			"desc":"range that would be sampled for lighting around the lighting origin",
			"value":"0.5"
		},
		"target":{
			"type":"string",
			"desc":"points to an optional lighting origin (via info_null)."
		}
	},
	{
		"classname":"volume_outdoor",
		"classcolor":"0.5 1 0.7",
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"hidden":"true"
		},
		"pitch0":{
			"type":"float",
			"min":"0",
			"max":"90",
			"desc":"pitch for rain direction indoor/outdoor detection.  0 is straight down, 90 is sideways",
			"value":"0"
		},
		"yaw0":{
			"type":"float",
			"min":"-360",
			"max":"360",
			"type":"float",
			"desc":"yaw for rain direction indoor/outdoor detection.  0 is along +X direction.",
			"value":"0"
		},
		"filterRadius0":{
			"type":"int",
			"min":"0",
			"max":"4",
			"desc":"detail filter size",
			"value":"0"
		},
		"enabled0":{
			"type":"bool",
			"desc":"outdoor volume is enabled for light state 0",
			"value":"false"
		},
		"pitch1":{
			"type":"float",
			"min":"0",
			"max":"90",
			"desc":"pitch for rain direction indoor/outdoor detection.  0 is straight down, 90 is sideways",
			"value":"0"
		},
		"yaw1":{
			"type":"float",
			"min":"-360",
			"max":"360",
			"type":"float",
			"desc":"yaw for rain direction indoor/outdoor detection.  0 is along +X direction.",
			"value":"0"
		},
		"filterRadius1":{
			"type":"int",
			"min":"0",
			"max":"4",
			"desc":"detail filter size",
			"value":"0"
		},
		"enabled1":{
			"type":"bool",
			"desc":"outdoor volume is enabled for light state 1",
			"value":"false"
		},
		"pitch2":{
			"type":"float",
			"min":"0",
			"max":"90",
			"desc":"pitch for rain direction indoor/outdoor detection.  0 is straight down, 90 is sideways",
			"value":"0"
		},
		"yaw2":{
			"type":"float",
			"min":"-360",
			"max":"360",
			"type":"float",
			"desc":"yaw for rain direction indoor/outdoor detection.  0 is along +X direction.",
			"value":"0"
		},
		"filterRadius2":{
			"type":"int",
			"min":"0",
			"max":"4",
			"desc":"detail filter size",
			"value":"0"
		},
		"enabled2":{
			"type":"bool",
			"desc":"outdoor volume is enabled for light state 2",
			"value":"false"
		},
		"pitch3":{
			"type":"float",
			"min":"0",
			"max":"90",
			"desc":"pitch for rain direction indoor/outdoor detection.  0 is straight down, 90 is sideways",
			"value":"0"
		},
		"yaw3":{
			"type":"float",
			"min":"-360",
			"max":"360",
			"type":"float",
			"desc":"yaw for rain direction indoor/outdoor detection.  0 is along +X direction.",
			"value":"0"
		},
		"filterRadius3":{
			"type":"int",
			"min":"0",
			"max":"4",
			"desc":"detail filter size",
			"value":"0"
		},
		"enabled3":{
			"type":"bool",
			"desc":"outdoor volume is enabled for light state 3",
			"value":"false"
		}
	},
	{
		"classname":"volume_weathergrime",
		"classcolor":"0.5 1 0.7",
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"hidden":"true"
		},
		"enabled":{
			"type":"bool",
			"desc":"Weather volume is enabled or disabled.",
			"value":"true"
		},
		"rain":{
			"type":"float",
			"min":"0",
			"max":"1",
			"desc":"Scales the amount of ripples on the wet materials (outdoors)",
			"value":"0"
		},
		"windDirection":{
			"type":"float",
			"min":"0",
			"max":"360",
			"desc":"Direction of the ripple flow on wet materials (outdoors)",
			"value":"0"
		},
		"windSpeed":{
			"type":"float",
			"min":"0",
			"max":"50",
			"desc":"Speed of the ripple flow on wet materials (outdoors)",
			"value":"1"
		},
		"weatherPitch":{
			"type":"float",
			"min":"-90",
			"max":"90",
			"desc":"Vertical angle of incoming weather (90 is up, -90 is down)",
			"value":"0"
		},
		"weatherYaw":{
			"type":"float",
			"min":"0",
			"max":"360",
			"desc":"Horizontal angle of incoming weather.",
			"value":"0"
		},
		"weatherPitch2":{
			"type":"float",
			"min":"-90",
			"max":"90",
			"desc":"Vertical angle of second incoming weather (90 is up, -90 is down)",
			"value":"0"
		},
		"weatherYaw2":{
			"type":"float",
			"min":"0",
			"max":"360",
			"desc":"Horizontal angle of second incoming weather.",
			"value":"0"
		},
		"weatherTiling":{
			"type":"float",
			"min":"0",
			"max":"128",
			"desc":"Tiling factor for the weather textures.",
			"value":"16"
		},
		"weatherTint":{
			"type":"color",
			"desc":"Tint color for the primary weather color map (multiplied).",
			"value":"1.0 1.0 1.0"
		},
		"weatherColorMap":{
			"type":"string",
			"assetType":"image",
			"desc":"Name of image asset for the primary weather color map.",
			"value":"i_t7_snow_powder_01_c"
		},
		"weatherNormalMap":{
			"type":"string",
			"assetType":"image",
			"desc":"Name of image asset for the primary weather normal map.",
			"value":"i_t7_snow_powder_01_n"
		},
		"weatherGlossMap":{
			"type":"string",
			"assetType":"image",
			"desc":"Name of image asset for the primary weather gloss map.",
			"value":"i_t7_snow_powder_01_g"
		},
		"weatherTint2":{
			"type":"color",
			"desc":"Tint color for the secondary weather color map (multiplied).",
			"value":"1.0 1.0 1.0"
		},
		"weatherColorMap2":{
			"type":"string",
			"assetType":"image",
			"desc":"Name of image asset for the secondary weather color map.",
			"value":"i_t7_grass_lawn_medium_small_green_c"
		},
		"weatherNormalMap2":{
			"type":"string",
			"assetType":"image",
			"desc":"Name of image asset for the secondary weather normal map.",
			"value":"i_t7_grass_lawn_medium_small_green_n"
		},
		"weatherGlossMap2":{
			"type":"string",
			"assetType":"image",
			"desc":"Name of image asset for the secondary weather gloss map.",
			"value":"i_t7_grass_lawn_medium_small_green_g"
		}
	},
	{
		"classname":"volume_vista",
		"classcolor":"0 1 1"
	},
	{
		"classname":"volume_attenuation",
		"classcolor":"0.9 0.9 0.7",
		"absorptionColor":{
			"type":"color",
			"desc":"Ratio of color absorbed/original every 100 units",
			"value":"0.5 0.5 0.5"
		}
	},
	{
		"classname":"volume_performance",
		"classcolor":"1 .1 .1",
		"LIGHTSTATE_1":{
			"type":"bool",
			"spawnflag":"1",
			"value":"true",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_2":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_3":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_4":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false",
			"group":"!FLAGS"
		},
		"MOTION_BLUR_ENABLE":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false",
			"group":"!FLAGS"
		},
		"MOTION_BLUR_DISABLE":{
			"type":"bool",
			"spawnflag":"512",
			"value":"false",
			"group":"!FLAGS"
		},
		"MOTION_BLUR_ENABLE_AMOUNT":{
			"type":"string",
			"enum":"1/8,1/4,3/8,1/2,5/8,3/4,1",
			"desc":"Amount of motion blur to apply when MOTION_BLUR_ENABLE is enabled",
			"value":"1/2",
			"group":"!FLAGS"
		},
		"LOD_BIAS_OVERRIDE":{
			"type":"string",
			"enum":"disabled,default,detail,performance",
			"desc":"Selects active lod mode corresponding to multiplier & offsets in APE Xmodel settings",
			"value":"disabled",
			"group":"!FLAGS"
		},
		"AUTO_PRIORITY":{
			"type":"bool",
			"desc":"Automatically sets priority ( a volume completely inside another volume is higher priority )",
			"spawnflag":"2048",
			"value":"true"
		},
		"priority":{
			"type":"int",
			"desc":"If multiple volumes overlap the volume with the highest priority is used",
			"min":"1",
			"max":"65535",
			"value":"1"
		},
		"sunShadowSplitCount":{
			"type":"int",
			"value":"3",
			"min":"0",
			"max":"3",
			"group":"!TWEAKS"
		},
		"maxDynamicShadows":{
			"type":"int",
			"value":"12",
			"min":"0",
			"max":"24",
			"group":"!TWEAKS"
		}
	},
	{
		"classname":"lod_info",
		"classcolor":"0 0.5 0",
		"bboxmin":"-8 -8 -8",
		"bboxmax":"8 8 8",
		"desc":"Used as a positional and layer marker for the world lod system. This should be placed in the same layer as the geometry you want to act as a lod. The controls for the distances at which LOD transitions happen are specified with near and far keys. If the distance from the camera to the lod_info entity is X, the surfaces in the same layer as the entity will be visible when X is between the values for near and far ( near < X < far ).",
		"near":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"desc":"Player must be this far away to see the lod.",
			"value":"0"
		},
		"far":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"desc":"Player must be this close to see the lod.",
			"value":"0"
		}
	},
	{
		"classname":"fx",
		"classcolor":"0.4 1 0.4,1 0.4 0.4,0.4 0.4 1,0.7 0.1 0.7",
		"bboxmin":"-10 -10 -10",
		"bboxmax":"10 10 10",
		"SCRIPTABLE":{
			"type":"bool",
			"spawnflag":"1",
			"value":"false"
		},
		"fxdef":{
			"type":"string",
			"fileExtension":"efx",
			"filePath":"%TA_GAME_PATH%/share/raw/fx",
			"fileTrimLeft":"%TA_GAME_PATH%/share/raw/fx/",
			"fileTrimRight":".efx",
			"desc":"Specify which fx file to play."
		},
		"delay":{
			"type":"int",
			"min":"-600000",
			"max":"600000",
			"desc":"Time to delay before playing.  Can be a negative number.",
			"value":"0"
		},
		"primaryLightFraction":{
			"type":"float",
			"min":"0",
			"max":"1",
			"value":"1"
		},
		"lightingOriginOffset":{
			"type":"vec3d",
			"value":"0 0 0"
		},
		"timescale":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"desc":"Time scale applied to this fx instance.",
			"value":"1"
		},
		"fxstate1":{
			"type":"bool",
			"group":"FX_STATES",
			"value":"true"
		},
		"fxstate2":{
			"type":"bool",
			"group":"FX_STATES",
			"value":"true"
		},
		"fxstate3":{
			"type":"bool",
			"group":"FX_STATES",
			"value":"true"
		},
		"fxstate4":{
			"type":"bool",
			"group":"FX_STATES",
			"value":"true"
		},
		"outdoor":{
			"type":"bool",
			"value":"false"
		},
		"exploder_count":{
			"type":"int",
			"hidden":"true",
			"min":"0",
			"value":"0"
		},
		"exploder_index_0":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_1":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_2":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_3":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_4":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_5":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_6":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_7":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_8":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_9":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_10":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_11":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_12":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_13":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_14":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_15":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_16":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_17":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_18":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_19":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_20":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_21":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_22":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_23":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_24":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_25":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_26":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_27":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_28":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_29":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_30":{
			"type":"string",
			"hidden":"true"
		},
		"exploder_index_31":{
			"type":"string",
			"hidden":"true"
		}
	},
	{
		"classname":"wave_water",
		"classcolor":"0.2 0.5 0.9",
		"min_grid_size":{
			"type":"float",
			"min":"10",
			"max":"1000",
			"desc":"smallest water tile size",
			"value":"200"
		},
		"max_grid_size":{
			"type":"float",
			"min":"100",
			"max":"10000",
			"desc":"largest water tile size",
			"value":"1000"
		},
		"grid_detail_scale":{
			"type":"float",
			"min":"0.01",
			"max":"5.0",
			"desc":"smallest grid size increase per distance; smaller -> more detail at a given distance",
			"value":"1.0"
		},
		"interaction_scale":{
			"type":"float",
			"min":"0.0",
			"max":"100.0",
			"desc":"scale for interaction effects, larger -> water reacts more",
			"value":"1.0"
		},
		"damping":{
			"type":"float",
			"min":"-1.0",
			"max":"100.0",
			"desc":"controls friction-like effect of water; increase to have waves die out faster",
			"value":"0.2"
		},
		"time_scale":{
			"type":"float",
			"min":"0.0",
			"max":"10.0",
			"desc":"controls over-all rate of water simulation; 1.0 is regular time which sometimes looks too fast",
			"value":"0.5"
		},
		"water_depth":{
			"type":"float",
			"min":"0.0",
			"max":"1000000",
			"desc":"approximate water depth for wave simulation.  Wave speed depends on water depth when it is shallow.  Make large to ignore depth effects.",
			"value":"1000000"
		},
		"min_clamp":{
			"type":"float",
			"min":"-2000.0",
			"max":"0",
			"desc":"minimum height value waves will appear at",
			"value":"-2000"
		},
		"max_clamp":{
			"type":"float",
			"min":"0.0",
			"max":"2000.0",
			"desc":"maximum height value waves will appear at",
			"value":"2000"
		},
		"player_radius_scale":{
			"type":"float",
			"min":"0.0",
			"max":"10.0",
			"desc":"scale for radius of player interactions",
			"value":"1.0"
		},
		"physics_radius_scale":{
			"type":"float",
			"min":"0.0",
			"max":"10.0",
			"desc":"scale for radius of physics interactions",
			"value":"1.0"
		},
		"other_radius_scale":{
			"type":"float",
			"min":"0.0",
			"max":"10.0",
			"desc":"scale for radius of interactions besides physics objects and player movement",
			"value":"1.0"
		},
		"emergency_damping_level":{
			"type":"float",
			"min":"0.0",
			"max":"1000.0",
			"desc":"height at which to begin extra damping of out-of-control waves",
			"value":"100.0"
		},
		"opaque":{
			"type":"bool",
			"value":"false",
			"desc":"true if water can be assumed to completely hide anything under it"
		},
		"cast_shadow":{
			"type":"bool",
			"value":"false",
			"desc":"true if water casts a translucent shadow (opacity specified in material)"
		},
		"align_to_top":{
			"type":"bool",
			"value":"false",
			"desc":"set to true to make the water level equal to the Z value of the top brush surface"
		},
		"targetname":{
			"type":"string",
			"desc":"name of this water area for later reference in game",
			"value":"placeholder"
		}
	},
	{
		"classname":"wave_generator",
		"classcolor":"0.2 0.6 0.6",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"radius":{
			"type":"float",
			"min":"0",
			"max":"1000",
			"desc":"size of area affected by generator",
			"value":"20"
		},
		"amplitude":{
			"type":"float",
			"min":"0",
			"max":"1000",
			"desc":"amount wave generator pushes up and down",
			"value":"10"
		},
		"amplitude_variation":{
			"type":"float",
			"min":"0",
			"max":"1000",
			"desc":"amount amplitude value can change up or down, for randomization",
			"value":"5"
		},
		"period":{
			"type":"float",
			"min":"0",
			"max":"1000",
			"desc":"time in seconds it takes the wave generator to cycle once (up and down)",
			"value":"2"
		},
		"period_variation":{
			"type":"float",
			"min":"0",
			"max":"100",
			"desc":"amount period value can change up or down, for randomization",
			"value":"0.5"
		},
		"change_time":{
			"type":"float",
			"min":"0.01",
			"max":"100",
			"desc":"time between changes to amplitude and period",
			"value":"2"
		},
		"change_time_variation":{
			"type":"float",
			"min":"0",
			"max":"100",
			"desc":"variation in time between changes to amplitude and period",
			"value":"0.5"
		},
		"targetname":{
			"type":"string",
			"desc":"name to used to refer to this wave generator",
			"value":"placeholder"
		},
		"target":{
			"type":"string",
			"desc":"targetname of wave_water entity that this wave generator influences",
			"value":"waterX"
		}
	},
	{
		"classname":"wave_clamp",
		"classcolor":"0.2 0.2 0.3",
		"height":{
			"type":"float",
			"min":"-1000",
			"max":"1000",
			"desc":"height to clamp to, relative to wave_water",
			"value":"0"
		},
		"targetname":{
			"type":"string",
			"desc":"name to used to refer to this wave_clamp",
			"value":"placeholder"
		},
		"target":{
			"type":"string",
			"desc":"targetname of wave_water entity that this wave_clamp influences",
			"value":"waterX"
		}
	},
	{
		"classname":"mp_uspawn_influencer",
		"classcolor":"1 0 0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Static influencer for unified spawning system",
		"script_shape":{
			"type":"string",
			"enum":"cylinder,sphere",
			"desc":"Shape of this influencer.  Supported shapes for Radiant-placed static influencers are 'cylinder' and 'sphere'.",
			"value":"cylinder"
		},
		"radius":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"desc":"Radius of the influencer ( whether cylinder or sphere ).",
			"value":"0"
		},
		"height":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"desc":"Height of the cylinder ( ignored for sphere shapes ).",
			"value":"100"
		},
		"script_score":{
			"type":"float",
			"min":"0",
			"max":"100",
			"desc":"The maximum influence this influencer can have.",
			"value":"25"
		},
		"script_score_curve":{
			"type":"string",
			"enum":"constant,linear,inverse_linear,negative_to_positive",
			"desc":"The shape of the score falloff as a function of the distance from the primary cylinder axis.",
			"value":"constant"
		},
		"script_team":{
			"type":"string",
			"enum":"neutral,axis,allies",
			"desc":"Make this influencer team-specific by specifying 'axis' or 'allies'",
			"value":"neutral"
		},
		"script_gameobjectname":{
			"type":"string",
			"flags":"[all_modes],dm,hq,iwar,war,twar,sd,dom",
			"desc":"Gametypes for which the influencer is active",
			"value":"[all_modes]"
		},
		"script_twar_flag":{
			"type":"string",
			"desc":"Used to associate this influencer with a specific twar flag",
			"value":"NONE"
		}
	},
	{
		"classname":"mp_dom_spawn_flag_a",
		"classcolor":"0.5 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Players spawn near their flags at one of these positions."
	},
	{
		"classname":"mp_dom_spawn_flag_b",
		"classcolor":"0.5 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Players spawn near their flags at one of these positions."
	},
	{
		"classname":"mp_dom_spawn_flag_c",
		"classcolor":"0.5 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Players spawn near their flags at one of these positions."
	},
	{
		"classname":"mp_dom_spawn_axis_start",
		"classcolor":"1.0 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Axis players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_dom_spawn_allies_start",
		"classcolor":"0.0 1.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_ctf_spawn_axis",
		"classcolor":"0.75 0.0 0.5",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Axis players spawn away from enemies and near their team at one of these positions."
	},
	{
		"classname":"mp_ctf_spawn_allies",
		"classcolor":"0.0 0.75 0.5",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions."
	},
	{
		"classname":"mp_ctf_spawn_axis_start",
		"classcolor":"1.0 0.0 0.5",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Axis players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_ctf_spawn_allies_start",
		"classcolor":"0.0 1.0 0.5",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_dem_spawn_attacker_start",
		"classcolor":"0.0 1.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Attacking players spawn randomly at one of these positions at the beginning of a round."
	},
	{
		"classname":"mp_dem_spawn_defender_start",
		"classcolor":"1.0 0.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Defending players spawn randomly at one of these positions at the beginning of a round."
	},
	{
		"classname":"mp_dem_spawn_attackerOT_start",
		"classcolor":"0.0 1.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Attacking players spawn randomly at one of these positions at the beginning of a round."
	},
	{
		"classname":"mp_dem_spawn_defenderOT_start",
		"classcolor":"1.0 0.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Defending players spawn randomly at one of these positions at the beginning of a round."
	},
	{
		"classname":"mp_dem_spawn_attacker",
		"classcolor":"0.0 1.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Attacking players may spawn randomly at one of these positions after death."
	},
	{
		"classname":"mp_dem_spawn_attacker_a",
		"classcolor":"0.0 1.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Attacking players may spawn randomly at one of these positions after death if site A has been destroyed."
	},
	{
		"classname":"mp_dem_spawn_attacker_b",
		"classcolor":"0.0 1.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Attacking players may spawn randomly at one of these positions after death if site B has been destroyed."
	},
	{
		"classname":"mp_dem_spawn_attacker_remove_a",
		"classcolor":"0.0 1.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Attacking players may spawn randomly at one of these positions after death if site A has NOT been destroyed."
	},
	{
		"classname":"mp_dem_spawn_attacker_remove_b",
		"classcolor":"0.0 1.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Attacking players may spawn randomly at one of these positions after death if site B has NOT been destroyed."
	},
	{
		"classname":"mp_dem_spawn_defender",
		"classcolor":"1.0 0.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Defending players may spawn randomly at one of these positions after death."
	},
	{
		"classname":"mp_dem_spawn_defender_a",
		"classcolor":"1.0 0.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Defending players may spawn randomly at one of these positions after death if site A is still intact."
	},
	{
		"classname":"mp_dem_spawn_defender_b",
		"classcolor":"1.0 0.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Defending players may spawn randomly at one of these positions after death if site B is still intact."
	},
	{
		"classname":"mp_escort_spawn_attacker",
		"classcolor":"0.0 0.5 0.5",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Escorting players may spawn randomly at one of these positions after death."
	},
	{
		"classname":"mp_escort_spawn_defender",
		"classcolor":"0.5 0.5 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Defending players may spawn randomly at one of these positions after death."
	},
	{
		"classname":"mp_escort_spawn_attacker_start",
		"classcolor":"0.0 1.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Attacking players will spawn at one of these positions at round start."
	},
	{
		"classname":"mp_escort_spawn_defender_start",
		"classcolor":"1.0 0.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Defending players will spawn at one of these positions at round start."
	},
	{
		"classname":"mp_dm_spawn",
		"classcolor":"1.0 0.5 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Players spawn away from enemies at one of these positions."
	},
	{
		"classname":"mp_dm_spawn_start",
		"classcolor":"1.0 0.5 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Players spawn away from enemies at one of these positions."
	},
	{
		"classname":"mp_dom_spawn",
		"classcolor":"0.5 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Players spawn near their flags at one of these positions."
	},
	{
		"classname":"mp_dom_spawn_flag_a",
		"classcolor":"0.5 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Players spawn near their flags at one of these positions."
	},
	{
		"classname":"mp_dom_spawn_flag_b",
		"classcolor":"0.5 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Players spawn near their flags at one of these positions."
	},
	{
		"classname":"mp_dom_spawn_flag_c",
		"classcolor":"0.5 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Players spawn near their flags at one of these positions."
	},
	{
		"classname":"mp_dom_spawn_axis_start",
		"classcolor":"1.0 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Axis players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_dom_spawn_allies_start",
		"classcolor":"0.0 1.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_wager_spawn",
		"classcolor":"1.0 0.5 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Players spawn away from enemies at one of these positions."
	},
	{
		"classname":"mp_dm_spawn",
		"classcolor":"1.0 0.5 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Players spawn away from enemies at one of these positions."
	},
	{
		"classname":"mp_multi_team_spawn",
		"classcolor":"1.0 0.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Spawns used for use in some multi team game modes to open up other portions of the map for multi team scenarios."
	},
	{
		"classname":"mp_ctf_spawn_axis",
		"classcolor":"0.75 0.0 0.5",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Axis players spawn away from enemies and near their team at one of these positions."
	},
	{
		"classname":"mp_ctf_spawn_allies",
		"classcolor":"0.0 0.75 0.5",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions."
	},
	{
		"classname":"mp_ctf_spawn_axis_start",
		"classcolor":"1.0 0.0 0.5",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Axis players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_ctf_spawn_allies_start",
		"classcolor":"0.0 1.0 0.5",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_tdm_spawn",
		"classcolor":"0.0 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Players spawn away from enemies and near their team at one of these positions."
	},
	{
		"classname":"mp_tdm_spawn_axis_start",
		"classcolor":"0.5 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Axis players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_tdm_spawn_allies_start",
		"classcolor":"0.0 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_res_spawn_axis",
		"classcolor":"1.0 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Axis players spawn away from enemies and near their team at one of these positions."
	},
	{
		"classname":"mp_res_spawn_axis_a",
		"classcolor":"1.0 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Axis players spawn away from enemies and near the A flag at one of these positions."
	},
	{
		"classname":"mp_res_spawn_allies_a",
		"classcolor":"1.0 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near the A flag at one of these positions."
	},
	{
		"classname":"mp_res_spawn_allies_b",
		"classcolor":"1.0 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near the B flag at one of these positions."
	},
	{
		"classname":"mp_res_spawn_allies_a",
		"classcolor":"1.0 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near the A flag at one of these positions."
	},
	{
		"classname":"mp_res_spawn_allies",
		"classcolor":"0.0 1.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions."
	},
	{
		"classname":"mp_res_spawn_axis_start",
		"classcolor":"1.0 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Axis players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_res_spawn_allies_start",
		"classcolor":"0.0 1.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_sab_spawn_axis",
		"classcolor":"0.75 0.0 0.5",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Axis players spawn away from enemies and near their team at one of these positions."
	},
	{
		"classname":"mp_sab_spawn_allies",
		"classcolor":"0.0 0.75 0.5",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions."
	},
	{
		"classname":"mp_sab_spawn_axis_start",
		"classcolor":"1.0 0.0 0.5",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Axis players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_sab_spawn_allies_start",
		"classcolor":"0.0 1.0 0.5",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_sd_spawn_attacker",
		"classcolor":"0.0 1.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Attacking players spawn randomly at one of these positions at the beginning of a round."
	},
	{
		"classname":"mp_sd_spawn_defender",
		"classcolor":"1.0 0.0 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Defending players spawn randomly at one of these positions at the beginning of a round."
	},
	{
		"classname":"mp_tdm_spawn",
		"classcolor":"0.0 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Players spawn away from enemies and near their team at one of these positions."
	},
	{
		"classname":"mp_tdm_spawn_axis_start",
		"classcolor":"0.5 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Axis players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_tdm_spawn_allies_start",
		"classcolor":"0.0 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_tdm_spawn_team1_start",
		"classcolor":"0.5 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_tdm_spawn_team2_start",
		"classcolor":"0.5 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_tdm_spawn_team3_start",
		"classcolor":"0.5 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_tdm_spawn_team4_start",
		"classcolor":"0.5 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_tdm_spawn_team5_start",
		"classcolor":"0.5 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_tdm_spawn_team6_start",
		"classcolor":"0.5 0.5 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Allied players spawn away from enemies and near their team at one of these positions at the start of a round."
	},
	{
		"classname":"mp_global_intermission",
		"classcolor":"1.0 0.0 1.0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Intermission is randomly viewed from one of these positions. Spectators spawn randomly at one of these positions."
	},
	{
		"classname":"mp_uspawn_point",
		"classcolor":"1.0 0.549 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Unified spawn point.  A player from any team can spawn here, based on spawn influencers.  Use dvar \"useUnifiedSpawning\" to enable. Use targetname \"allies_start\" or \"axis_start\" to put a start influencer at that spawn point."
	},
	{
		"classname":"mp_mobile_spawn",
		"classcolor":"0.0 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Mobile spawn point. For use with the mobile spawn killstreak."
	},
	{
		"classname":"cp_coop_spawn",
		"classcolor":"0.0 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Player spawn positions.",
		"script_objective":{
			"type":"string",
			"desc":"Associate this spawn point with a skipto."
		}
	},
	{
		"classname":"cp_coop_respawn",
		"classcolor":"0.5 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Player respawn positions.",
		"script_objective":{
			"type":"string",
			"desc":"Associate this respawn point with a skipto."
		}
	},
	{
		"classname":"cp_global_intermission",
		"classcolor":"1.0 0.0 1.0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Intermission is randomly viewed from one of these positions. Spectators spawn randomly at one of these positions."
	},
	{
		"classname":"cp_uspawn_point",
		"classcolor":"1.0 0.549 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Unified spawn point.  A player from any team can spawn here, based on spawn influencers.  Use dvar 'useUnifiedSpawning' to enable. Use targetname 'allies_start' or 'axis_start' to put a start influencer at that spawn point."
	},
	{
		"classname":"cp_uspawn_influencer",
		"classcolor":"1 0 0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Static influencer for unified spawning system.",
		"script_shape":{
			"type":"string",
			"enum":"cylinder,sphere",
			"desc":"Shape of this influencer.",
			"value":"cylinder"
		},
		"radius":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"value":"0",
			"desc":"Radius of the influencer ( whether cylinder or sphere )."
		},
		"height":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"value":"100",
			"desc":"Height of the cylinder ( ignored for sphere shapes )."
		},
		"script_score":{
			"type":"int",
			"min":"0",
			"max":"100000",
			"value":"25",
			"desc":"The maximum influence this influencer can have."
		},
		"script_score_curve":{
			"type":"string",
			"enum":"constant,linear,inverse_linear,negative_to_positive",
			"desc":"The shape of the score falloff as a function of the distance from the primary cylinder axis.",
			"value":"constant"
		},
		"script_team":{
			"type":"string",
			"enum":"neutral,axis,allies",
			"desc":"Make this influencer team-specific by specifying 'axis or 'allies'",
			"value":"neutral"
		},
		"script_gameobjectname":{
			"type":"string",
		 "flags":"[all_modes],dm,hq,iwar,war,twar,sd,dom",
			"desc":"Gametypes for which the influencer is active.",
			"value":"[all_modes]"
		},
		"script_twar_flag":{
			"type":"string",
			"desc":"Used to associate this influencer with a specific twar flag",
			"value":"NONE"
		}
	},
	{
		"classname":"cp_mobile_spawn",
		"classcolor":"0.0 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Mobile spawn point. For use with the mobile spawn killstreak."
	},
	{
		"classname":"zm_global_intermission",
		"classcolor":"1.0 0.0 1.0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Spectators spawn randomly at one of these positions."
	},
	{
		"classname":"zm_uspawn_point",
		"classcolor":"1.0 0.549 0.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Unified spawn point.  A player from any team can spawn here, based on spawn influencers.  Use dvar 'useUnifiedSpawning' to enable. Use targetname 'allies_start' or 'axis_start' to put a start influencer at that spawn point."
	},
	{
		"classname":"zm_uspawn_influencer",
		"classcolor":"1 0 0",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"desc":"Static influencer for unified spawning system.",
		"script_shape":{
			"type":"string",
			"enum":"cylinder,sphere",
			"desc":"Shape of this influencer.",
			"value":"cylinder"
		},
		"radius":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"value":"0",
			"desc":"Radius of the influencer ( whether cylinder or sphere )."
		},
		"height":{
			"type":"float",
			"min":"0",
			"max":"100000",
			"value":"100",
			"desc":"Height of the cylinder ( ignored for sphere shapes )."
		},
		"script_score":{
			"type":"int",
			"min":"0",
			"max":"100000",
			"value":"25",
			"desc":"The maximum influence this influencer can have."
		},
		"script_score_curve":{
			"type":"string",
			"enum":"constant,linear,inverse_linear,negative_to_positive",
			"desc":"The shape of the score falloff as a function of the distance from the primary cylinder axis.",
			"value":"constant"
		},
		"script_team":{
			"type":"string",
			"enum":"neutral,axis,allies",
			"desc":"Make this influencer team-specific by specifying 'axis or 'allies'",
			"value":"neutral"
		},
		"script_gameobjectname":{
			"type":"string",
			"flags":"[all_modes],dm,hq,iwar,war,twar,sd,dom",
			"desc":"Gametypes for which the influencer is active.",
			"value":"[all_modes]"
		},
		"script_twar_flag":{
			"type":"string",
			"desc":"Used to associate this influencer with a specific twar flag",
			"value":"NONE"
		}
	},
	{
		"classname":"zm_mobile_spawn",
		"classcolor":"0.0 0.0 1.0",
		"bboxmin":"-16 -16 0",
		"bboxmax":"16 16 72",
		"desc":"Mobile spawn point. For use with the mobile spawn killstreak."
	},
	{
		"classname":"volume_litfog",
		"classcolor":".3 .5 .7",
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"hidden":"true"
		},
		"BANK_1":{
			"type":"bool",
			"spawnflag":"1",
			"value":"true",
			"group":"Banks/Bank 1"
		},
		"BANK_2":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false",
			"group":"Banks/Bank 2"
		},
		"BANK_3":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false",
			"group":"Banks/Bank 3"
		},
		"BANK_4":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false",
			"group":"Banks/Bank 4"
		},
		"AUTO_PRIORITY":{
			"type":"bool",
			"spawnflag":"2048",
			"value":"true",
			"group":"Priority"
		},
		"priority":{
			"type":"int",
			"desc":"If multiple volumes overlap the volume with the highest priority is used",
			"min":"0",
			"max":"65535",
			"value":"0",
			"group":"Priority"
		},
		"fsi":{
			"type":"string",
			"assetType":"fog",
			"desc":"The default gdt entry.",
			"value":"default",
			"group":"Defaults"
		},
		"fsi_1":{
			"type":"string",
			"assetType":"fog",
			"desc":"The fog gdt entry for bank 1",
			"value":"default",
			"group":"Banks/Bank 1"
		},
		"fsi_2":{
			"type":"string",
			"assetType":"fog",
			"desc":"The fog gdt entry for bank 2",
			"value":"default",
			"group":"Banks/Bank 2"
		},
		"fsi_3":{
			"type":"string",
			"assetType":"fog",
			"desc":"The fog gdt entry for bank 3",
			"value":"default",
			"group":"Banks/Bank 3"
		},
		"fsi_4":{
			"type":"string",
			"assetType":"fog",
			"desc":"The fog gdt entry for bank 4",
			"value":"default",
			"group":"Banks/Bank 4"
		},
		"ENABLE_SUN":{
			"type":"bool",
			"spawnflag":"32",
			"value":"true",
			"group":"Flags"
		},
		"ENABLE_LIGHTS":{
			"type":"bool",
			"spawnflag":"64",
			"value":"true",
			"group":"Flags"
		},
		"ENABLE_PROBE_LOOKUP":{
			"type":"bool",
			"spawnflag":"128",
			"value":"false",
			"group":"Flags"
		},
		"HOLDOUT":{
			"type":"bool",
			"spawnflag":"512",
			"value":"false",
			"group":"Flags"
		},
		"LIGHTSTATE_1":{
			"type":"bool",
			"spawnflag":"4096",
			"value":"true",
			"group":"Flags"
		},
		"LIGHTSTATE_2":{
			"type":"bool",
			"spawnflag":"8192",
			"value":"true",
			"group":"Flags"
		},
		"LIGHTSTATE_3":{
			"type":"bool",
			"spawnflag":"16384",
			"value":"true",
			"group":"Flags"
		},
		"LIGHTSTATE_4":{
			"type":"bool",
			"spawnflag":"32768",
			"value":"true",
			"group":"Flags"
		},
		"SCRIPT_ID":{
			"type":"int",
			"min":"0",
			"max":"255",
			"value":"0",
			"group":"Scripting"
		},
		"fogtime":{
			"type":"float",
			"desc":"Time to lerp from the old fog settings",
			"min":"0",
			"max":"100",
			"value":"1.0"
		},
		"ambientColor":{
			"type":"color",
			"desc":"Volume ambient color",
			"value":"0 0 0",
			"group":"Ambient"
		},
		"ambientIntensity":{
			"type":"float",
			"min":"0",
			"value":"1",
			"group":"Ambient"
		}
	},
	{
		"classname":"misc_volume_decal",
		"classcolor":"1 0 1",
		"bboxmin":"-16 -16 -16",
		"bboxmax":"16 16 16",
		"decalsize":{
			"type":"vec3d",
			"value":"16 16 16",
			"min":"0.25 0.25 0.25",
			"manipulatordiagonals":"false",
			"manipulator":"invisibox.xyz",
			"desc":"half size of volume decal box",
			"group":"Shape"
		},
		"model":{
			"type":"string",
			"assetType":"xmodel",
			"hidden":"true",
			"value":"vol_decal_cube"
		},
		"modeloverridematerial":{
			"type":"string",
			"value":"mtl_default_vol_decal",
			"group":"Texture"
		},
		"edgeFeatherX":{
			"type":"float",
			"min":"0",
			"max":"1",
			"value":"0",
			"singleStep":".05",
			"desc":"X feathering distance measured from edge of decal. 0 = no feathering, 1 = feathering with size of decal",
			"group":"Blending"
		},
		"edgeFeatherY":{
			"type":"float",
			"min":"0",
			"max":"1",
			"value":"0",
			"singleStep":".05",
			"desc":"Y feathering distance measured from edge of decal. 0 = no feathering, 1 = feathering with size of decal",
			"group":"Blending"
		},
		"edgeFeatherZ":{
			"type":"float",
			"min":"0",
			"max":"1",
			"value":"0",
			"singleStep":".05",
			"desc":"Z feathering distance measured from edge of decal. 0 = no feathering, 1 = feathering with size of decal",
			"group":"Blending"
		},
		"decalLayerSort":{
			"type":"string",
			"enum":"Debris (top),Damage - New,Paper,Water,Snow,Ice,Foliage,Grass,Mud,Sand,Gravel,Dirt,Signage - New,Carpet,Grunge,Damage - Old,Signage - Old,Plaster,Concrete,Brick,Rock,Asphalt (bottom)",
			"hidden":"false",
			"value":"Debris (top)",
			"group":"Texture"
		},
		"decalLayerSortEnum":{
			"type":"int",
			"hidden":"true",
			"value":"-1"
		},
		"decalEditorSortEnum":{
			"type":"int",
			"hidden":"false",
			"value":"-1",
			"group":"Texture"
		},
		"textureLockAspectRatio":{
			"type":"bool",
			"value":"false",
			"desc":"keeps texture to original aspect ratio. Prevents stretching",
			"hidden":"true"
		},
		"textureTiling":{
			"type":"vec2d",
			"value":"1 1",
			"singleStep":".05",
			"desc":"Texture tiling. Default no tiling is (1,1)",
			"hidden":"true"
		},
		"uvBaseAndScale":{
			"type":"vec4d",
			"value":"0 0 1 1",
			"hidden":"false",
			"group":"Texture"
		},
		"revealDataSize":{
			"type":"string",
			"enum":"revealAll,4x4,8x8,16x16",
			"desc":"VerK0 was here",
			"value":"revealAll",
			"group":"Blending"
		},
		"revealData":{
			"type":"string",
			"hidden":"true",
			"value":""
		},
		"origin":{
			"type":"vec3d",
			"group":"Shape",
			"value":"0 0 0"
		},
		"angles":{
			"type":"vec3d",
			"group":"Shape",
			"value":"0 0 0"
		}
	},
	{
		"classname":"vbloom_box",
		"classcolor":"0 1 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"vbloom box modifier.",
		"placement_offset":{
			"type":"float",
			"value":"72.0",
			"hidden":"true"
		},
		"BANK_1":{
			"type":"bool",
			"spawnflag":"1",
			"value":"true",
			"group":"!FLAGS"
		},
		"BANK_2":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_3":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_4":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_1":{
			"type":"bool",
			"spawnflag":"16",
			"value":"true",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_2":{
			"type":"bool",
			"spawnflag":"32",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_3":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_4":{
			"type":"bool",
			"spawnflag":"128",
			"value":"false",
			"group":"!FLAGS"
		},
		"AS_OVERLAY":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false",
			"group":"!FLAGS"
		},
		"origin":{
			"type":"vec3d",
			"group":"!POSITION",
			"value":"0 0 0"
		},
		"angles":{
			"type":"vec3d",
			"group":"!POSITION",
			"value":"0 0 0"
		},
		"size_min":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"area of effect on the negative side",
			"value":"72 72 72"
		},
		"size_max":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"area of effect on the positive side",
			"value":"72 72 72"
		},
		"blend_mins":{
			"type":"vec3d",
			"min":"1 1 1",
			"max":"32000 32000 32000",
			"singleStep":"4",
			"desc":"Distance to blend out on the negative side.",
			"value":"4 4 4",
			"group":"!SHAPE",
			"manipulatorid":"1",
			"manipulatordiagonals":"false",
			"manipulator":"-invisibox.xyz"
		},
		"blend_maxs":{
			"type":"vec3d",
			"min":"1 1 1",
			"max":"32000 32000 32000",
			"singleStep":"4",
			"desc":"Distance to blend out on the positive side.",
			"value":"4 4 4",
			"group":"!SHAPE",
			"manipulatordiagonals":"false",
			"manipulator":"invisibox.xyz"
		},
		"lvi":{
			"type":"string",
			"group":"!VBLOOM",
			"desc":"lvi file to extract bloom from."
		},
		"mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VBLOOM",
			"desc":"vbloom modifier maximum blend weight.",
			"value":"1"
		}
	},
	{
		"classname":"vlut_box",
		"classcolor":"0 1 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"vlut box modifier.",
		"placement_offset":{
			"type":"float",
			"value":"72.0",
			"hidden":"true"
		},
		"BANK_1":{
			"type":"bool",
			"spawnflag":"1",
			"value":"true",
			"group":"!FLAGS"
		},
		"BANK_2":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_3":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_4":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_1":{
			"type":"bool",
			"spawnflag":"16",
			"value":"true",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_2":{
			"type":"bool",
			"spawnflag":"32",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_3":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_4":{
			"type":"bool",
			"spawnflag":"128",
			"value":"false",
			"group":"!FLAGS"
		},
		"AS_OVERLAY":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false",
			"group":"!FLAGS"
		},
		"origin":{
			"type":"vec3d",
			"group":"!POSITION",
			"value":"0 0 0"
		},
		"angles":{
			"type":"vec3d",
			"group":"!POSITION",
			"value":"0 0 0"
		},
		"size_min":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"area of effect on the negative side",
			"value":"72 72 72"
		},
		"size_max":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"area of effect on the positive side",
			"value":"72 72 72"
		},
		"blend_mins":{
			"type":"vec3d",
			"min":"1 1 1",
			"max":"32000 32000 32000",
			"singleStep":"4",
			"desc":"Distance to blend out on the negative side.",
			"value":"4 4 4",
			"group":"!SHAPE",
			"manipulatorid":"1",
			"manipulatordiagonals":"false",
			"manipulator":"-invisibox.xyz"
		},
		"blend_maxs":{
			"type":"vec3d",
			"min":"1 1 1",
			"max":"32000 32000 32000",
			"singleStep":"4",
			"desc":"Distance to blend out on the positive side.",
			"value":"4 4 4",
			"group":"!SHAPE",
			"manipulatordiagonals":"false",
			"manipulator":"invisibox.xyz"
		},
		"index":{
			"type":"int",
			"min":"1",
			"max":"32",
			"desc":"lut texture index",
			"value":"1"
		},
		"mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VBLOOM",
			"desc":"vbloom modifier maximum blend weight.",
			"value":"1"
		}
	},
	{
		"classname":"vcolor_box",
		"classcolor":"0 1 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"vcolor box modifier.",
		"placement_offset":{
			"type":"float",
			"value":"72.0",
			"hidden":"true"
		},
		"BANK_1":{
			"type":"bool",
			"spawnflag":"1",
			"value":"true",
			"group":"!FLAGS"
		},
		"BANK_2":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_3":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_4":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_1":{
			"type":"bool",
			"spawnflag":"16",
			"value":"true",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_2":{
			"type":"bool",
			"spawnflag":"32",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_3":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_4":{
			"type":"bool",
			"spawnflag":"128",
			"value":"false",
			"group":"!FLAGS"
		},
		"AS_OVERLAY":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false",
			"group":"!FLAGS"
		},
		"origin":{
			"type":"vec3d",
			"group":"!POSITION",
			"value":"0 0 0"
		},
		"angles":{
			"type":"vec3d",
			"group":"!POSITION",
			"value":"0 0 0"
		},
		"size_min":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"area of effect on the negative side",
			"value":"72 72 72"
		},
		"size_max":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"area of effect on the positive side",
			"value":"72 72 72"
		},
		"blend_mins":{
			"type":"vec3d",
			"min":"1 1 1",
			"max":"32000 32000 32000",
			"singleStep":"4",
			"desc":"Distance to blend out on the negative side.",
			"value":"4 4 4",
			"group":"!SHAPE",
			"manipulatorid":"1",
			"manipulatordiagonals":"false",
			"manipulator":"-invisibox.xyz"
		},
		"blend_maxs":{
			"type":"vec3d",
			"min":"1 1 1",
			"max":"32000 32000 32000",
			"singleStep":"4",
			"desc":"Distance to blend out on the positive side.",
			"value":"4 4 4",
			"group":"!SHAPE",
			"manipulatordiagonals":"false",
			"manipulator":"invisibox.xyz"
		},
		"lvi":{
			"type":"string",
			"group":"!VCOLOR",
			"desc":"lvi file to extract color from."
		},
		"mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VCOLOR",
			"desc":"vcolor modifier maximum blend weight.",
			"value":"1"
		}
	},
	{
		"classname":"vcolor_omni",
		"classcolor":"0 1 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"vcolor omni modifier.",
		"placement_offset":{
			"type":"float",
			"value":"72.0",
			"hidden":"true"
		},
		"BANK_1":{
			"type":"bool",
			"spawnflag":"1",
			"value":"true",
			"group":"!FLAGS"
		},
		"BANK_2":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_3":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_4":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_1":{
			"type":"bool",
			"spawnflag":"16",
			"value":"true",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_2":{
			"type":"bool",
			"spawnflag":"32",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_3":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_4":{
			"type":"bool",
			"spawnflag":"128",
			"value":"false",
			"group":"!FLAGS"
		},
		"AS_LOOKAT":{
			"type":"bool",
			"spawnflag":"512",
			"value":"false",
			"group":"!FLAGS"
		},
		"origin":{
			"type":"vec3d",
			"group":"!POSITION",
			"value":"0 0 0"
		},
		"inner_radius":{
			"type":"float",
			"min":"0",
			"max":"32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"fall off start",
			"value":"128"
		},
		"outer_radius":{
			"type":"float",
			"min":"0",
			"max":"32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"fall off end",
			"value":"256"
		},
		"lvi":{
			"type":"string",
			"group":"!VCOLOR",
			"desc":"lvi file to extract color from."
		},
		"mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VCOLOR",
			"desc":"vcolor modifier maximum blend weight.",
			"value":"1"
		}
	},
	{
		"classname":"export_volume",
		"classcolor":"1 1 1",
		"desc":"Defines an area to be exported using the FBX export tool.",
		"targetname":{
			"type":"string"
		},
		"volume_intersection_test":{
			"type":"string",
			"enum":"BOUNDING_BOX,BOX_CENTER",
			"desc":"Changes how geometry is tested to determine if it is inside|outside of this volume.",
			"value":"BOUNDING_BOX"
		}
	},
	{
		"classname":"vcolor_spot",
		"classcolor":"0 1 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"vcolor omni modifier.",
		"placement_offset":{
			"type":"float",
			"value":"72.0",
			"hidden":"true"
		},
		"BANK_1":{
			"type":"bool",
			"spawnflag":"1",
			"value":"true",
			"group":"!FLAGS"
		},
		"BANK_2":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_3":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_4":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_1":{
			"type":"bool",
			"spawnflag":"16",
			"value":"true",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_2":{
			"type":"bool",
			"spawnflag":"32",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_3":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_4":{
			"type":"bool",
			"spawnflag":"128",
			"value":"false",
			"group":"!FLAGS"
		},
		"AS_LOOKAT":{
			"type":"bool",
			"spawnflag":"512",
			"value":"false",
			"group":"!FLAGS"
		},
		"origin":{
			"type":"vec3d",
			"group":"!POSITION",
			"value":"0 0 0"
		},
		"fov_inner":{
			"type":"float",
			"min":"0",
			"max":"180",
			"singleStep":"4",
			"group":"!SHAPE",
			"desc":"fov end",
			"value":"45"
		},
		"fov_outer":{
			"type":"float",
			"min":"0",
			"max":"180",
			"singleStep":"4",
			"group":"!SHAPE",
			"desc":"fov end",
			"value":"60"
		},
		"inner_radius":{
			"type":"float",
			"min":"0",
			"max":"32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"fall off start",
			"value":"128"
		},
		"outer_radius":{
			"type":"float",
			"min":"0",
			"max":"32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"fall off end",
			"value":"256"
		},
		"lvi":{
			"type":"string",
			"group":"!VCOLOR",
			"desc":"lvi file to extract color from."
		},
		"mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VCOLOR",
			"desc":"vcolor modifier maximum blend weight.",
			"value":"1"
		}
	},
	{
		"classname":"pbg_box",
		"classcolor":"0 1 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"position based grade box modifier.",
		"placement_offset":{
			"type":"float",
			"value":"72.0",
			"hidden":"true"
		},
		"BANK_1":{
			"type":"bool",
			"spawnflag":"1",
			"value":"true",
			"group":"!FLAGS"
		},
		"BANK_2":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_3":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_4":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_1":{
			"type":"bool",
			"spawnflag":"16",
			"value":"true",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_2":{
			"type":"bool",
			"spawnflag":"32",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_3":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_4":{
			"type":"bool",
			"spawnflag":"128",
			"value":"false",
			"group":"!FLAGS"
		},
		"AS_OVERLAY":{
			"type":"bool",
			"spawnflag":"256",
			"value":"false",
			"group":"!FLAGS"
		},
		"USE_UKKO":{
			"type":"bool",
			"spawnflag":"4096",
			"value":"false",
			"group":"!FLAGS"
		},
		"USE_BLOOM":{
			"type":"bool",
			"spawnflag":"8192",
			"value":"false",
			"group":"!FLAGS"
		},
		"USE_LUT":{
			"type":"bool",
			"spawnflag":"16384",
			"value":"false",
			"group":"!FLAGS"
		},
		"USE_COLOR":{
			"type":"bool",
			"spawnflag":"32768",
			"value":"false",
			"group":"!FLAGS"
		},
		"USE_UNDERWATER":{
			"type":"bool",
			"spawnflag":"65536",
			"value":"false",
			"group":"!FLAGS"
		},
		"origin":{
			"type":"vec3d",
			"group":"!POSITION",
			"value":"0 0 0"
		},
		"angles":{
			"type":"vec3d",
			"group":"!POSITION",
			"value":"0 0 0"
		},
		"size_min":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"area of effect on the negative side",
			"value":"72 72 72"
		},
		"size_max":{
			"type":"vec3d",
			"min":"-32000 -32000 -32000",
			"max":"32000 32000 32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"area of effect on the positive side",
			"value":"72 72 72"
		},
		"blend_mins":{
			"type":"vec3d",
			"min":"1 1 1",
			"max":"32000 32000 32000",
			"singleStep":"4",
			"desc":"Distance to blend out on the negative side.",
			"value":"4 4 4",
			"group":"!SHAPE",
			"manipulatorid":"1",
			"manipulatordiagonals":"false",
			"manipulator":"-invisibox.xyz"
		},
		"blend_maxs":{
			"type":"vec3d",
			"min":"1 1 1",
			"max":"32000 32000 32000",
			"singleStep":"4",
			"desc":"Distance to blend out on the positive side.",
			"value":"4 4 4",
			"group":"!SHAPE",
			"manipulatordiagonals":"false",
			"manipulator":"invisibox.xyz"
		},
		"ukko_index":{
			"type":"int",
			"group":"!VUKKO",
			"min":"1",
			"max":"32",
			"desc":"ukko atlas index",
			"value":"1"
		},
		"ukko_mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VUKKO",
			"desc":"ukko index maximum blend weight.",
			"value":"1"
		},
		"bloom_lvi":{
			"type":"string",
			"fileExtension":"lvi",
			"filePath":"%TA_GAME_PATH%/share/raw/grades",
			"fileTrimLeft":"%TA_GAME_PATH%/share/raw/grades/",
			"fileTrimRight":".lvi",
			"group":"!VBLOOM",
			"desc":"lvi file to extract bloom from."
		},
		"bloom_mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VBLOOM",
			"desc":"bloom lvi maximum blend weight.",
			"value":"1"
		},
		"lut_index":{
			"type":"int",
			"group":"!VLUT",
			"min":"1",
			"max":"32",
			"desc":"lut texture index",
			"value":"1"
		},
		"lut_mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VLUT",
			"desc":"lut index maximum blend weight.",
			"value":"1"
		},
		"color_lvi":{
			"type":"string",
			"fileExtension":"lvi",
			"filePath":"%TA_GAME_PATH%/share/raw/grades",
			"fileTrimLeft":"%TA_GAME_PATH%/share/raw/grades/",
			"fileTrimRight":".lvi",
			"group":"!VCOLOR",
			"desc":"lvi file to extract color from."
		},
		"color_mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VCOLOR",
			"desc":"color lvi maximum blend weight.",
			"value":"1"
		},
		"underwater_mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!UNDERWATER",
			"desc":"underwater blend.",
			"value":"1"
		},
		"underwater_halfdistance":{
			"type":"float",
			"min":"1",
			"max":"20000",
			"singleStep":"10",
			"group":"!UNDERWATER",
			"desc":"underwater 50% blur distance.",
			"value":"450"
		},
		"underwater_absorptionRGB":{
			"type":"vec3d",
			"min":"0 0 0",
			"max":"1 1 1",
			"singleStep":"0.1",
			"group":"!UNDERWATER",
			"desc":"underwater color absorption coefficients.",
			"value":"0.34 0.0325 0.0114"
		}
	},
	{
		"classname":"pbg_omni",
		"classcolor":"0 1 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"position based grade omni modifier.",
		"placement_offset":{
			"type":"float",
			"value":"72.0",
			"hidden":"true"
		},
		"BANK_1":{
			"type":"bool",
			"spawnflag":"1",
			"value":"true",
			"group":"!FLAGS"
		},
		"BANK_2":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_3":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_4":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_1":{
			"type":"bool",
			"spawnflag":"16",
			"value":"true",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_2":{
			"type":"bool",
			"spawnflag":"32",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_3":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_4":{
			"type":"bool",
			"spawnflag":"128",
			"value":"false",
			"group":"!FLAGS"
		},
		"AS_LOOKAT":{
			"type":"bool",
			"spawnflag":"512",
			"value":"false",
			"group":"!FLAGS"
		},
		"USE_UKKO":{
			"type":"bool",
			"spawnflag":"4096",
			"value":"false",
			"group":"!FLAGS"
		},
		"USE_BLOOM":{
			"type":"bool",
			"spawnflag":"8192",
			"value":"false",
			"group":"!FLAGS"
		},
		"USE_LUT":{
			"type":"bool",
			"spawnflag":"16384",
			"value":"false",
			"group":"!FLAGS"
		},
		"USE_COLOR":{
			"type":"bool",
			"spawnflag":"32768",
			"value":"false",
			"group":"!FLAGS"
		},
		"origin":{
			"type":"vec3d",
			"group":"!POSITION",
			"value":"0 0 0"
		},
		"inner_radius":{
			"type":"float",
			"min":"0",
			"max":"32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"fall off start",
			"value":"128"
		},
		"outer_radius":{
			"type":"float",
			"min":"0",
			"max":"32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"fall off end",
			"value":"256"
		},
		"ukko_index":{
			"type":"int",
			"group":"!VUKKO",
			"min":"1",
			"max":"32",
			"desc":"ukko atlas index",
			"value":"1"
		},
		"ukko_mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VUKKO",
			"desc":"ukko index maximum blend weight.",
			"value":"1"
		},
		"bloom_lvi":{
			"type":"string",
			"fileExtension":"lvi",
			"filePath":"%TA_GAME_PATH%/share/raw/grades",
			"fileTrimLeft":"%TA_GAME_PATH%/share/raw/grades/",
			"fileTrimRight":".lvi",
			"group":"!VBLOOM",
			"desc":"lvi file to extract bloom from."
		},
		"bloom_mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VBLOOM",
			"desc":"bloom lvi maximum blend weight.",
			"value":"1"
		},
		"lut_index":{
			"type":"int",
			"group":"!VLUT",
			"min":"1",
			"max":"32",
			"desc":"lut texture index",
			"value":"1"
		},
		"lut_mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VLUT",
			"desc":"lut index maximum blend weight.",
			"value":"1"
		},
		"color_lvi":{
			"type":"string",
			"fileExtension":"lvi",
			"filePath":"%TA_GAME_PATH%/share/raw/grades",
			"fileTrimLeft":"%TA_GAME_PATH%/share/raw/grades/",
			"fileTrimRight":".lvi",
			"group":"!VCOLOR",
			"desc":"lvi file to extract color from."
		},
		"color_mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VCOLOR",
			"desc":"color lvi maximum blend weight.",
			"value":"1"
		}
	},
	{
		"classname":"pbg_spot",
		"classcolor":"0 1 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"position based grade spot modifier.",
		"placement_offset":{
			"type":"float",
			"value":"72.0",
			"hidden":"true"
		},
		"BANK_1":{
			"type":"bool",
			"spawnflag":"1",
			"value":"true",
			"group":"!FLAGS"
		},
		"BANK_2":{
			"type":"bool",
			"spawnflag":"2",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_3":{
			"type":"bool",
			"spawnflag":"4",
			"value":"false",
			"group":"!FLAGS"
		},
		"BANK_4":{
			"type":"bool",
			"spawnflag":"8",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_1":{
			"type":"bool",
			"spawnflag":"16",
			"value":"true",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_2":{
			"type":"bool",
			"spawnflag":"32",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_3":{
			"type":"bool",
			"spawnflag":"64",
			"value":"false",
			"group":"!FLAGS"
		},
		"LIGHTSTATE_4":{
			"type":"bool",
			"spawnflag":"128",
			"value":"false",
			"group":"!FLAGS"
		},
		"AS_LOOKAT":{
			"type":"bool",
			"spawnflag":"512",
			"value":"false",
			"group":"!FLAGS"
		},
		"USE_UKKO":{
			"type":"bool",
			"spawnflag":"4096",
			"value":"false",
			"group":"!FLAGS"
		},
		"USE_BLOOM":{
			"type":"bool",
			"spawnflag":"8192",
			"value":"false",
			"group":"!FLAGS"
		},
		"USE_LUT":{
			"type":"bool",
			"spawnflag":"16384",
			"value":"false",
			"group":"!FLAGS"
		},
		"USE_COLOR":{
			"type":"bool",
			"spawnflag":"32768",
			"value":"false",
			"group":"!FLAGS"
		},
		"origin":{
			"type":"vec3d",
			"group":"!POSITION",
			"value":"0 0 0"
		},
		"inner_radius":{
			"type":"float",
			"min":"0",
			"max":"32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"fall off start",
			"value":"128"
		},
		"outer_radius":{
			"type":"float",
			"min":"0",
			"max":"32000",
			"singleStep":"8",
			"group":"!SHAPE",
			"desc":"fall off end",
			"value":"256"
		},
		"fov_inner":{
			"type":"float",
			"min":"0",
			"max":"180",
			"singleStep":"4",
			"group":"!SHAPE",
			"desc":"fov end",
			"value":"45"
		},
		"fov_outer":{
			"type":"float",
			"min":"0",
			"max":"180",
			"singleStep":"4",
			"group":"!SHAPE",
			"desc":"fov end",
			"value":"60"
		},
		"ukko_index":{
			"type":"int",
			"group":"!VUKKO",
			"min":"1",
			"max":"32",
			"desc":"ukko atlas index",
			"value":"1"
		},
		"ukko_mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VUKKO",
			"desc":"ukko index maximum blend weight.",
			"value":"1"
		},
		"bloom_lvi":{
			"type":"string",
			"fileExtension":"lvi",
			"filePath":"%TA_GAME_PATH%/share/raw/grades",
			"fileTrimLeft":"%TA_GAME_PATH%/share/raw/grades/",
			"fileTrimRight":".lvi",
			"group":"!VBLOOM",
			"desc":"lvi file to extract bloom from."
		},
		"bloom_mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VBLOOM",
			"desc":"bloom lvi maximum blend weight.",
			"value":"1"
		},
		"lut_index":{
			"type":"int",
			"group":"!VLUT",
			"min":"1",
			"max":"32",
			"desc":"lut texture index",
			"value":"1"
		},
		"lut_mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VLUT",
			"desc":"lut index maximum blend weight.",
			"value":"1"
		},
		"color_lvi":{
			"type":"string",
			"fileExtension":"lvi",
			"filePath":"%TA_GAME_PATH%/share/raw/grades",
			"fileTrimLeft":"%TA_GAME_PATH%/share/raw/grades/",
			"fileTrimRight":".lvi",
			"group":"!VCOLOR",
			"desc":"lvi file to extract color from."
		},
		"color_mix":{
			"type":"float",
			"min":"0",
			"max":"1",
			"singleStep":"0.1",
			"group":"!VCOLOR",
			"desc":"color lvi maximum blend weight.",
			"value":"1"
		}
	},
	{
		"classname":"fpstool_camera",
		"classcolor":"0 1 0",
		"bboxmin":"-4 -4 -4",
		"bboxmax":"4 4 4",
		"desc":"A position for capturing fpsTool data.",
		"name":{
			"type":"string",
			"value":""
		},
		"screenshot":{
			"type":"bool",
			"desc":"Take a screenshot at this location.",
			"value":"false"
		},
		"dvar1_name":{
			"type":"string",
			"value":"",
			"group":"Dvar1"
		},
		"dvar1_min":{
			"type":"int",
			"value":"",
			"group":"Dvar1"
		},
		"dvar1_max":{
			"type":"int",
			"value":"",
			"group":"Dvar1"
		},
		"dvar2_name":{
			"type":"string",
			"value":"",
			"group":"Dvar2"
		},
		"dvar2_min":{
			"type":"int",
			"value":"",
			"group":"Dvar2"
		},
		"dvar2_max":{
			"type":"int",
			"value":"",
			"group":"Dvar2"
		}
	},
	{
		"classname":"zm_spawner_riserLocation",
		"classcolor":"0 1 0",
		"bboxmin":"-8 -8 -8",
		"bboxmax":"8 8 8",
		"targetname":{
			"type":"string",
			"group":"ZONE"
		},
		"_color":{
			"type":"color",
			"value":"1 0.5 0",
			"group":"RADIANT",
			"hidden":"true"
		},
		"script_string":{
			"type":"string",
			"value":"find_flesh",
			"group":"TYPE"
		},
		"script_noteworthy":{
			"type":"string",
			"value":"riser_location",
			"group":"TYPE"
		},
		"origin":{
			"type":"vec3d",
			"value":"0 0 0",
			"group":"RADIANT"
		},
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"group":"RADIANT"
		}
	},
	{
		"classname":"zm_spawner_spawnLocation",
		"classcolor":"0 1 0",
		"bboxmin":"-8 -8 -8",
		"bboxmax":"8 8 8",
		"targetname":{
			"type":"string",
			"group":"ZONE"
		},
		"_color":{
			"type":"color",
			"value":"1 0.5 0",
			"group":"RADIANT",
			"hidden":"true"
		},
		"script_string":{
			"type":"string",
			"value":"find_flesh",
			"group":"TYPE"
		},
		"script_noteworthy":{
			"type":"string",
			"value":"spawn_location",
			"group":"TYPE"
		},
		"origin":{
			"type":"vec3d",
			"value":"0 0 0",
			"group":"RADIANT"
		},
		"angles":{
			"type":"vec3d",
			"value":"0 0 0",
			"group":"RADIANT"
		}
	}
]
